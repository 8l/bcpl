                                Source Listing                  10-APR-2013 16:26:26  HP C++ V7.2-018                   Page 1
                                                                10-APR-2013 16:20:53  CINTERP.C;81

	      1 /*
	      2 ** This is a 32 bit CINTCODE interpreter written in C
	      3 **
	      4 ** (c) Copyright:  Martin Richards  October 2010
	      5 **
	      6 ** If FASTyes if defined, most of the debugging aids are
	      7 ** disabled making it functionally equivalent to the
	      8 ** handwritten assembly code versions provided for some
	      9 ** architectures.
	     10 **
	     11 ** The fast version defines the function cintasm
	     12 ** while the slow version defines interpret.
	     13 
	     14 09/04/10
	     15 Put time the time stamp (days, msecs) in the rootnode every 10000 cintcode
	     16 instructions.
	     17 */
	     18 
	     19 #ifndef forSHwinCE
	     20 #include <stdio.h>
	   1618 #include <stdlib.h>
	   3708 #endif
	   3709 
	   3710 /* cintsys.h contains machine/system dependent #defines  */
	   3711 #include "cintsys.h"
	   8803 
	   8804 #ifndef FASTyes
	   8805 
	   8806 #define TRACINGyes
	   8807 #define TALLYyes
	   8808 #define WATCHyes
	   8809 #define MEMCHKyes
	   8810 #define COUNTyes
	   8811 #endif
	   8812 
	   8813 #ifdef MEMCHKyes
	   8814 #define MC1(a) if((unsigned BCPLWORD)a>memupb){W[3]=a; res=12; pc--;  goto ret; }
	   8815 #define MC2(a) if((unsigned BCPLWORD)a>memupb){W[3]=a; res=12; pc-=2; goto ret; }
	   8816 #define MC3(a) if((unsigned BCPLWORD)a>memupb){W[3]=a; res=12; pc-=3; goto ret; }
	   8817 #define MC5(a) if((unsigned BCPLWORD)a>memupb){W[3]=a; res=12; pc-=5; goto ret; }
	   8818 #else
       X   8819 #define MC1(n)
       X   8820 #define MC2(n)
       X   8821 #define MC3(n)
       X   8822 #define MC5(n)
       X   8823 #endif
	   8824 
	   8825 /* Declared in cintsys.c */
	   8826 extern BCPLWORD result2;
	   8827 
	   8828 extern BCPLWORD *lastWp;    /* Latest setting of Wp */
	   8829 extern BCPLWORD *lastWg;    /* Latest setting of Wg */
	   8830 
	   8831 extern int tracing;
	   8832 extern BCPLWORD memupb;
	   8833 
	   8834 extern BCPLWORD *tallyv;

                                Source Listing                  10-APR-2013 16:26:26  HP C++ V7.2-018                   Page 2
                                                                10-APR-2013 16:20:53  CINTERP.C;81

	   8835 extern BCPLWORD tallylim;
	   8836 
	   8837 extern BCPLWORD dosys(BCPLWORD p, BCPLWORD g);
	   8838 extern BCPLWORD doflt(BCPLWORD op, BCPLWORD a, BCPLWORD b);
	   8839 extern BCPLWORD muldiv(BCPLWORD a, BCPLWORD b, BCPLWORD c);
	   8840 
	   8841 extern void wrcode(char *form, BCPLWORD f, BCPLWORD a); 
	   8842 extern void wrfcode(BCPLWORD f);
	   8843 extern void trace(BCPLWORD pc, BCPLWORD p, BCPLWORD a, BCPLWORD b);
	   8844 extern BCPLWORD timestamp(BCPLWORD *datstamp);
	   8845 
	   8846 
	   8847 #define Gn_currco      7
	   8848 #define Gn_result2    10
	   8849 
	   8850 /* CINTCODE function codes  */
	   8851 
	   8852 #define F_0       0
	   8853 
	   8854 #define F_fltop   1
	   8855 #define F_brk     2
	   8856 #define F_k0      0
	   8857 #define F_lf     12
	   8858 #define F_lm     14
	   8859 #define F_lm1    15
	   8860 #define F_l0     16
	   8861 #define F_fhop   27
	   8862 #define F_jeq    28
	   8863 
	   8864 #define F_k      32
	   8865 #define F_kh     33
	   8866 #define F_kw     34
	   8867 #define F_k0g    32
	   8868 #define F_k0g1   (F_k0g+32)
	   8869 #define F_k0gh   (F_k0g+64)
	   8870 #define F_s0g    44
	   8871 #define F_s0g1   (F_s0g+32)
	   8872 #define F_s0gh   (F_s0g+64)
	   8873 #define F_l0g    45
	   8874 #define F_l0g1   (F_l0g+32)
	   8875 #define F_l0gh   (F_l0g+64)
	   8876 #define F_l1g    46
	   8877 #define F_l1g1   (F_l1g+32)
	   8878 #define F_l1gh   (F_l1g+64)
	   8879 #define F_l2g    47
	   8880 #define F_l2g1   (F_l2g+32)
	   8881 #define F_l2gh   (F_l2g+64)
	   8882 #define F_lg     48
	   8883 #define F_lg1    (F_lg+32)
	   8884 #define F_lgh    (F_lg+64)
	   8885 #define F_sg     49
	   8886 #define F_sg1    (F_sg+32)
	   8887 #define F_sgh    (F_sg+64)
	   8888 #define F_llg    50
	   8889 #define F_llg1   (F_llg+32)
	   8890 #define F_llgh   (F_llg+64)
	   8891 #define F_ag     51

                                Source Listing                  10-APR-2013 16:26:26  HP C++ V7.2-018                   Page 3
                                                                10-APR-2013 16:20:53  CINTERP.C;81

	   8892 #define F_ag1    (F_ag+32)
	   8893 #define F_agh    (F_ag+64)
	   8894 #define F_mul    52
	   8895 #define F_div    53
	   8896 #define F_rem    54
	   8897 #define F_xor    55
	   8898 #define F_sl     56
	   8899 #define F_ll     58
	   8900 #define F_jne    60
	   8901 
	   8902 #define F_llp    64
	   8903 #define F_llph   65
	   8904 #define F_llpw   66
	   8905 #define F_add    84
	   8906 #define F_sub    85
	   8907 #define F_lsh    86
	   8908 #define F_rsh    87
	   8909 #define F_and    88
	   8910 #define F_or     89
	   8911 #define F_lll    90
	   8912 #define F_jls    92
	   8913 
	   8914 #define F_l      96
	   8915 #define F_lh     97
	   8916 #define F_lw     98
	   8917 #define F_rv    116
	   8918 #define F_rtn   123
	   8919 #define F_jgr   124
	   8920 
	   8921 #define F_lp    128
	   8922 #define F_lph   129
	   8923 #define F_lpw   130
	   8924 #define F_lp0   128
	   8925 #define F_sys   145
	   8926 #define F_swb   146
	   8927 #define F_swl   147
	   8928 #define F_st    148
	   8929 #define F_st0   148
	   8930 #define F_stp0  149
	   8931 #define F_goto  155
	   8932 #define F_jle   156
	   8933 
	   8934 #define F_sp    160
	   8935 #define F_sph   161
	   8936 #define F_spw   162
	   8937 #define F_sp0   160
	   8938 #define F_s0    176
	   8939 #define F_xch   181
	   8940 #define F_gbyt  182
	   8941 #define F_pbyt  183
	   8942 #define F_atc   184
	   8943 #define F_atb   185
	   8944 #define F_j     186
	   8945 #define F_jge   188
	   8946 
	   8947 #define F_ap    192
	   8948 #define F_aph   193

                                Source Listing                  10-APR-2013 16:26:26  HP C++ V7.2-018                   Page 4
                                                                10-APR-2013 16:20:53  CINTERP.C;81

	   8949 #define F_apw   194
	   8950 #define F_ap0   192
	   8951 
	   8952 #define F_xpbyt 205
	   8953 #define F_lmh   206
	   8954 #define F_btc   207
	   8955 #define F_nop   208
	   8956 #define F_a0    208
	   8957 #define F_rvp0  211
	   8958 #define F_st0p0 216
	   8959 #define F_st1p0 218
	   8960 
	   8961 #define F_mw    223
	   8962 
	   8963 #define F_a     224
	   8964 #define F_ah    225
	   8965 #define F_aw    226
	   8966 #define F_l0p0  224
	   8967 #define F_s     237
	   8968 #define F_sh    238
	   8969 
	   8970 #define F_mdiv  239
	   8971 #define F_chgco 240
	   8972 #define F_neg   241
	   8973 #define F_not   242
	   8974 #define F_l1p0  240
	   8975 #define F_l2p0  244
	   8976 #define F_l3p0  247 
	   8977 #define F_l4p0  249
	   8978 
	   8979 #define F_selld 254
	   8980 #define F_selst 255
	   8981 #define F_255   255
	   8982 
	   8983 #define sf_none    0     // Assignment operators
	   8984 #define sf_vecap   1
	   8985 #define sf_fmult   2
	   8986 #define sf_fdiv    3
	   8987 #define sf_fplus   4
	   8988 #define sf_fminus  5
	   8989 #define sf_mult    6
	   8990 #define sf_div     7
	   8991 #define sf_rem     8
	   8992 #define sf_plus    9
	   8993 #define sf_minus  10
	   8994 #define sf_lshift 11
	   8995 #define sf_rshift 12
	   8996 #define sf_logand 13
	   8997 #define sf_logor  14
	   8998 #define sf_eqv    15
	   8999 #define sf_neqv   16
	   9000 
	   9001 /* The function interpret is designed to be separately compiled,
	   9002 ** and possibly implemented in assembly language.
	   9003 **
	   9004 ** Unless either TRACINGyes or TALLYyes are defined, its only free
	   9005 ** variable is the function dosys(p, g).

                                Source Listing                  10-APR-2013 16:26:26  HP C++ V7.2-018                   Page 5
                                                                10-APR-2013 16:20:53  CINTERP.C;81

	   9006 **
	   9007 ** mem  is the pointer to the cintcode memory.
	   9008 ** regs is the position in the Cintcode memory where the initial
	   9009 **      value of the Cintcode registers.
	   9010 **
	   9011 ** interpret executes Cintcode instructions and returns with an
	   9012 ** integer result as follows:
	   9013 
	   9014 **    -2      sys(Sys_dumpmem) cause a memory dump to DUMP.mem
	   9015 **    -1 *    sys(Sys_setcount, val) called
	   9016 **     0 *    sys(Sys_quit, 0) called
	   9017 **     1      Non existant instruction
	   9018 **     2      Brk instruction
	   9019 **     3      Zero count
	   9020 **     4      Negative pc
	   9021 **     5      Division by zero
	   9022 **    10      Cintasm single step trap
	   9023 **    11      Contents of watch address has changed
	   9024 **    12      PC out of range
	   9025 **    13      Unknown floating point operation
	   9026 **     n      sys(Sys_quit, n) called
	   9027 **
	   9028 ** On return the Cintcode registers are dumped back in the vector regs
	   9029 */
	   9030 
	   9031 #ifdef FASTyes
       X   9032 extern BCPLWORD *watchaddr, watchval;
       X   9033 #else
	   9034 BCPLWORD *watchaddr=0, watchval=0;
	   9035 #endif
	   9036 
	   9037 #define B (BP W)
	   9038 #define SB (SBP W)
	   9039 #define H (HP W)
	   9040 #define SH (SHP W)
	   9041 
	   9042 #ifdef BIGENDER
       X   9043 #define GH(x) ((WD B[x+0]<<8) | B[x+1])
       X   9044 #define GW(x) ((((((WD B[x]<<8)|B[x+1])<<8)|B[x+2])<<8)|B[x+3])
       X   9045 #else
	   9046 #define GH(x) ((WD B[x+1]<<8) | B[x])
	   9047 #define GW(x) ((((((WD B[x+3]<<8)|B[x+2])<<8)|B[x+1])<<8)|B[x])
	   9048 #endif
	   9049 
	   9050 static float itof(BCPLWORD a) {
	   9051   union { BCPLWORD i; float f; } x;
	   9052   x.i = a;
	   9053   return x.f;
	   9054 }
	   9055 
	   9056 #ifdef FASTyes
       X   9057 int cintasm(BCPLWORD regs, BCPLWORDpt mem)
       X   9058 #else
	   9059 int interpret(BCPLWORD regs, BCPLWORDpt mem)
	   9060 #endif
	   9061 
	   9062 {  BCPLWORDpt W = mem;

                                Source Listing                  10-APR-2013 16:26:26  HP C++ V7.2-018                   Page 6
                                                                10-APR-2013 16:20:53  CINTERP.C;81

	   9063 
	   9064    int icount = 0;
	   9065 
	   9066    BCPLWORD           a  = W[regs+0];
	   9067    BCPLWORD           b  = W[regs+1];
	   9068    BCPLWORD                    c  = W[regs+2];
	   9069    BCPLWORD                    p  = W[regs+3]>>B2Wsh;
	   9070    BCPLWORD                    g  = W[regs+4]>>B2Wsh;
	   9071    BCPLWORD                    st = W[regs+5];
	   9072    BCPLWORD           pc = W[regs+6];
	   9073    BCPLWORD                    count = W[regs+7];
	   9074    BCPLWORD                    mw = W[regs+8];
	   9075 
	   9076    BCPLWORDpt Wp  = W+p,    /* Optimise access to the stack */
	   9077                        Wg  = W+g,    /* Optimise access to the global vector */
	   9078                        Wg1 = W+g+256;
	   9079 
	   9080    BCPLWORD res, k, i;
	   9081 
	   9082    /*   tracing = 1; */
	   9083 
	   9084    if (pc<0) goto negpc;
	   9085 
	   9086 fetch:
	   9087 
	   9088 #ifdef WATCHyes
	   9089    /* Special watch debugging aid */
	   9090    if(watchaddr && *watchaddr!=watchval)
	   9091    { /*
	   9092        printf("%7" FormD ": changed from %7" FormD "(%8" FormX ") to %7" FormD
	   9093               "(%8" FormX ")\n",
	   9094               watchaddr-W, watchval, (UBCPLWORD)watchval,
	   9095               *watchaddr, (UBCPLWORD)*watchaddr);
	   9096      */
	   9097      watchval = *watchaddr;
	   9098      W[1] = watchaddr-W;
	   9099      W[2] = watchval;
	   9100      res = 11;        /* Contents of watch address has changed */
	   9101      goto ret;
	   9102    }
	   9103    /* End of watch code */
	   9104 #endif
	   9105 
	   9106    /* count>=0  means execute count instructions (slow interpreter)
	   9107       count=-1  means go on for ever (fast interpreter)
	   9108       count=-2  means single step the fast interpreter
	   9109    */
	   9110 #ifdef COUNTyes
	   9111    if (count>=0)
	   9112    { if (count==0) { res = 3; goto ret; }
	   9113      count--;
	   9114    }
	   9115 #endif
	   9116 
	   9117 #ifdef TRACINGyes
	   9118    if (tracing) trace(pc, p, a, b);
	   9119 #endif

                                Source Listing                  10-APR-2013 16:26:26  HP C++ V7.2-018                   Page 7
                                                                10-APR-2013 16:20:53  CINTERP.C;81

	   9120 
	   9121 #ifdef TALLYyes
	   9122    if (pc<tallylim && pc>0) tallyv[pc]++;
	   9123 #endif
	   9124 
	   9125 if(--icount<=0) {
	   9126   // Update the days and msecs fields in the rootnode
	   9127   timestamp(&W[rootnode+Rtn_days]);
	   9128   icount = 10000;
	   9129   // icount     bench100 time
	   9130   //   1      923.370
	   9131   //   10      99.780
	   9132   //   100     16.040
	   9133   //   1000     7.470
	   9134   //   10000    6.600 (gcc -O9)
	   9135   //   100000   6.510 (gcc -O3)
	   9136   //            5.550 without this code omitted (gcc -O1)
	   9137   //trpush(0x11000000+W[rootnode+Rtn_msecs]);
	   9138 }
	   9139 
	   9140 switch(B[pc++])
	   9141 {  default:
	   9142    case F_0:     /* Cases F_0 and F_255 have been added explicitly to   */
	   9143      //case F_255:   /* improve the compiled code (with luck)               */
	   9144                  res = 1; pc--; goto ret; /* Unimplemented instruction  */
	   9145 
	   9146      // Added 21/7/10
	   9147    case F_fltop:
	   9148      { BCPLWORD op = B[pc++];
	   9149        //printf("fltop op=%" FormD "\n", op);
	   9150        switch (op) {
	   9151        default:
	   9152          res = 13; pc -=2; goto ret;
	   9153 
	   9154        case fl_avail:
	   9155          a = -1; goto fetch;
	   9156 
	   9157        case fl_mk:
	   9158        { BCPLWORD exponent = B[pc++]; // Signed byte
	   9159          if (exponent>=128) exponent = exponent-256;
	   9160 	 //printf("fl_mk calling doflt(%" FormD ", %" FormD ", %" FormD ")\n",
	   9161          //        op, a, exponent);
	   9162          a = doflt(op, a, exponent);
	   9163          goto fetch;
	   9164        }
	   9165 
	   9166        case fl_float:
	   9167        case fl_fix:
	   9168        case fl_pos:
	   9169        case fl_neg:
	   9170        case fl_abs:
	   9171          a = doflt(op, a, 0);
	   9172          goto fetch;
	   9173 
	   9174        case fl_mult:
	   9175        case fl_div:
	   9176        case fl_plus:

                                Source Listing                  10-APR-2013 16:26:26  HP C++ V7.2-018                   Page 8
                                                                10-APR-2013 16:20:53  CINTERP.C;81

	   9177        case fl_minus:
	   9178        case fl_eq:
	   9179        case fl_ne:
	   9180        case fl_ls:
	   9181        case fl_gr:
	   9182        case fl_le:
	   9183        case fl_ge:
	   9184          a = doflt(op, b, a);
	   9185          goto fetch;
	   9186        }
	   9187      }
	   9188 
	   9189      // Added 21/7/10
	   9190    case F_selld:  // load a field  SELLD len sh
	   9191      { BCPLWORD len = B[pc++];
	   9192        BCPLWORD sh  = B[pc++];
	   9193        BCPLWORD mask = -1;
	   9194        if (len) mask = (1<<len) - 1;
	   9195        a = (W[a]>>sh) & mask;
	   9196        goto fetch;
	   9197      }
	   9198 
	   9199      // Added 21/7/10
	   9200    case F_selst: // SLCT len:sh:0 OF <arg1> op:= <arg2>
	   9201                  //      len sh         a   op      b
	   9202      { BCPLWORD *ptr = &W[a];
	   9203        BCPLWORD op  = B[pc++];
	   9204        BCPLWORD len = B[pc++];
	   9205        BCPLWORD sh  = B[pc++];
	   9206        BCPLWORD mask;
	   9207        BCPLWORD val;
	   9208        BCPLWORD oldval;
	   9209        union IorF { BCPLWORD i; float f; } x, y;
	   9210 
	   9211        if(len==0) {
	   9212          mask = UWD(-1) >> sh;
	   9213        } else {
	   9214          mask = (1<<len) - 1;
	   9215        }
	   9216        val = WD(((UWD*ptr)>>sh)) & mask;
	   9217        oldval = val; // Old value shifted down
	   9218 
	   9219        // val and oldval are both the old field value shifted down
	   9220        switch(op) {
	   9221        default:          a = 0; goto fetch;
	   9222        case sf_none:     val = b;                 break;
	   9223        case sf_vecap:    val = W[val + b];        break;
	   9224        case sf_fmult:    x.i = val; y.i = b;
	   9225                          x.f = x.f * y.f;
	   9226                          val = x.i;               break;
	   9227        case sf_fdiv:     x.i = val; y.i = b;
	   9228                          x.f = x.f / y.f;
	   9229                          val = x.i;               break;
	   9230        case sf_fplus:    x.i = val; y.i = b;
	   9231                          x.f = x.f + y.f;
	   9232                          val = x.i;               break;
	   9233        case sf_fminus:   x.i = val; y.i = b;

                                Source Listing                  10-APR-2013 16:26:26  HP C++ V7.2-018                   Page 9
                                                                10-APR-2013 16:20:53  CINTERP.C;81

	   9234                          x.f = x.f - y.f;
	   9235                          val = x.i;               break;
	   9236        case sf_mult:     val *= b;                break;
	   9237        case sf_div:      val /= b;                break;
	   9238        case sf_rem:      val %= b;                break;
	   9239        case sf_plus:     val += b;                break;
	   9240        case sf_minus:    val -= b;                break;
	   9241        case sf_lshift:   if (b>=BperW) val=0; /* bug */
	   9242                          val <<= b;               break;
	   9243        case sf_rshift:   if (b>=BperW) val=0; /* bug */
	   9244 	                 val = WD((UWD val)>>b);  break;
	   9245        case sf_logand:   val &= b;                break;
	   9246        case sf_logor:    val |= b;                break;
	   9247        case sf_eqv:      val = ~(val ^ b);        break;
	   9248        case sf_neqv:     val ^= b;                break;
	   9249        }
	   9250        //printf("selst: op=%" FormD " len=%" FormD " sh=%" FormD
	   9251                 " oldval=%08" FormX " val=%08" FormX " mask=%08" FormX "\n",
	   9252        //       op, len, sh, (UBCPLWORD)oldval, (UBCPLWORD)val, (UBCPLWORD)mask);
	   9253        // Replace field by new value
	   9254        *ptr ^= ((val ^ oldval)&mask) << sh;
	   9255        goto fetch;
	   9256      }
	   9257 
	   9258    case F_mul:   a = b * a;        goto fetch;
	   9259    case F_div:   if(a==0) {res = 5; pc--; goto ret; } /* Division by zero */
	   9260                  a = b / a;        goto fetch;
	   9261    case F_rem:   if(a==0) {res = 5; pc--; goto ret; } /* Division by zero */
	   9262                  a = b % a;        goto fetch;
	   9263    case F_add:   a = b + a;        goto fetch;
	   9264    case F_sub:   a = b - a;        goto fetch;
	   9265    case F_neg:   a = - a;          goto fetch;
	   9266 
	   9267    case F_fhop:  a = 0; pc++;      goto fetch;
	   9268 
	   9269    case F_lsh:   if (a>=BperW) b=0; /* bug */
	   9270                  a = b << a;       goto fetch;
	   9271    case F_rsh:   if (a>=BperW) b=0; /* bug */
	   9272                  a = WD((UWD b)>>a); goto fetch;
	   9273    case F_not:   a = ~ a;          goto fetch;
	   9274    case F_and:   a = b & a;        goto fetch;
	   9275    case F_or:    a = b | a;        goto fetch;
	   9276    case F_xor:   a = b ^ a;        goto fetch;
	   9277 
	   9278    case F_goto:  pc = a;           goto fetch;
	   9279 
	   9280    case F_brk:   res = 2; pc--; goto ret;  /* BREAKPOINT  */
	   9281                  
	   9282    case F_rv+6:  a = W[a+6]; goto fetch;
	   9283    case F_rv+5:  a = W[a+5]; goto fetch;
	   9284    case F_rv+4:  a = W[a+4]; goto fetch;
	   9285    case F_rv+3:  a = W[a+3]; goto fetch;
	   9286    case F_rv+2:  a = W[a+2]; goto fetch;
	   9287    case F_rv+1:  a = W[a+1]; goto fetch;
	   9288    case F_rv:    a = W[a+0]; goto fetch;
	   9289 
	   9290    case F_st+3:  W[a+3] = b; goto fetch;

                                Source Listing                  10-APR-2013 16:26:26  HP C++ V7.2-018                   Page 10
                                                                10-APR-2013 16:20:53  CINTERP.C;81

	   9291    case F_st+2:  W[a+2] = b; goto fetch;
	   9292    case F_st+1:  W[a+1] = b; goto fetch;
	   9293    case F_st:    W[a+0] = b; goto fetch;
	   9294 
	   9295    case F_chgco: W[Wg[Gn_currco]] = Wp[0]; /* !currco := !p    */
	   9296                  pc = Wp[1];               /* pc      := p!1   */
	   9297                  Wg[Gn_currco] = Wp[4];    /* currco  := cptr  */
	   9298                  p = W[Wp[4]]>>B2Wsh;      /* p       := !cptr */
	   9299                  Wp = W+p;
	   9300                  goto fetch;
	   9301 
	   9302    case F_mdiv:
	   9303                { BCPLINT64 ab = (BCPLINT64)(Wp[3]) * (BCPLINT64)(Wp[4]);
	   9304                  BCPLWORD c = Wp[5];
	   9305                  if(c==0) c=1;
	   9306                  Wg[Gn_result2] = (BCPLWORD)(ab % c);
	   9307                  a = (BCPLWORD)(ab / c);
	   9308                  /* fall through to return  */
	   9309                }
	   9310    case F_rtn:   pc = Wp[1];
	   9311                  p  = W[p]>>2;
	   9312                  Wp = W+p; 
	   9313                  goto fetch;
	   9314 
	   9315    case F_gbyt: a = B[a+(b<<B2Wsh)];
	   9316                 goto fetch;
	   9317    case F_pbyt: B[a+(b<<B2Wsh)] = (char)c;  goto fetch;
	   9318    case F_xpbyt:B[b+(a<<B2Wsh)] = (char)c;  goto fetch;
	   9319    case F_atc:  c = a;                      goto fetch;
	   9320    case F_btc:  c = b;                      goto fetch;
	   9321    case F_atb:  b = a;                      goto fetch;
	   9322    case F_xch:  a = a^b; b = a^b; a = a^b;  goto fetch;
	   9323 
	   9324    case F_swb: { BCPLWORD n, k, val, i=1;
	   9325                  k = (pc+1)>>1;
	   9326                  n = H[k];
	   9327                  while(i<=n)
	   9328                  { i += i;
	   9329                    val = H[k+i];
	   9330                    if (a==val) { k += i; break; }
	   9331                    if (a<val) i++;
	   9332                  }
	   9333                  k++;
	   9334                  pc = (k<<1) + SH[k];
	   9335                  goto fetch;
	   9336                }
	   9337 
	   9338    case F_swl: { BCPLWORD n,q;
	   9339                  q = (pc+1)>>1;
	   9340                  n = H[q++];
	   9341                  if(0<=a && a<n) q += a + 1;
	   9342                  pc = (q<<1) + SH[q];
	   9343                  goto fetch;
	   9344                }
	   9345 
	   9346    case F_sys: switch(a) {
	   9347                  default: // system call -- general case

                                Source Listing                  10-APR-2013 16:26:26  HP C++ V7.2-018                   Page 11
                                                                10-APR-2013 16:20:53  CINTERP.C;81

	   9348  
	   9349 		         W[regs+0]  = a;    /* Save all the registers */
	   9350 		         W[regs+1]  = b;    /* for debugging purposes */
	   9351                          W[regs+2]  = c;
	   9352                          W[regs+3]  = p<<B2Wsh;
	   9353                          W[regs+4]  = g<<B2Wsh;
	   9354                          W[regs+5]  = st;
	   9355                          W[regs+6]  = pc;
	   9356                          W[regs+7]  = count;
	   9357                          W[regs+8]  = mw;
	   9358   
	   9359                          a = dosys(p, g); 
	   9360                          goto fetch;
	   9361 
	   9362                  case Sys_setcount:
	   9363                          /* oldcount := sys(Sys_setcount, newcount)  */
	   9364                          a = count; 
	   9365 		         count = Wp[4];
	   9366                          res = -1; /* Leave and immediately re-enter */
	   9367                          goto ret; /* the interpreter */
	   9368 
	   9369                  case Sys_quit:
	   9370                          res = Wp[4];
	   9371                          goto ret;
	   9372 
	   9373 	      /*
	   9374                  case Sys_rti:  //  sys(Sys_rti, regs)
	   9375                  case Sys_saveregs: // sys(Sys_saveregs, regs)
	   9376                  case Sys_setst: // sys(Sys_setst, st)
	   9377               */
	   9378 		 case Sys_watch:  /* sys(Sys_watch, addr) */
	   9379                        { watchaddr = &W[Wp[4]];
	   9380 	                 watchval = *watchaddr;
	   9381                          goto fetch;
	   9382                        }
	   9383                }
	   9384 
	   9385    case F_lp0+16:  b = a; a = Wp[16]; goto fetch;
	   9386    case F_lp0+15:  b = a; a = Wp[15]; goto fetch;
	   9387    case F_lp0+14:  b = a; a = Wp[14]; goto fetch;
	   9388    case F_lp0+13:  b = a; a = Wp[13]; goto fetch;
	   9389    case F_lp0+12:  b = a; a = Wp[12]; goto fetch;
	   9390    case F_lp0+11:  b = a; a = Wp[11]; goto fetch;
	   9391    case F_lp0+10:  b = a; a = Wp[10]; goto fetch;
	   9392    case F_lp0+9:   b = a; a = Wp[9];  goto fetch;
	   9393    case F_lp0+8:   b = a; a = Wp[8];  goto fetch;
	   9394    case F_lp0+7:   b = a; a = Wp[7];  goto fetch;
	   9395    case F_lp0+6:   b = a; a = Wp[6];  goto fetch;
	   9396    case F_lp0+5:   b = a; a = Wp[5];  goto fetch;
	   9397    case F_lp0+4:   b = a; a = Wp[4];  goto fetch;
	   9398    case F_lp0+3:   b = a; a = Wp[3];  goto fetch;
	   9399 
	   9400    case F_lp:   b = a; a = Wp[B[pc++]];          goto fetch;
	   9401    case F_lph:  b = a; a = Wp[GH(pc)];  pc += 2; goto fetch;
	   9402    case F_lpw:  b = a; a = Wp[GW(pc)];  pc += 4; goto fetch;
	   9403 
	   9404    case F_llp:  b = a; a = p+B[pc++];             goto fetch;

                                Source Listing                  10-APR-2013 16:26:26  HP C++ V7.2-018                   Page 12
                                                                10-APR-2013 16:20:53  CINTERP.C;81

	   9405    case F_llph: b = a; a = p+GH(pc);     pc += 2; goto fetch;
	   9406    case F_llpw: b = a; a = p+GW(pc);     pc += 4; goto fetch;
	   9407 
	   9408    case F_sp0+16: Wp[16] = a; goto fetch;
	   9409    case F_sp0+15: Wp[15] = a; goto fetch;
	   9410    case F_sp0+14: Wp[14] = a; goto fetch;
	   9411    case F_sp0+13: Wp[13] = a; goto fetch;
	   9412    case F_sp0+12: Wp[12] = a; goto fetch;
	   9413    case F_sp0+11: Wp[11] = a; goto fetch;
	   9414    case F_sp0+10: Wp[10] = a; goto fetch;
	   9415    case F_sp0+9:  Wp[9]  = a; goto fetch;
	   9416    case F_sp0+8:  Wp[8]  = a; goto fetch;
	   9417    case F_sp0+7:  Wp[7]  = a; goto fetch;
	   9418    case F_sp0+6:  Wp[6]  = a; goto fetch;
	   9419    case F_sp0+5:  Wp[5]  = a; goto fetch;
	   9420    case F_sp0+4:  Wp[4]  = a; goto fetch;
	   9421    case F_sp0+3:  Wp[3]  = a; goto fetch;
	   9422 
	   9423    case F_sp:    Wp[B[pc++]] = a;                  goto fetch;
	   9424    case F_sph:   Wp[GH(pc)]  = a;         pc += 2; goto fetch;
	   9425    case F_spw:   Wp[GW(pc)]  = a;         pc += 4; goto fetch;
	   9426 
	   9427    case F_lgh:   b = a; a = Wg[GH(pc)];   pc += 2; goto fetch;
	   9428    case F_lg1:   b = a; a = Wg1[B[pc++]];          goto fetch;
	   9429    case F_lg:    b = a; a = Wg[B[pc++]];           goto fetch;
	   9430 
	   9431    case F_sgh:   Wg[GH(pc)]   = a;        pc += 2; goto fetch;
	   9432    case F_sg1:   Wg1[B[pc++]] = a;                 goto fetch;
	   9433    case F_sg:    Wg[B[pc++]]  = a;                 goto fetch;
	   9434 
	   9435    case F_llgh: b = a; a = g+GH(pc);      pc += 2; goto fetch;
	   9436    case F_llg1: b = a; a = g+256+B[pc++];          goto fetch;
	   9437    case F_llg:  b = a; a = g+B[pc++];              goto fetch;
	   9438 
	   9439    case F_ll+1: i = (pc>>1) + B[pc];
	   9440                 i = (i<<1) + SH[i];
	   9441                 b = a; a = W[i>>B2Wsh];          pc++; goto fetch;
	   9442 
	   9443    case F_ll:   b = a; a = W[(pc+SB[pc])>>B2Wsh];pc++; goto fetch;
	   9444 
	   9445    case F_sl+1: i = (pc>>1) + B[pc];
	   9446                 i = (i<<1) + SH[i];
	   9447                 W[i>>B2Wsh] = a;                 pc++; goto fetch;
	   9448 
	   9449    case F_sl:   W[(pc+SB[pc])>>B2Wsh] = a;       pc++; goto fetch;
	   9450    
	   9451    case F_lll+1:i = (pc>>1) + B[pc];
	   9452                 i = (i<<1) + SH[i];
	   9453                 b = a; a = i>>B2Wsh;             pc++; goto fetch;
	   9454 
	   9455    case F_lll:  b = a; a = (pc+SB[pc])>>B2Wsh;   pc++; goto fetch;
	   9456    
	   9457    case F_l0+10: b = a; a = 10; goto fetch;
	   9458    case F_l0+9:  b = a; a =  9; goto fetch;
	   9459    case F_l0+8:  b = a; a =  8; goto fetch;
	   9460    case F_l0+7:  b = a; a =  7; goto fetch;
	   9461    case F_l0+6:  b = a; a =  6; goto fetch;

                                Source Listing                  10-APR-2013 16:26:26  HP C++ V7.2-018                   Page 13
                                                                10-APR-2013 16:20:53  CINTERP.C;81

	   9462    case F_l0+5:  b = a; a =  5; goto fetch;
	   9463    case F_l0+4:  b = a; a =  4; goto fetch;
	   9464    case F_l0+3:  b = a; a =  3; goto fetch;
	   9465    case F_l0+2:  b = a; a =  2; goto fetch;
	   9466    case F_l0+1:  b = a; a =  1; goto fetch;
	   9467    case F_l0:    b = a; a =  0; goto fetch;
	   9468    case F_l0-1:  b = a; a = -1; goto fetch; 
	   9469 
	   9470    case F_l:     b = a; a = B[pc++];               goto fetch;
	   9471    case F_lh:    b = a; a = GH(pc);       pc += 2; goto fetch;
	   9472    case F_lw:    b = a; a = GW(pc);       pc += 4; goto fetch;
	   9473 
	   9474    case F_lm:    b = a; a = - WD(B[pc++]);         goto fetch;
	   9475    case F_lmh:   b = a; a = - WD(GH(pc)); pc += 2; goto fetch;
	   9476                 
	   9477    case F_lf+1:  b = a;
	   9478                  a = (pc>>1) + B[pc];
	   9479                  a = (a<<1) + SH[a];         pc++; goto fetch;
	   9480 
	   9481    case F_lf:    b = a; a = pc + SB[pc];     pc++; goto fetch;
	   9482  
	   9483    case F_k0gh+11: Wp[11] = p<<B2Wsh; p += 11; goto applygh;
	   9484    case F_k0gh+10: Wp[10] = p<<B2Wsh; p += 10; goto applygh;
	   9485    case F_k0gh+9:  Wp[ 9] = p<<B2Wsh; p +=  9; goto applygh;
	   9486    case F_k0gh+8:  Wp[ 8] = p<<B2Wsh; p +=  8; goto applygh;
	   9487    case F_k0gh+7:  Wp[ 7] = p<<B2Wsh; p +=  7; goto applygh;
	   9488    case F_k0gh+6:  Wp[ 6] = p<<B2Wsh; p +=  6; goto applygh;
	   9489    case F_k0gh+5:  Wp[ 5] = p<<B2Wsh; p +=  5; goto applygh;
	   9490    case F_k0gh+4:  Wp[ 4] = p<<B2Wsh; p +=  4; goto applygh;
	   9491    case F_k0gh+3:  Wp[ 3] = p<<B2Wsh; p +=  3;
	   9492    applygh:        Wp    = W+p;
	   9493                    Wp[1] = pc + 2;
	   9494                    pc    = Wg[GH(pc)];
	   9495                    Wp[2] = pc;
	   9496                    Wp[3] =  a;
	   9497                    if (pc>=0) goto fetch;
	   9498                    goto negpc;
	   9499 
	   9500    case F_k0g1+11: Wp[11] = p<<B2Wsh; p += 11; goto applyg1;
	   9501    case F_k0g1+10: Wp[10] = p<<B2Wsh; p += 10; goto applyg1;
	   9502    case F_k0g1+9:  Wp[ 9] = p<<B2Wsh; p +=  9; goto applyg1;
	   9503    case F_k0g1+8:  Wp[ 8] = p<<B2Wsh; p +=  8; goto applyg1;
	   9504    case F_k0g1+7:  Wp[ 7] = p<<B2Wsh; p +=  7; goto applyg1;
	   9505    case F_k0g1+6:  Wp[ 6] = p<<B2Wsh; p +=  6; goto applyg1;
	   9506    case F_k0g1+5:  Wp[ 5] = p<<B2Wsh; p +=  5; goto applyg1;
	   9507    case F_k0g1+4:  Wp[ 4] = p<<B2Wsh; p +=  4; goto applyg1;
	   9508    case F_k0g1+3:  Wp[ 3] = p<<B2Wsh; p +=  3;
	   9509    applyg1:        Wp    = W+p;
	   9510                    Wp[1] = pc + 1;
	   9511                    pc    = Wg1[B[pc]];
	   9512                    Wp[2] = pc;
	   9513                    Wp[3] = a;
	   9514                    if (pc>=0) goto fetch;
	   9515                    goto negpc;
	   9516  
	   9517    case F_k0g+11: Wp[11] = p<<B2Wsh; p += 11; goto applyg;
	   9518    case F_k0g+10: Wp[10] = p<<B2Wsh; p += 10; goto applyg;

                                Source Listing                  10-APR-2013 16:26:26  HP C++ V7.2-018                   Page 14
                                                                10-APR-2013 16:20:53  CINTERP.C;81

	   9519    case F_k0g+9:  Wp[ 9] = p<<B2Wsh; p +=  9; goto applyg;
	   9520    case F_k0g+8:  Wp[ 8] = p<<B2Wsh; p +=  8; goto applyg;
	   9521    case F_k0g+7:  Wp[ 7] = p<<B2Wsh; p +=  7; goto applyg;
	   9522    case F_k0g+6:  Wp[ 6] = p<<B2Wsh; p +=  6; goto applyg;
	   9523    case F_k0g+5:  Wp[ 5] = p<<B2Wsh; p +=  5; goto applyg;
	   9524    case F_k0g+4:  Wp[ 4] = p<<B2Wsh; p +=  4; goto applyg;
	   9525    case F_k0g+3:  Wp[ 3] = p<<B2Wsh; p +=  3;
	   9526    applyg:        Wp    = W+p;
	   9527                   Wp[1] = pc + 1;
	   9528                   pc    = Wg[B[pc]];
	   9529                   Wp[2] = pc;
	   9530                   Wp[3] = a;
	   9531                   if (pc>=0) goto fetch;
	   9532                   goto negpc;
	   9533  
	   9534    case F_k0+11:  Wp[11] = p<<B2Wsh; p += 11; goto applyk;
	   9535    case F_k0+10:  Wp[10] = p<<B2Wsh; p += 10; goto applyk;
	   9536    case F_k0+9:   Wp[ 9] = p<<B2Wsh; p +=  9; goto applyk;
	   9537    case F_k0+8:   Wp[ 8] = p<<B2Wsh; p +=  8; goto applyk;
	   9538    case F_k0+7:   Wp[ 7] = p<<B2Wsh; p +=  7; goto applyk;
	   9539    case F_k0+6:   Wp[ 6] = p<<B2Wsh; p +=  6; goto applyk;
	   9540    case F_k0+5:   Wp[ 5] = p<<B2Wsh; p +=  5; goto applyk;
	   9541    case F_k0+4:   Wp[ 4] = p<<B2Wsh; p +=  4; goto applyk;
	   9542    case F_k0+3:   Wp[ 3] = p<<B2Wsh; p +=  3;
	   9543    applyk:        Wp    = W+p;
	   9544                   Wp[1] = WD pc;
	   9545                   pc    = a;
	   9546                   Wp[2] = pc;
	   9547                   Wp[3] = a = b;
	   9548                   if (pc>=0) goto fetch;
	   9549                   goto negpc;
	   9550 
	   9551    case F_k:      k = B[pc]; Wp[k] = p<<B2Wsh; p +=  k;
	   9552                   Wp    = W+p;
	   9553                   Wp[1] = pc + 1;
	   9554                   pc    = a;
	   9555                   Wp[2] = pc;
	   9556                   Wp[3] = a = b;
	   9557                   if (pc>=0) goto fetch;
	   9558                   goto negpc;
	   9559 
	   9560    case F_kh:     k = GH(pc); Wp[k] = p<<B2Wsh; p +=  k;
	   9561                   Wp    = W+p;
	   9562                   Wp[1] = pc + 2;
	   9563                   pc    = a;
	   9564                   Wp[2] = pc;
	   9565                   Wp[3] = a = b;
	   9566                   if (pc>=0) goto fetch;
	   9567                   goto negpc;
	   9568 
	   9569    case F_kw:     k = GW(pc); Wp[k] = p<<B2Wsh; p +=  k;
	   9570                   Wp    = W+p;
	   9571                   Wp[1] = pc + 4;
	   9572                   pc    = a;
	   9573                   Wp[2] = pc;
	   9574                   Wp[3] = a = b;
	   9575                   if (pc>=0) goto fetch;

                                Source Listing                  10-APR-2013 16:26:26  HP C++ V7.2-018                   Page 15
                                                                10-APR-2013 16:20:53  CINTERP.C;81

	   9576                   goto negpc;
	   9577 
	   9578    case F_jeq:   if(b==a) { pc += SB[pc];   goto fetch; }
	   9579                  pc++; goto fetch;
	   9580    case F_jeq+1: if(b==a) goto indjump;
	   9581                  pc++; goto fetch;
	   9582    case F_jeq+2: if(a==0) { pc += SB[pc];   goto fetch; }
	   9583                  pc++; goto fetch;
	   9584    case F_jeq+3: if(a==0) goto indjump;
	   9585                  pc++; goto fetch;
	   9586 
	   9587    case F_jne:   if(b!=a) { pc += SB[pc];   goto fetch; }
	   9588                  pc++; goto fetch;
	   9589    case F_jne+1: if(b!=a) goto indjump;
	   9590                  pc++; goto fetch;
	   9591    case F_jne+2: if(a!=0) { pc += SB[pc];   goto fetch; }
	   9592                  pc++; goto fetch;
	   9593    case F_jne+3: if(a!=0) goto indjump;
	   9594                  pc++; goto fetch;
	   9595 
	   9596    case F_jls:   if(b<a) { pc += SB[pc];   goto fetch; }
	   9597                  pc++; goto fetch;
	   9598    case F_jls+1: if(b<a) goto indjump;
	   9599                  pc++; goto fetch;
	   9600    case F_jls+2: if(a<0) { pc += SB[pc];   goto fetch; }
	   9601                  pc++; goto fetch;
	   9602    case F_jls+3: if(a<0) goto indjump;
	   9603                  pc++; goto fetch;
	   9604 
	   9605    case F_jgr:   if(b>a) { pc += SB[pc];   goto fetch; }
	   9606                  pc++; goto fetch;
	   9607    case F_jgr+1: if(b>a) goto indjump;
	   9608                  pc++; goto fetch;
	   9609    case F_jgr+2: if(a>0) { pc += SB[pc];   goto fetch; }
	   9610                  pc++; goto fetch;
	   9611    case F_jgr+3: if(a>0) goto indjump;
	   9612                  pc++; goto fetch;
	   9613 
	   9614    case F_jle:   if(b<=a) { pc += SB[pc];   goto fetch; }
	   9615                  pc++; goto fetch;
	   9616    case F_jle+1: if(b<=a) goto indjump;
	   9617                  pc++; goto fetch;
	   9618    case F_jle+2: if(a<=0) { pc += SB[pc];   goto fetch; }
	   9619                  pc++; goto fetch;
	   9620    case F_jle+3: if(a<=0) goto indjump;
	   9621                  pc++; goto fetch;
	   9622 
	   9623    case F_jge:   if(b>=a) { pc += SB[pc];   goto fetch; }
	   9624                  pc++; goto fetch;
	   9625    case F_jge+1: if(b>=a) goto indjump;
	   9626                  pc++; goto fetch;
	   9627    case F_jge+2: if(a>=0) { pc += SB[pc];   goto fetch; }
	   9628                  pc++; goto fetch;
	   9629    case F_jge+3: if(a>=0) goto indjump;
	   9630                  pc++; goto fetch;
	   9631 
	   9632    case F_j:     pc += SB[pc];        goto fetch;

                                Source Listing                  10-APR-2013 16:26:26  HP C++ V7.2-018                   Page 16
                                                                10-APR-2013 16:20:53  CINTERP.C;81

	   9633 
	   9634  indjump:
	   9635    case F_j+1:   pc = (pc>>1) + B[pc];
	   9636                  pc = (pc<<1) + SH[pc];
	   9637                  goto fetch;
	   9638 
	   9639    case F_ap0+12: a = a + Wp[12]; goto fetch;
	   9640    case F_ap0+11: a = a + Wp[11]; goto fetch;
	   9641    case F_ap0+10: a = a + Wp[10]; goto fetch;
	   9642    case F_ap0+9:  a = a + Wp[ 9]; goto fetch;
	   9643    case F_ap0+8:  a = a + Wp[ 8]; goto fetch;
	   9644    case F_ap0+7:  a = a + Wp[ 7]; goto fetch;
	   9645    case F_ap0+6:  a = a + Wp[ 6]; goto fetch;
	   9646    case F_ap0+5:  a = a + Wp[ 5]; goto fetch;
	   9647    case F_ap0+4:  a = a + Wp[ 4]; goto fetch;
	   9648    case F_ap0+3:  a = a + Wp[ 3]; goto fetch;
	   9649 
	   9650    case F_ap:    a += Wp[B[pc++]];         goto fetch;
	   9651    case F_aph:   a += Wp[GH(pc)]; pc += 2; goto fetch;
	   9652    case F_apw:   a += Wp[GW(pc)]; pc += 4; goto fetch;
	   9653    case F_agh:   a += Wg[GH(pc)]; pc += 2; goto fetch;
	   9654    case F_ag1:   a += Wg1[B[pc++]];        goto fetch;
	   9655    case F_ag:    a += Wg[B[pc++]];         goto fetch;
	   9656 
	   9657    case F_a0+5: a += 5; goto fetch;
	   9658    case F_a0+4: a += 4; goto fetch;
	   9659    case F_a0+3: a += 3; goto fetch;
	   9660    case F_a0+2: a += 2; goto fetch;
	   9661    case F_a0+1: a += 1; goto fetch;
	   9662    case F_nop:          goto fetch;
	   9663 
	   9664    case F_a:    a += B[pc++];           goto fetch;
	   9665    case F_ah:   a += GH(pc);   pc += 2; goto fetch;
	   9666    case F_aw:   a += GW(pc);   pc += 4; goto fetch;
	   9667    case F_s:    a -= B[pc++];           goto fetch;
	   9668    case F_sh:   a -= GH(pc);   pc += 2; goto fetch;
	   9669 
	   9670    case F_s0+4: a -= 4; goto fetch;
	   9671    case F_s0+3: a -= 3; goto fetch;
	   9672    case F_s0+2: a -= 2; goto fetch;
	   9673    case F_s0+1: a -= 1; goto fetch;
	   9674 
	   9675    case F_l0p0+12: b = a; a = W[Wp[12]+0]; goto fetch;
	   9676    case F_l0p0+11: b = a; a = W[Wp[11]+0]; goto fetch;
	   9677    case F_l0p0+10: b = a; a = W[Wp[10]+0]; goto fetch;
	   9678    case F_l0p0+9:  b = a; a = W[Wp[ 9]+0]; goto fetch;
	   9679    case F_l0p0+8:  b = a; a = W[Wp[ 8]+0]; goto fetch;
	   9680    case F_l0p0+7:  b = a; a = W[Wp[ 7]+0]; goto fetch;
	   9681    case F_l0p0+6:  b = a; a = W[Wp[ 6]+0]; goto fetch;
	   9682    case F_l0p0+5:  b = a; a = W[Wp[ 5]+0]; goto fetch;
	   9683    case F_l0p0+4:  b = a; a = W[Wp[ 4]+0]; goto fetch;
	   9684    case F_l0p0+3:  b = a; a = W[Wp[ 3]+0]; goto fetch;
	   9685 
	   9686    case F_l1p0+6:  b = a; a = W[Wp[ 6]+1]; goto fetch;
	   9687    case F_l1p0+5:  b = a; a = W[Wp[ 5]+1]; goto fetch;
	   9688    case F_l1p0+4:  b = a; a = W[Wp[ 4]+1]; goto fetch;
	   9689    case F_l1p0+3:  b = a; a = W[Wp[ 3]+1]; goto fetch;

                                Source Listing                  10-APR-2013 16:26:26  HP C++ V7.2-018                   Page 17
                                                                10-APR-2013 16:20:53  CINTERP.C;81

	   9690 
	   9691    case F_l2p0+5:  b = a; a = W[Wp[ 5]+2]; goto fetch;
	   9692    case F_l2p0+4:  b = a; a = W[Wp[ 4]+2]; goto fetch;
	   9693    case F_l2p0+3:  b = a; a = W[Wp[ 3]+2]; goto fetch;
	   9694 
	   9695    case F_l3p0+4:  b = a; a = W[Wp[ 4]+3]; goto fetch;
	   9696    case F_l3p0+3:  b = a; a = W[Wp[ 3]+3]; goto fetch;
	   9697 
	   9698    case F_l4p0+4:  b = a; a = W[Wp[ 4]+4]; goto fetch;
	   9699    case F_l4p0+3:  b = a; a = W[Wp[ 3]+4]; goto fetch;
	   9700 
	   9701    case F_l0gh:  b = a; a = W[Wg[GH(pc)]+0]; pc += 2; goto fetch;
	   9702    case F_l1gh:  b = a; a = W[Wg[GH(pc)]+1]; pc += 2; goto fetch;
	   9703    case F_l2gh:  b = a; a = W[Wg[GH(pc)]+2]; pc += 2; goto fetch;
	   9704    case F_l0g1:  b = a; a = W[Wg1[B[pc++]]+0];        goto fetch;
	   9705    case F_l1g1:  b = a; a = W[Wg1[B[pc++]]+1];        goto fetch;
	   9706    case F_l2g1:  b = a; a = W[Wg1[B[pc++]]+2];        goto fetch;
	   9707    case F_l0g:   b = a; a = W[Wg[B[pc++]]+0];         goto fetch;
	   9708    case F_l1g:   b = a; a = W[Wg[B[pc++]]+1];         goto fetch;
	   9709    case F_l2g:   b = a; a = W[Wg[B[pc++]]+2];         goto fetch;
	   9710 
	   9711    case F_s0gh:  W[Wg[GH(pc)]+0] = a;        pc += 2; goto fetch;
	   9712    case F_s0g1:  W[Wg1[B[pc++]]+0] = a;               goto fetch;
	   9713    case F_s0g:   W[Wg[B[pc++]]+0] = a;                goto fetch;
	   9714 
	   9715    case F_stp0+5: W[a+Wp[5]] = b; goto fetch;
	   9716    case F_stp0+4: W[a+Wp[4]] = b; goto fetch;
	   9717    case F_stp0+3: W[a+Wp[3]] = b; goto fetch;
	   9718 
	   9719    case F_st0p0+4: W[Wp[4]+0] = a; goto fetch;
	   9720    case F_st0p0+3: W[Wp[3]+0] = a; goto fetch;
	   9721 
	   9722    case F_st1p0+4: W[Wp[4]+1] = a; goto fetch;
	   9723    case F_st1p0+3: W[Wp[3]+1] = a; goto fetch;
	   9724    
	   9725    case F_rvp0+7: a = W[a+Wp[7]]; goto fetch;
	   9726    case F_rvp0+6: a = W[a+Wp[6]]; goto fetch;
	   9727    case F_rvp0+5: a = W[a+Wp[5]]; goto fetch;
	   9728    case F_rvp0+4: a = W[a+Wp[4]]; goto fetch;
	   9729    case F_rvp0+3: a = W[a+Wp[3]]; goto fetch;
	   9730    }
	   9731 
	   9732 negpc:
	   9733    res = 4;  /* negative pc  */ 
	   9734 ret:
	   9735    tracing = 0;
	   9736    //printf("cinterp: returning from interpret, res=%" FormD "\n", res);
	   9737    W[regs+0]  = a;    /* Save the machine registers  */
	   9738    W[regs+1]  = b;
	   9739    W[regs+2]  = c;
	   9740    W[regs+3]  = p<<B2Wsh;
	   9741    W[regs+4]  = g<<B2Wsh;
	   9742    W[regs+5]  = st;
	   9743    W[regs+6]  = pc;
	   9744    W[regs+7]  = count;
	   9745    W[regs+8]  = mw;
	   9746 

                                Source Listing                  10-APR-2013 16:26:26  HP C++ V7.2-018                   Page 18
                                                                10-APR-2013 16:20:53  CINTERP.C;81

	   9747    /* Save p in currco resumption point, for debugging purposes     */
	   9748    /* currco must always be set to the coroutine stack containing p */
	   9749    //W[Wg[Gn_currco]] = p;
	   9750    
	   9751    return res;  // Return from this invocation of interpret
	   9752 }
	   9753 

                                Source Listing                  10-APR-2013 16:26:26  HP C++ V7.2-018                   Page 19
                                                                10-APR-2013 16:20:53  CINTERP.C;81

------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------- Machine Code Listing -------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
 
 
    NOTICE
 
    There are two types of machine code listings supported by this
    compiler.  The compiler determines which type to use based on
    whether or not the user is generating an object file as part of the
    compilation.
 
 
    /LIST/MACHINE_CODE/OBJECT
 
    When the user is generating an object file, the machine code listing
    uses a feature of ANALYZE/OBJECT to disassemble the actual
    instructions used in the object file.
 
 
    /LIST/MACHINE_CODE/NOOBJECT
 
    When the user is not generating an object file, the compiler
    generates a machine code listing which includes source correlation
    information.  This type of machine code listing may or may not
    accurately reflect the instructions actually used in an object file.
    This type of machine code listing should only be used to aid in
    debugging.  It is known to have defects, but is still useful to
    obtain the correlation between the source code and the machine
    instructions.
 
 
    The following machine code listing does not correspond to an object
    file and may be useful to correlate source code to the actual
    machine code.
 
 
------------------------------------------------------------------------------------------------------------------------------------

	.section .text
.LNDBG_TX:
// mark_description "HP C++ V7.2-018";
// mark_description "-c";
	//.radix C
	.file "LDA19:[MRICH177.DISTRIBUTION.BCPL.CINTCODE.SYSC]CINTERP.C;81"
	.section WATCHADDR, "wa", "progbits"
	.section WATCHVAL, "wa", "progbits"
	.section WATCHADDR, "wa", "progbits"
	.section WATCHVAL, "wa", "progbits"
	.section WATCHADDR, "wa", "progbits"
	.section WATCHVAL, "wa", "progbits"
	.section .text, "xa", "progbits"
	.align 64
// -- Begin CX3$_Z9INTERPRETIPI3GKITH5
	.proc CX3$_Z9INTERPRETIPI3GKITH5#
// Block 0: entry  Pred:     Succ: 2 1  -GO
// Freq 1.0e+00
	.global CX3$_Z9INTERPRETIPI3GKITH5#

CX3$_Z9INTERPRETIPI3GKITH5:
CX3$_Z9INTERPRETIPI3GKITH5??unw:
$_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB:
 {   .mmi  //R-Addr: 0x0

//  285 :{  BCPLWORDpt W = mem;

	alloc	r34=ar.pfs,2,35,4,0			//0: {285:1:LDA19:[MRICH177.DISTRIBUTION.BCPL.CINTCODE.SYSC]CINTERP.C;81} 5542

//  286 :
//  287 :   int icount = 0;
//  288 :
//  289 :   BCPLWORD           a  = W[regs+0];
//  290 :   BCPLWORD           b  = W[regs+1];
//  291 :   BCPLWORD                    c  = W[regs+2];
//  292 :   BCPLWORD                    p  = W[regs+3]>>B2Wsh;
//  293 :   BCPLWORD                    g  = W[regs+4]>>B2Wsh;
//  294 :   BCPLWORD                    st = W[regs+5];
//  295 :   BCPLWORD           pc = W[regs+6];
//  296 :   BCPLWORD                    count = W[regs+7];
//  297 :   BCPLWORD                    mw = W[regs+8];
//  298 :
//  299 :   BCPLWORDpt Wp  = W+p,    /* Optimise access to the stack */
//  300 :                       Wg  = W+g,    /* Optimise access to the global vector */
//  301 :                       Wg1 = W+g+256;
//  302 :
//  303 :   BCPLWORD res, k, i;
//  304 :
//  305 :   /*   tracing = 1; */
//  306 :
//  307 :   if (pc<0) goto negpc;
//  308 :
//  309 :fetch:
//  310 :
//  311 :#ifdef WATCHyes
//  312 :   /* Special watch debugging aid */
//  313 :   if(watchaddr && *watchaddr!=watchval)
//  314 :   { /*
//  315 :       printf("%7" FormD ": changed from %7" FormD "(%8" FormX ") to %7" FormD
//  316 :              "(%8" FormX ")\n",
//  317 :              watchaddr-W, watchval, (UBCPLWORD)watchval,
//  318 :              *watchaddr, (UBCPLWORD)*watchaddr);
//  319 :     */
//  320 :     watchval = *watchaddr;
//  321 :     W[1] = watchaddr-W;
//  322 :     W[2] = watchval;
//  323 :     res = 11;        /* Contents of watch address has changed */
//  324 :     goto ret;
//  325 :   }
//  326 :   /* End of watch code */
//  327 :#endif
//  328 :
//  329 :   /* count>=0  means execute count instructions (slow interpreter)
//  330 :      count=-1  means go on for ever (fast interpreter)
//  331 :      count=-2  means single step the fast interpreter
//  332 :   */
//  333 :#ifdef COUNTyes
//  334 :   if (count>=0)
//  335 :   { if (count==0) { res = 3; goto ret; }
//  336 :     count--;
//  337 :   }
//  338 :#endif
//  339 :
//  340 :#ifdef TRACINGyes
//  341 :   if (tracing) trace(pc, p, a, b);

	add	r25=@ltoff(TRACING#),gp			//0: {341:4} 33
	mov	r65=ip					//0: {285:1} 6
 }
 {   .mmi  //R-Addr: 0x10
	add	r26=@ltoff(WATCHADDR#),gp		//0: {321:6} 38
	add	sp=-32,sp				//0: {285:1} 5543
	sxt4	r63=r33 ;;				//0: {289:28} 8
 }
 {   .mmi  //R-Addr: 0x20
	ld8	r24=[r25]				//1: {341:4} 34
	shladd	r62=r32,2,r63				//1: {289:28} 9
	mov	r35=b0					//1: {285:1} 2
 }
 {   .mmi  //R-Addr: 0x30
	add	r64=0,r0				//1: {287:8} 7
	mov	r43=r33					//1: {285:1} 5
	shladd	r20=r32,2,r63 ;;			//1: {290:28} 11
 }
 {   .mmi  //R-Addr: 0x40
	ld4	r32=[r62]				//2: {289:28} 10
	add	r57=12,r20				//2: {292:48} 16
	sxt4	r45=r24					//2: {341:4} 35
 }
 {   .mmi  //R-Addr: 0x50
	add	r52=24,r20				//2: {295:28} 24
	add	r49=32,r20				//2: {297:37} 28
	add	r56=16,r20 ;;				//2: {293:48} 19
 }
 {   .mmi  //R-Addr: 0x60
	ld4	r19=[r56]				//3: {293:48} 20
	ld4	r18=[r57]				//3: {292:48} 17
	add	r51=28,r20				//3: {296:40} 26
 }
 {   .mmi  //R-Addr: 0x70
	add	r59=8,r20				//3: {291:37} 14
	add	r61=4,r20				//3: {290:28} 12
	add	r54=20,r20 ;;				//3: {294:37} 22
 }
 {   .mmi  //R-Addr: 0x80
	ld4	r37=[r52]				//4: {295:28} 25
	ld4	r50=[r51]				//4: {296:40} 27
	extr	r55=r19,2,30				//4: {293:48} 21
 }
 {   .mmi  //R-Addr: 0x90

//  342 :#endif
//  343 :
//  344 :#ifdef TALLYyes
//  345 :   if (pc<tallylim && pc>0) tallyv[pc]++;

	add	r28=@ltoff(TALLYLIM#),gp		//4: {345:4} 47

//  346 :#endif
//  347 :
//  348 :if(--icount<=0) {
//  349 :  // Update the days and msecs fields in the rootnode
//  350 :  timestamp(&W[rootnode+Rtn_days]);
//  351 :  icount = 10000;
//  352 :  // icount     bench100 time
//  353 :  //   1      923.370
//  354 :  //   10      99.780
//  355 :  //   100     16.040
//  356 :  //   1000     7.470
//  357 :  //   10000    6.600 (gcc -O9)
//  358 :  //   100000   6.510 (gcc -O3)
//  359 :  //            5.550 without this code omitted (gcc -O1)
//  360 :  //trpush(0x11000000+W[rootnode+Rtn_msecs]);
//  361 :}
//  362 :
//  363 :switch(B[pc++])

	add	r8=@ltoff($$1$$TPKT$1_0#),gp		//4: {363:1} 44
	mov	r36=gp ;;				//4: {285:1} 5490
 }
 {   .mmi  //R-Addr: 0xa0
	ld4	r53=[r54]				//5: {294:37} 23
	ld4	r58=[r59]				//5: {291:37} 15
	extr	r67=r18,2,30				//5: {292:48} 18
 }
 {   .mmi  //R-Addr: 0xb0
	cmp4.ge.unc	p7,p6=r37,r0			//5: {307:4} 36

//  364 :{  default:
//  365 :   case F_0:     /* Cases F_0 and F_255 have been added explicitly to   */
//  366 :     //case F_255:   /* improve the compiled code (with luck)               */
//  367 :                 res = 1; pc--; goto ret; /* Unimplemented instruction  */
//  368 :
//  369 :     // Added 21/7/10
//  370 :   case F_fltop:
//  371 :     { BCPLWORD op = B[pc++];
//  372 :       //printf("fltop op=%" FormD "\n", op);
//  373 :       switch (op) {
//  374 :       default:
//  375 :         res = 13; pc -=2; goto ret;
//  376 :
//  377 :       case fl_avail:
//  378 :         a = -1; goto fetch;
//  379 :
//  380 :       case fl_mk:
//  381 :       { BCPLWORD exponent = B[pc++]; // Signed byte
//  382 :         if (exponent>=128) exponent = exponent-256;
//  383 :	 //printf("fl_mk calling doflt(%" FormD ", %" FormD ", %" FormD ")\n",
//  384 :         //        op, a, exponent);
//  385 :         a = doflt(op, a, exponent);
//  386 :         goto fetch;
//  387 :       }
//  388 :
//  389 :       case fl_float:
//  390 :       case fl_fix:
//  391 :       case fl_pos:
//  392 :       case fl_neg:
//  393 :       case fl_abs:
//  394 :         a = doflt(op, a, 0);
//  395 :         goto fetch;
//  396 :
//  397 :       case fl_mult:
//  398 :       case fl_div:
//  399 :       case fl_plus:
//  400 :       case fl_minus:
//  401 :       case fl_eq:
//  402 :       case fl_ne:
//  403 :       case fl_ls:
//  404 :       case fl_gr:
//  405 :       case fl_le:
//  406 :       case fl_ge:
//  407 :         a = doflt(op, b, a);
//  408 :         goto fetch;
//  409 :       }
//  410 :     }
//  411 :
//  412 :     // Added 21/7/10
//  413 :   case F_selld:  // load a field  SELLD len sh
//  414 :     { BCPLWORD len = B[pc++];
//  415 :       BCPLWORD sh  = B[pc++];
//  416 :       BCPLWORD mask = -1;
//  417 :       if (len) mask = (1<<len) - 1;
//  418 :       a = (W[a]>>sh) & mask;
//  419 :       goto fetch;
//  420 :     }
//  421 :
//  422 :     // Added 21/7/10
//  423 :   case F_selst: // SLCT len:sh:0 OF <arg1> op:= <arg2>
//  424 :                 //      len sh         a   op      b
//  425 :     { BCPLWORD *ptr = &W[a];
//  426 :       BCPLWORD op  = B[pc++];
//  427 :       BCPLWORD len = B[pc++];
//  428 :       BCPLWORD sh  = B[pc++];
//  429 :       BCPLWORD mask;
//  430 :       BCPLWORD val;
//  431 :       BCPLWORD oldval;
//  432 :       union IorF { BCPLWORD i; float f; } x, y;
//  433 :
//  434 :       if(len==0) {
//  435 :         mask = UWD(-1) >> sh;
//  436 :       } else {
//  437 :         mask = (1<<len) - 1;
//  438 :       }
//  439 :       val = WD(((UWD*ptr)>>sh)) & mask;
//  440 :       oldval = val; // Old value shifted down
//  441 :
//  442 :       // val and oldval are both the old field value shifted down
//  443 :       switch(op) {
//  444 :       default:          a = 0; goto fetch;
//  445 :       case sf_none:     val = b;                 break;
//  446 :       case sf_vecap:    val = W[val + b];        break;
//  447 :       case sf_fmult:    x.i = val; y.i = b;
//  448 :                         x.f = x.f * y.f;
//  449 :                         val = x.i;               break;
//  450 :       case sf_fdiv:     x.i = val; y.i = b;
//  451 :                         x.f = x.f / y.f;
//  452 :                         val = x.i;               break;
//  453 :       case sf_fplus:    x.i = val; y.i = b;
//  454 :                         x.f = x.f + y.f;
//  455 :                         val = x.i;               break;
//  456 :       case sf_fminus:   x.i = val; y.i = b;
//  457 :                         x.f = x.f - y.f;
//  458 :                         val = x.i;               break;
//  459 :       case sf_mult:     val *= b;                break;
//  460 :       case sf_div:      val /= b;                break;
//  461 :       case sf_rem:      val %= b;                break;
//  462 :       case sf_plus:     val += b;                break;
//  463 :       case sf_minus:    val -= b;                break;
//  464 :       case sf_lshift:   if (b>=BperW) val=0; /* bug */
//  465 :                         val <<= b;               break;
//  466 :       case sf_rshift:   if (b>=BperW) val=0; /* bug */
//  467 :	                 val = WD((UWD val)>>b);  break;
//  468 :       case sf_logand:   val &= b;                break;
//  469 :       case sf_logor:    val |= b;                break;
//  470 :       case sf_eqv:      val = ~(val ^ b);        break;
//  471 :       case sf_neqv:     val ^= b;                break;
//  472 :       }
//  473 :       //printf("selst: op=%" FormD " len=%" FormD " sh=%" FormD
//  474 :                " oldval=%08" FormX " val=%08" FormX " mask=%08" FormX "\n",
//  475 :       //       op, len, sh, (UBCPLWORD)oldval, (UBCPLWORD)val, (UBCPLWORD)mask);
//  476 :       // Replace field by new value
//  477 :       *ptr ^= ((val ^ oldval)&mask) << sh;
//  478 :       goto fetch;
//  479 :     }
//  480 :
//  481 :   case F_mul:   a = b * a;        goto fetch;
//  482 :   case F_div:   if(a==0) {res = 5; pc--; goto ret; } /* Division by zero */
//  483 :                 a = b / a;        goto fetch;
//  484 :   case F_rem:   if(a==0) {res = 5; pc--; goto ret; } /* Division by zero */
//  485 :                 a = b % a;        goto fetch;
//  486 :   case F_add:   a = b + a;        goto fetch;
//  487 :   case F_sub:   a = b - a;        goto fetch;
//  488 :   case F_neg:   a = - a;          goto fetch;
//  489 :
//  490 :   case F_fhop:  a = 0; pc++;      goto fetch;
//  491 :
//  492 :   case F_lsh:   if (a>=BperW) b=0; /* bug */
//  493 :                 a = b << a;       goto fetch;
//  494 :   case F_rsh:   if (a>=BperW) b=0; /* bug */
//  495 :                 a = WD((UWD b)>>a); goto fetch;
//  496 :   case F_not:   a = ~ a;          goto fetch;
//  497 :   case F_and:   a = b & a;        goto fetch;
//  498 :   case F_or:    a = b | a;        goto fetch;
//  499 :   case F_xor:   a = b ^ a;        goto fetch;
//  500 :
//  501 :   case F_goto:  pc = a;           goto fetch;
//  502 :
//  503 :   case F_brk:   res = 2; pc--; goto ret;  /* BREAKPOINT  */
//  504 :                 
//  505 :   case F_rv+6:  a = W[a+6]; goto fetch;
//  506 :   case F_rv+5:  a = W[a+5]; goto fetch;
//  507 :   case F_rv+4:  a = W[a+4]; goto fetch;
//  508 :   case F_rv+3:  a = W[a+3]; goto fetch;
//  509 :   case F_rv+2:  a = W[a+2]; goto fetch;
//  510 :   case F_rv+1:  a = W[a+1]; goto fetch;
//  511 :   case F_rv:    a = W[a+0]; goto fetch;
//  512 :
//  513 :   case F_st+3:  W[a+3] = b; goto fetch;
//  514 :   case F_st+2:  W[a+2] = b; goto fetch;
//  515 :   case F_st+1:  W[a+1] = b; goto fetch;
//  516 :   case F_st:    W[a+0] = b; goto fetch;
//  517 :
//  518 :   case F_chgco: W[Wg[Gn_currco]] = Wp[0]; /* !currco := !p    */
//  519 :                 pc = Wp[1];               /* pc      := p!1   */
//  520 :                 Wg[Gn_currco] = Wp[4];    /* currco  := cptr  */
//  521 :                 p = W[Wp[4]]>>B2Wsh;      /* p       := !cptr */
//  522 :                 Wp = W+p;
//  523 :                 goto fetch;
//  524 :
//  525 :   case F_mdiv:
//  526 :               { BCPLINT64 ab = (BCPLINT64)(Wp[3]) * (BCPLINT64)(Wp[4]);
//  527 :                 BCPLWORD c = Wp[5];
//  528 :                 if(c==0) c=1;
//  529 :                 Wg[Gn_result2] = (BCPLWORD)(ab % c);
//  530 :                 a = (BCPLWORD)(ab / c);
//  531 :                 /* fall through to return  */
//  532 :               }
//  533 :   case F_rtn:   pc = Wp[1];
//  534 :                 p  = W[p]>>2;
//  535 :                 Wp = W+p; 
//  536 :                 goto fetch;
//  537 :
//  538 :   case F_gbyt: a = B[a+(b<<B2Wsh)];
//  539 :                goto fetch;
//  540 :   case F_pbyt: B[a+(b<<B2Wsh)] = (char)c;  goto fetch;
//  541 :   case F_xpbyt:B[b+(a<<B2Wsh)] = (char)c;  goto fetch;
//  542 :   case F_atc:  c = a;                      goto fetch;
//  543 :   case F_btc:  c = b;                      goto fetch;
//  544 :   case F_atb:  b = a;                      goto fetch;
//  545 :   case F_xch:  a = a^b; b = a^b; a = a^b;  goto fetch;
//  546 :
//  547 :   case F_swb: { BCPLWORD n, k, val, i=1;
//  548 :                 k = (pc+1)>>1;
//  549 :                 n = H[k];
//  550 :                 while(i<=n)
//  551 :                 { i += i;
//  552 :                   val = H[k+i];
//  553 :                   if (a==val) { k += i; break; }
//  554 :                   if (a<val) i++;
//  555 :                 }
//  556 :                 k++;
//  557 :                 pc = (k<<1) + SH[k];
//  558 :                 goto fetch;
//  559 :               }
//  560 :
//  561 :   case F_swl: { BCPLWORD n,q;
//  562 :                 q = (pc+1)>>1;
//  563 :                 n = H[q++];
//  564 :                 if(0<=a && a<n) q += a + 1;
//  565 :                 pc = (q<<1) + SH[q];
//  566 :                 goto fetch;
//  567 :               }
//  568 :
//  569 :   case F_sys: switch(a) {
//  570 :                 default: // system call -- general case
//  571 : 
//  572 :		         W[regs+0]  = a;    /* Save all the registers */
//  573 :		         W[regs+1]  = b;    /* for debugging purposes */
//  574 :                         W[regs+2]  = c;
//  575 :                         W[regs+3]  = p<<B2Wsh;
//  576 :                         W[regs+4]  = g<<B2Wsh;
//  577 :                         W[regs+5]  = st;
//  578 :                         W[regs+6]  = pc;
//  579 :                         W[regs+7]  = count;
//  580 :                         W[regs+8]  = mw;
//  581 :  
//  582 :                         a = dosys(p, g); 
//  583 :                         goto fetch;
//  584 :
//  585 :                 case Sys_setcount:
//  586 :                         /* oldcount := sys(Sys_setcount, newcount)  */
//  587 :                         a = count; 
//  588 :		         count = Wp[4];
//  589 :                         res = -1; /* Leave and immediately re-enter */
//  590 :                         goto ret; /* the interpreter */
//  591 :
//  592 :                 case Sys_quit:
//  593 :                         res = Wp[4];
//  594 :                         goto ret;
//  595 :
//  596 :	      /*
//  597 :                 case Sys_rti:  //  sys(Sys_rti, regs)
//  598 :                 case Sys_saveregs: // sys(Sys_saveregs, regs)
//  599 :                 case Sys_setst: // sys(Sys_setst, st)
//  600 :              */
//  601 :		 case Sys_watch:  /* sys(Sys_watch, addr) */
//  602 :                       { watchaddr = &W[Wp[4]];
//  603 :	                 watchval = *watchaddr;
//  604 :                         goto fetch;
//  605 :                       }
//  606 :               }
//  607 :
//  608 :   case F_lp0+16:  b = a; a = Wp[16]; goto fetch;
//  609 :   case F_lp0+15:  b = a; a = Wp[15]; goto fetch;
//  610 :   case F_lp0+14:  b = a; a = Wp[14]; goto fetch;
//  611 :   case F_lp0+13:  b = a; a = Wp[13]; goto fetch;
//  612 :   case F_lp0+12:  b = a; a = Wp[12]; goto fetch;
//  613 :   case F_lp0+11:  b = a; a = Wp[11]; goto fetch;
//  614 :   case F_lp0+10:  b = a; a = Wp[10]; goto fetch;
//  615 :   case F_lp0+9:   b = a; a = Wp[9];  goto fetch;
//  616 :   case F_lp0+8:   b = a; a = Wp[8];  goto fetch;
//  617 :   case F_lp0+7:   b = a; a = Wp[7];  goto fetch;
//  618 :   case F_lp0+6:   b = a; a = Wp[6];  goto fetch;
//  619 :   case F_lp0+5:   b = a; a = Wp[5];  goto fetch;
//  620 :   case F_lp0+4:   b = a; a = Wp[4];  goto fetch;
//  621 :   case F_lp0+3:   b = a; a = Wp[3];  goto fetch;
//  622 :
//  623 :   case F_lp:   b = a; a = Wp[B[pc++]];          goto fetch;
//  624 :   case F_lph:  b = a; a = Wp[GH(pc)];  pc += 2; goto fetch;
//  625 :   case F_lpw:  b = a; a = Wp[GW(pc)];  pc += 4; goto fetch;
//  626 :
//  627 :   case F_llp:  b = a; a = p+B[pc++];             goto fetch;
//  628 :   case F_llph: b = a; a = p+GH(pc);     pc += 2; goto fetch;
//  629 :   case F_llpw: b = a; a = p+GW(pc);     pc += 4; goto fetch;
//  630 :
//  631 :   case F_sp0+16: Wp[16] = a; goto fetch;
//  632 :   case F_sp0+15: Wp[15] = a; goto fetch;
//  633 :   case F_sp0+14: Wp[14] = a; goto fetch;
//  634 :   case F_sp0+13: Wp[13] = a; goto fetch;
//  635 :   case F_sp0+12: Wp[12] = a; goto fetch;
//  636 :   case F_sp0+11: Wp[11] = a; goto fetch;
//  637 :   case F_sp0+10: Wp[10] = a; goto fetch;
//  638 :   case F_sp0+9:  Wp[9]  = a; goto fetch;
//  639 :   case F_sp0+8:  Wp[8]  = a; goto fetch;
//  640 :   case F_sp0+7:  Wp[7]  = a; goto fetch;
//  641 :   case F_sp0+6:  Wp[6]  = a; goto fetch;
//  642 :   case F_sp0+5:  Wp[5]  = a; goto fetch;
//  643 :   case F_sp0+4:  Wp[4]  = a; goto fetch;
//  644 :   case F_sp0+3:  Wp[3]  = a; goto fetch;
//  645 :
//  646 :   case F_sp:    Wp[B[pc++]] = a;                  goto fetch;
//  647 :   case F_sph:   Wp[GH(pc)]  = a;         pc += 2; goto fetch;
//  648 :   case F_spw:   Wp[GW(pc)]  = a;         pc += 4; goto fetch;
//  649 :
//  650 :   case F_lgh:   b = a; a = Wg[GH(pc)];   pc += 2; goto fetch;
//  651 :   case F_lg1:   b = a; a = Wg1[B[pc++]];          goto fetch;
//  652 :   case F_lg:    b = a; a = Wg[B[pc++]];           goto fetch;
//  653 :
//  654 :   case F_sgh:   Wg[GH(pc)]   = a;        pc += 2; goto fetch;
//  655 :   case F_sg1:   Wg1[B[pc++]] = a;                 goto fetch;
//  656 :   case F_sg:    Wg[B[pc++]]  = a;                 goto fetch;
//  657 :
//  658 :   case F_llgh: b = a; a = g+GH(pc);      pc += 2; goto fetch;
//  659 :   case F_llg1: b = a; a = g+256+B[pc++];          goto fetch;
//  660 :   case F_llg:  b = a; a = g+B[pc++];              goto fetch;
//  661 :
//  662 :   case F_ll+1: i = (pc>>1) + B[pc];
//  663 :                i = (i<<1) + SH[i];
//  664 :                b = a; a = W[i>>B2Wsh];          pc++; goto fetch;
//  665 :
//  666 :   case F_ll:   b = a; a = W[(pc+SB[pc])>>B2Wsh];pc++; goto fetch;
//  667 :
//  668 :   case F_sl+1: i = (pc>>1) + B[pc];
//  669 :                i = (i<<1) + SH[i];
//  670 :                W[i>>B2Wsh] = a;                 pc++; goto fetch;
//  671 :
//  672 :   case F_sl:   W[(pc+SB[pc])>>B2Wsh] = a;       pc++; goto fetch;
//  673 :   
//  674 :   case F_lll+1:i = (pc>>1) + B[pc];
//  675 :                i = (i<<1) + SH[i];
//  676 :                b = a; a = i>>B2Wsh;             pc++; goto fetch;
//  677 :
//  678 :   case F_lll:  b = a; a = (pc+SB[pc])>>B2Wsh;   pc++; goto fetch;
//  679 :   
//  680 :   case F_l0+10: b = a; a = 10; goto fetch;
//  681 :   case F_l0+9:  b = a; a =  9; goto fetch;
//  682 :   case F_l0+8:  b = a; a =  8; goto fetch;
//  683 :   case F_l0+7:  b = a; a =  7; goto fetch;
//  684 :   case F_l0+6:  b = a; a =  6; goto fetch;
//  685 :   case F_l0+5:  b = a; a =  5; goto fetch;
//  686 :   case F_l0+4:  b = a; a =  4; goto fetch;
//  687 :   case F_l0+3:  b = a; a =  3; goto fetch;
//  688 :   case F_l0+2:  b = a; a =  2; goto fetch;
//  689 :   case F_l0+1:  b = a; a =  1; goto fetch;
//  690 :   case F_l0:    b = a; a =  0; goto fetch;
//  691 :   case F_l0-1:  b = a; a = -1; goto fetch; 
//  692 :
//  693 :   case F_l:     b = a; a = B[pc++];               goto fetch;
//  694 :   case F_lh:    b = a; a = GH(pc);       pc += 2; goto fetch;
//  695 :   case F_lw:    b = a; a = GW(pc);       pc += 4; goto fetch;
//  696 :
//  697 :   case F_lm:    b = a; a = - WD(B[pc++]);         goto fetch;
//  698 :   case F_lmh:   b = a; a = - WD(GH(pc)); pc += 2; goto fetch;
//  699 :                
//  700 :   case F_lf+1:  b = a;
//  701 :                 a = (pc>>1) + B[pc];
//  702 :                 a = (a<<1) + SH[a];         pc++; goto fetch;
//  703 :
//  704 :   case F_lf:    b = a; a = pc + SB[pc];     pc++; goto fetch;
//  705 : 
//  706 :   case F_k0gh+11: Wp[11] = p<<B2Wsh; p += 11; goto applygh;
//  707 :   case F_k0gh+10: Wp[10] = p<<B2Wsh; p += 10; goto applygh;
//  708 :   case F_k0gh+9:  Wp[ 9] = p<<B2Wsh; p +=  9; goto applygh;
//  709 :   case F_k0gh+8:  Wp[ 8] = p<<B2Wsh; p +=  8; goto applygh;
//  710 :   case F_k0gh+7:  Wp[ 7] = p<<B2Wsh; p +=  7; goto applygh;
//  711 :   case F_k0gh+6:  Wp[ 6] = p<<B2Wsh; p +=  6; goto applygh;
//  712 :   case F_k0gh+5:  Wp[ 5] = p<<B2Wsh; p +=  5; goto applygh;
//  713 :   case F_k0gh+4:  Wp[ 4] = p<<B2Wsh; p +=  4; goto applygh;
//  714 :   case F_k0gh+3:  Wp[ 3] = p<<B2Wsh; p +=  3;
//  715 :   applygh:        Wp    = W+p;
//  716 :                   Wp[1] = pc + 2;
//  717 :                   pc    = Wg[GH(pc)];
//  718 :                   Wp[2] = pc;
//  719 :                   Wp[3] =  a;
//  720 :                   if (pc>=0) goto fetch;
//  721 :                   goto negpc;
//  722 :
//  723 :   case F_k0g1+11: Wp[11] = p<<B2Wsh; p += 11; goto applyg1;
//  724 :   case F_k0g1+10: Wp[10] = p<<B2Wsh; p += 10; goto applyg1;
//  725 :   case F_k0g1+9:  Wp[ 9] = p<<B2Wsh; p +=  9; goto applyg1;
//  726 :   case F_k0g1+8:  Wp[ 8] = p<<B2Wsh; p +=  8; goto applyg1;
//  727 :   case F_k0g1+7:  Wp[ 7] = p<<B2Wsh; p +=  7; goto applyg1;
//  728 :   case F_k0g1+6:  Wp[ 6] = p<<B2Wsh; p +=  6; goto applyg1;
//  729 :   case F_k0g1+5:  Wp[ 5] = p<<B2Wsh; p +=  5; goto applyg1;
//  730 :   case F_k0g1+4:  Wp[ 4] = p<<B2Wsh; p +=  4; goto applyg1;
//  731 :   case F_k0g1+3:  Wp[ 3] = p<<B2Wsh; p +=  3;
//  732 :   applyg1:        Wp    = W+p;
//  733 :                   Wp[1] = pc + 1;
//  734 :                   pc    = Wg1[B[pc]];
//  735 :                   Wp[2] = pc;
//  736 :                   Wp[3] = a;
//  737 :                   if (pc>=0) goto fetch;
//  738 :                   goto negpc;
//  739 : 
//  740 :   case F_k0g+11: Wp[11] = p<<B2Wsh; p += 11; goto applyg;
//  741 :   case F_k0g+10: Wp[10] = p<<B2Wsh; p += 10; goto applyg;
//  742 :   case F_k0g+9:  Wp[ 9] = p<<B2Wsh; p +=  9; goto applyg;
//  743 :   case F_k0g+8:  Wp[ 8] = p<<B2Wsh; p +=  8; goto applyg;
//  744 :   case F_k0g+7:  Wp[ 7] = p<<B2Wsh; p +=  7; goto applyg;
//  745 :   case F_k0g+6:  Wp[ 6] = p<<B2Wsh; p +=  6; goto applyg;
//  746 :   case F_k0g+5:  Wp[ 5] = p<<B2Wsh; p +=  5; goto applyg;
//  747 :   case F_k0g+4:  Wp[ 4] = p<<B2Wsh; p +=  4; goto applyg;
//  748 :   case F_k0g+3:  Wp[ 3] = p<<B2Wsh; p +=  3;
//  749 :   applyg:        Wp    = W+p;
//  750 :                  Wp[1] = pc + 1;
//  751 :                  pc    = Wg[B[pc]];
//  752 :                  Wp[2] = pc;
//  753 :                  Wp[3] = a;
//  754 :                  if (pc>=0) goto fetch;
//  755 :                  goto negpc;
//  756 : 
//  757 :   case F_k0+11:  Wp[11] = p<<B2Wsh; p += 11; goto applyk;
//  758 :   case F_k0+10:  Wp[10] = p<<B2Wsh; p += 10; goto applyk;
//  759 :   case F_k0+9:   Wp[ 9] = p<<B2Wsh; p +=  9; goto applyk;
//  760 :   case F_k0+8:   Wp[ 8] = p<<B2Wsh; p +=  8; goto applyk;
//  761 :   case F_k0+7:   Wp[ 7] = p<<B2Wsh; p +=  7; goto applyk;
//  762 :   case F_k0+6:   Wp[ 6] = p<<B2Wsh; p +=  6; goto applyk;
//  763 :   case F_k0+5:   Wp[ 5] = p<<B2Wsh; p +=  5; goto applyk;
//  764 :   case F_k0+4:   Wp[ 4] = p<<B2Wsh; p +=  4; goto applyk;
//  765 :   case F_k0+3:   Wp[ 3] = p<<B2Wsh; p +=  3;
//  766 :   applyk:        Wp    = W+p;
//  767 :                  Wp[1] = WD pc;
//  768 :                  pc    = a;
//  769 :                  Wp[2] = pc;
//  770 :                  Wp[3] = a = b;
//  771 :                  if (pc>=0) goto fetch;
//  772 :                  goto negpc;
//  773 :
//  774 :   case F_k:      k = B[pc]; Wp[k] = p<<B2Wsh; p +=  k;
//  775 :                  Wp    = W+p;
//  776 :                  Wp[1] = pc + 1;
//  777 :                  pc    = a;
//  778 :                  Wp[2] = pc;
//  779 :                  Wp[3] = a = b;
//  780 :                  if (pc>=0) goto fetch;
//  781 :                  goto negpc;
//  782 :
//  783 :   case F_kh:     k = GH(pc); Wp[k] = p<<B2Wsh; p +=  k;
//  784 :                  Wp    = W+p;
//  785 :                  Wp[1] = pc + 2;
//  786 :                  pc    = a;
//  787 :                  Wp[2] = pc;
//  788 :                  Wp[3] = a = b;
//  789 :                  if (pc>=0) goto fetch;
//  790 :                  goto negpc;
//  791 :
//  792 :   case F_kw:     k = GW(pc); Wp[k] = p<<B2Wsh; p +=  k;
//  793 :                  Wp    = W+p;
//  794 :                  Wp[1] = pc + 4;
//  795 :                  pc    = a;
//  796 :                  Wp[2] = pc;
//  797 :                  Wp[3] = a = b;
//  798 :                  if (pc>=0) goto fetch;
//  799 :                  goto negpc;
//  800 :
//  801 :   case F_jeq:   if(b==a) { pc += SB[pc];   goto fetch; }
//  802 :                 pc++; goto fetch;
//  803 :   case F_jeq+1: if(b==a) goto indjump;
//  804 :                 pc++; goto fetch;
//  805 :   case F_jeq+2: if(a==0) { pc += SB[pc];   goto fetch; }
//  806 :                 pc++; goto fetch;
//  807 :   case F_jeq+3: if(a==0) goto indjump;
//  808 :                 pc++; goto fetch;
//  809 :
//  810 :   case F_jne:   if(b!=a) { pc += SB[pc];   goto fetch; }
//  811 :                 pc++; goto fetch;
//  812 :   case F_jne+1: if(b!=a) goto indjump;
//  813 :                 pc++; goto fetch;
//  814 :   case F_jne+2: if(a!=0) { pc += SB[pc];   goto fetch; }
//  815 :                 pc++; goto fetch;
//  816 :   case F_jne+3: if(a!=0) goto indjump;
//  817 :                 pc++; goto fetch;
//  818 :
//  819 :   case F_jls:   if(b<a) { pc += SB[pc];   goto fetch; }
//  820 :                 pc++; goto fetch;
//  821 :   case F_jls+1: if(b<a) goto indjump;
//  822 :                 pc++; goto fetch;
//  823 :   case F_jls+2: if(a<0) { pc += SB[pc];   goto fetch; }
//  824 :                 pc++; goto fetch;
//  825 :   case F_jls+3: if(a<0) goto indjump;
//  826 :                 pc++; goto fetch;
//  827 :
//  828 :   case F_jgr:   if(b>a) { pc += SB[pc];   goto fetch; }
//  829 :                 pc++; goto fetch;
//  830 :   case F_jgr+1: if(b>a) goto indjump;
//  831 :                 pc++; goto fetch;
//  832 :   case F_jgr+2: if(a>0) { pc += SB[pc];   goto fetch; }
//  833 :                 pc++; goto fetch;
//  834 :   case F_jgr+3: if(a>0) goto indjump;
//  835 :                 pc++; goto fetch;
//  836 :
//  837 :   case F_jle:   if(b<=a) { pc += SB[pc];   goto fetch; }
//  838 :                 pc++; goto fetch;
//  839 :   case F_jle+1: if(b<=a) goto indjump;
//  840 :                 pc++; goto fetch;
//  841 :   case F_jle+2: if(a<=0) { pc += SB[pc];   goto fetch; }
//  842 :                 pc++; goto fetch;
//  843 :   case F_jle+3: if(a<=0) goto indjump;
//  844 :                 pc++; goto fetch;
//  845 :
//  846 :   case F_jge:   if(b>=a) { pc += SB[pc];   goto fetch; }
//  847 :                 pc++; goto fetch;
//  848 :   case F_jge+1: if(b>=a) goto indjump;
//  849 :                 pc++; goto fetch;
//  850 :   case F_jge+2: if(a>=0) { pc += SB[pc];   goto fetch; }
//  851 :                 pc++; goto fetch;
//  852 :   case F_jge+3: if(a>=0) goto indjump;
//  853 :                 pc++; goto fetch;
//  854 :
//  855 :   case F_j:     pc += SB[pc];        goto fetch;
//  856 :
//  857 : indjump:
//  858 :   case F_j+1:   pc = (pc>>1) + B[pc];
//  859 :                 pc = (pc<<1) + SH[pc];
//  860 :                 goto fetch;
//  861 :
//  862 :   case F_ap0+12: a = a + Wp[12]; goto fetch;
//  863 :   case F_ap0+11: a = a + Wp[11]; goto fetch;
//  864 :   case F_ap0+10: a = a + Wp[10]; goto fetch;
//  865 :   case F_ap0+9:  a = a + Wp[ 9]; goto fetch;
//  866 :   case F_ap0+8:  a = a + Wp[ 8]; goto fetch;
//  867 :   case F_ap0+7:  a = a + Wp[ 7]; goto fetch;
//  868 :   case F_ap0+6:  a = a + Wp[ 6]; goto fetch;
//  869 :   case F_ap0+5:  a = a + Wp[ 5]; goto fetch;
//  870 :   case F_ap0+4:  a = a + Wp[ 4]; goto fetch;
//  871 :   case F_ap0+3:  a = a + Wp[ 3]; goto fetch;
//  872 :
//  873 :   case F_ap:    a += Wp[B[pc++]];         goto fetch;
//  874 :   case F_aph:   a += Wp[GH(pc)]; pc += 2; goto fetch;
//  875 :   case F_apw:   a += Wp[GW(pc)]; pc += 4; goto fetch;
//  876 :   case F_agh:   a += Wg[GH(pc)]; pc += 2; goto fetch;
//  877 :   case F_ag1:   a += Wg1[B[pc++]];        goto fetch;
//  878 :   case F_ag:    a += Wg[B[pc++]];         goto fetch;
//  879 :
//  880 :   case F_a0+5: a += 5; goto fetch;
//  881 :   case F_a0+4: a += 4; goto fetch;
//  882 :   case F_a0+3: a += 3; goto fetch;
//  883 :   case F_a0+2: a += 2; goto fetch;
//  884 :   case F_a0+1: a += 1; goto fetch;
//  885 :   case F_nop:          goto fetch;
//  886 :
//  887 :   case F_a:    a += B[pc++];           goto fetch;
//  888 :   case F_ah:   a += GH(pc);   pc += 2; goto fetch;
//  889 :   case F_aw:   a += GW(pc);   pc += 4; goto fetch;
//  890 :   case F_s:    a -= B[pc++];           goto fetch;
//  891 :   case F_sh:   a -= GH(pc);   pc += 2; goto fetch;
//  892 :
//  893 :   case F_s0+4: a -= 4; goto fetch;
//  894 :   case F_s0+3: a -= 3; goto fetch;
//  895 :   case F_s0+2: a -= 2; goto fetch;
//  896 :   case F_s0+1: a -= 1; goto fetch;
//  897 :
//  898 :   case F_l0p0+12: b = a; a = W[Wp[12]+0]; goto fetch;
//  899 :   case F_l0p0+11: b = a; a = W[Wp[11]+0]; goto fetch;
//  900 :   case F_l0p0+10: b = a; a = W[Wp[10]+0]; goto fetch;
//  901 :   case F_l0p0+9:  b = a; a = W[Wp[ 9]+0]; goto fetch;
//  902 :   case F_l0p0+8:  b = a; a = W[Wp[ 8]+0]; goto fetch;
//  903 :   case F_l0p0+7:  b = a; a = W[Wp[ 7]+0]; goto fetch;
//  904 :   case F_l0p0+6:  b = a; a = W[Wp[ 6]+0]; goto fetch;
//  905 :   case F_l0p0+5:  b = a; a = W[Wp[ 5]+0]; goto fetch;
//  906 :   case F_l0p0+4:  b = a; a = W[Wp[ 4]+0]; goto fetch;
//  907 :   case F_l0p0+3:  b = a; a = W[Wp[ 3]+0]; goto fetch;
//  908 :
//  909 :   case F_l1p0+6:  b = a; a = W[Wp[ 6]+1]; goto fetch;
//  910 :   case F_l1p0+5:  b = a; a = W[Wp[ 5]+1]; goto fetch;
//  911 :   case F_l1p0+4:  b = a; a = W[Wp[ 4]+1]; goto fetch;
//  912 :   case F_l1p0+3:  b = a; a = W[Wp[ 3]+1]; goto fetch;
//  913 :
//  914 :   case F_l2p0+5:  b = a; a = W[Wp[ 5]+2]; goto fetch;
//  915 :   case F_l2p0+4:  b = a; a = W[Wp[ 4]+2]; goto fetch;
//  916 :   case F_l2p0+3:  b = a; a = W[Wp[ 3]+2]; goto fetch;
//  917 :
//  918 :   case F_l3p0+4:  b = a; a = W[Wp[ 4]+3]; goto fetch;
//  919 :   case F_l3p0+3:  b = a; a = W[Wp[ 3]+3]; goto fetch;
//  920 :
//  921 :   case F_l4p0+4:  b = a; a = W[Wp[ 4]+4]; goto fetch;
//  922 :   case F_l4p0+3:  b = a; a = W[Wp[ 3]+4]; goto fetch;
//  923 :
//  924 :   case F_l0gh:  b = a; a = W[Wg[GH(pc)]+0]; pc += 2; goto fetch;
//  925 :   case F_l1gh:  b = a; a = W[Wg[GH(pc)]+1]; pc += 2; goto fetch;
//  926 :   case F_l2gh:  b = a; a = W[Wg[GH(pc)]+2]; pc += 2; goto fetch;
//  927 :   case F_l0g1:  b = a; a = W[Wg1[B[pc++]]+0];        goto fetch;
//  928 :   case F_l1g1:  b = a; a = W[Wg1[B[pc++]]+1];        goto fetch;
//  929 :   case F_l2g1:  b = a; a = W[Wg1[B[pc++]]+2];        goto fetch;
//  930 :   case F_l0g:   b = a; a = W[Wg[B[pc++]]+0];         goto fetch;
//  931 :   case F_l1g:   b = a; a = W[Wg[B[pc++]]+1];         goto fetch;
//  932 :   case F_l2g:   b = a; a = W[Wg[B[pc++]]+2];         goto fetch;
//  933 :
//  934 :   case F_s0gh:  W[Wg[GH(pc)]+0] = a;        pc += 2; goto fetch;
//  935 :   case F_s0g1:  W[Wg1[B[pc++]]+0] = a;               goto fetch;
//  936 :   case F_s0g:   W[Wg[B[pc++]]+0] = a;                goto fetch;
//  937 :
//  938 :   case F_stp0+5: W[a+Wp[5]] = b; goto fetch;
//  939 :   case F_stp0+4: W[a+Wp[4]] = b; goto fetch;
//  940 :   case F_stp0+3: W[a+Wp[3]] = b; goto fetch;
//  941 :
//  942 :   case F_st0p0+4: W[Wp[4]+0] = a; goto fetch;
//  943 :   case F_st0p0+3: W[Wp[3]+0] = a; goto fetch;
//  944 :
//  945 :   case F_st1p0+4: W[Wp[4]+1] = a; goto fetch;
//  946 :   case F_st1p0+3: W[Wp[3]+1] = a; goto fetch;
//  947 :   
//  948 :   case F_rvp0+7: a = W[a+Wp[7]]; goto fetch;
//  949 :   case F_rvp0+6: a = W[a+Wp[6]]; goto fetch;
//  950 :   case F_rvp0+5: a = W[a+Wp[5]]; goto fetch;
//  951 :   case F_rvp0+4: a = W[a+Wp[4]]; goto fetch;
//  952 :   case F_rvp0+3: a = W[a+Wp[3]]; goto fetch;
//  953 :   }
//  954 :
//  955 :negpc:
//  956 :   res = 4;  /* negative pc  */ 
//  957 :ret:
//  958 :   tracing = 0;
//  959 :   //printf("cinterp: returning from interpret, res=%" FormD "\n", res);
//  960 :   W[regs+0]  = a;    /* Save the machine registers  */
//  961 :   W[regs+1]  = b;
//  962 :   W[regs+2]  = c;
//  963 :   W[regs+3]  = p<<B2Wsh;
//  964 :   W[regs+4]  = g<<B2Wsh;

	shladd	r39=r55,2,r0				//5: {964:4} 51
	shladd	r47=r55,2,r33 ;;			//5: {300:30} 31
 }
 {   .mmi  //R-Addr: 0xc0
  (p7)	ld8	r29=[r26]				//6: {321:6} 39
	ld4	r60=[r61]				//6: {290:28} 13
	add	r46=1024,r47				//6: {301:30} 32
 }
 {   .mmi  //R-Addr: 0xd0
	add	r2=@ltoff(WATCHVAL#),gp			//6: {603:19} 42
	add	r42=254,r0				//6: {363:1} 46
	shladd	r66=r67,2,r33 ;;			//6: {299:21} 30
 }
 {   .mib  //R-Addr: 0xe0
	ld4	r48=[r49]				//7: {297:37} 29
	nop.i	0
// Branch taken probability 0.50
  (p6)	br.cond.dptk	.b1_2 ;;			//7: {307:4} 37
// Block 1: prolog  Pred: 0     Succ: 3  -GO
// Freq 2.2e+01
 }
 {   .mii  //R-Addr: 0xf0
	ld8	r3=[r8]					//0: {363:1} 45
	sxt4	r44=r29					//0: {321:6} 40
	mov	r33=r43					//0: {285:1} 5536
 }
 {   .mmi  //R-Addr: 0x100
	ld8	r30=[r2] ;;				//0: {603:19} 43
	ld8	r27=[r28]				//1: {345:4} 48
	sxt4	r40=r3					//1: {363:1} 50
 }
 {   .mii  //R-Addr: 0x110
	ld4	r17=[r44]				//1: {321:6} 41
	sxt4	r38=r30 ;;				//1: {603:19} 52
	sxt4	r41=r27 ;;				//2: {345:4} 49
// Block 3: lentry  Pred: 811 797 809 796 807 795 426 300 1 279 284 296 297 327 326 329 333 332 335 371 370 373 376 375 378 414 4...
//  418 421 454 453 456 459 458 461 485 486 508 507 510 513 512 515 545 544 547 550 549 330 552 451 659 661 275 274 273 272 271 
//  270 269 268 267 266 265 264 263 262 259 258 257 256 255 254 253 252 251 250 249 248 247 246 245 243 242 241 240 239 238 237 
//  236 235 234 233 232 231 230 229 228 227 226 225 224 223 222 221 220 219 218 217 216 215 214 213 207 206 205 204 203 202 201 
//  200 199 198 197 196 195 194 193 192 191 190 189 188 187 186 185 184 183 182 181 176 175 174 173 172 171 170 169 165 164 163 
//  162 161 160 159 158 157 156 155 154 153 152 151 150 149 143 142 141 140 139 138 137 136 135 134 133 132 131 130 129 119 118 
//  117 112 111 110 109 108 107 106 105 104 103 102 101 100 99 98 97 87 86 85 80 79 78 77 76 362 359 73 72 71 70 69 68 67 66 65 
//  55 54 53 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 812 814 
//    Succ: 784 5  -G
// Freq 5.0e+01
 }

// Fetch:

.b1_3: 
 {   .mii  //R-Addr: 0x120
	cmp4.eq.unc	p6,p0=r17,r0			//0: {313:4} 54
	sxt4	r68=r37					//0: {363:1} 88
	sxt4	r16=r17					//0: {313:4} 58
 }
 {   .mmb  //R-Addr: 0x130
	ld4.s	r15=[r38]				//0: {313:4} 60
	ld4.s	r14=[r45]				//0: {341:4} 89
// Branch taken probability 0.12
  (p6)	br.cond.dpnt	.b1_784 ;;			//0: {313:4} 55
// Block 5:  Pred: 3     Succ: 792 803  -GO
// Freq 4.4e+01
 }
 {   .mii  //R-Addr: 0x140
	ld4	r11=[r16]				//0: {313:4} 59
// Branch taken probability 0.05
	chk.s	r15,.b1_792				//0: {313:4} 3374
// Block 803:  Pred: 5     Succ: 802  -GO
// Freq 4.2e+01
	cmp4.lt.unc	p0,p15=r50,r0 ;;		//0: {334:4} 3384
// Block 802: lexit  Pred: 792 803     Succ: 6 4  -GO
// Freq 4.4e+01
 }
.b1_802: 
 {   .mii  //R-Addr: 0x150
  (p15)cmp4.eq.unc	p13,p12=r50,r0			//0: {335:6} 3389
	cmp4.ne.unc	p9,p0=r11,r15			//0: {313:4} 61
	cmp4.ne.unc	p14,p0=r14,r0			//0: {341:4} 3388
 }
 {   .mbb  //R-Addr: 0x160
	nop.m	0
// Branch taken probability 0.20
  (p9)	br.cond.dpnt	.b1_6				//0: {313:4} 62
// Block 4: lexit collapsed  Pred: 802     Succ: 11 10  -G
// Freq 3.5e+01
// Branch taken probability 0.10
  (p13)br.cond.dpnt	.b1_11 ;;			//0: {335:6} 93
// Block 10: collapsed  Pred: 4 816     Succ: 793 804  -G
// Freq 3.7e+01
 }
.b1_10: 
 {   .mib  //R-Addr: 0x170
// Branch taken probability 0.05
	chk.s	r14,.b1_793				//0: {341:4} 3379
// Block 804: collapsed  Pred: 10     Succ: 13 12  -G
// Freq 3.5e+01
  (p12)add	r50=-1,r50				//0: {336:6} 94
// Branch taken probability 0.05
  (p14)br.cond.dpnt	.b1_13 ;;			//0: {341:4} 91
// Block 12: collapsed  Pred: 664 804 825     Succ: 14 16  -GO
// Freq 3.7e+01
 }
.b1_12: 
 {   .mmi  //R-Addr: 0x180
	ld4	r10=[r41]				//0: {345:4} 96
	add	r25=1,r0				//0: {350:3} 130
	add	r64=-1,r64				//0: {348:6} 109
 }
 {   .mii  //R-Addr: 0x190
	add	r9=@ltoff(TALLYV#),gp			//0: {345:29} 114
	add	r8=560,r33 ;;				//0: {350:3} 128
	sxt4	r3=r8					//1: {350:3} 129
 }
 {   .mii  //R-Addr: 0x1a0
	cmp4.ge.unc	p10,p9=r37,r10			//1: {345:4} 2666
	cmp4.le.unc	p8,p0=r64,r0			//1: {348:1} 110
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x1b0
  (p9)	cmp4.le	p10,p0=r37,r0				//2: {345:4} 2668
	nop.i	0
// Branch taken probability 0.75
  (p10)br.cond.dptk.many	.b1_14 ;;		//2: {345:4} 113
// Block 16:  Pred: 12     Succ: 14  -G
// Freq 9.3e+00
 }
 {   .mmi  //R-Addr: 0x1c0
	ld8	r2=[r9] ;;				//0: {345:29} 115
	ld4	r30=[r2]				//2: {345:29} 116
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x1d0
	nop.m	0
	sxt4	r29=r30					//3: {345:29} 117
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1e0
	shladd	r28=r37,2,r29 ;;			//4: {345:29} 118
	ld4	r27=[r28]				//5: {345:29} 119
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1f0
	add	r26=1,r27 ;;				//6: {345:29} 120
	st4	[r28]=r26				//7: {345:29} 121
	nop.i	0 ;;
// Block 14:  Pred: 12 16     Succ: 18 17  -G
// Freq 3.7e+01
 }
.b1_14: 
 {   .mib  //R-Addr: 0x200
	nop.m	0
	nop.i	0
// Branch taken probability 0.22
  (p8)	br.cond.dpnt	.b1_18 ;;			//0: {348:1} 111
// Block 17: lexit  Pred: 19 14     Succ: 20 21  -G
// Freq 3.7e+01
 }
.b1_17: 
 {   .mii  //R-Addr: 0x210
	add	r24=r63,r68				//0: {363:1} 122
	add	r37=1,r37				//0: {363:10} 124
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x220
	ld1	r20=[r24] ;;				//1: {363:1} 123
	add	r19=-1,r20				//2: {363:1} 125
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x230
	cmp4.gtu.unc	p7,p0=r19,r42			//3: {363:1} 126
	shladd	r18=r19,2,r40				//3: {363:1} 138
// Branch taken probability 0.20
  (p7)	br.cond.dpnt	.b1_20 ;;			//3: {363:1} 127
// Block 21: lexit  Pred: 17     Succ: 330 275 276 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 ...
//  52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 
//  93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 
//  126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 
//  157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 
//  188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 209 210 211 212 213 214 215 216 217 218 219 
//  220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 20 245 246 247 248 249 250 
//  251 252 253 254 255 256 260 257 258 259 261 262 263 264 265 266 267 268 269 270 271 272 273 274  -G
// Freq 3.0e+01
 }
 {   .mii  //R-Addr: 0x240
	ld4	r14=[r18]				//0: {363:1} 139
	sxt4	r11=r47					//0: {518:18} 2041
	sxt4	r10=r66					//0: {518:18} 2040
 }
 {   .mmb  //R-Addr: 0x250
	sub	r9=r0,r32				//0: {488:18} 2058
	nop.m	0
	nop.b	0 ;;
 }
 {   .mmi  //R-Addr: 0x260
	add	r8=16,r10				//1: {520:18} 2049
	add	r3=r65,r14				//1: {363:1} 140
	sxt4	r2=r37					//1: {891:17} 1979
 }
 {   .mmi  //R-Addr: 0x270
	add	r30=4,r10				//1: {519:18} 2047
	add	r29=12,r10				//1: {912:27} 2065
	add	r28=28,r11 ;;				//1: {518:18} 2042
 }
 {   .mii  //R-Addr: 0x280
	add	r26=20,r10				//2: {910:27} 2081
	mov	b6=r3					//2: {363:1} 141
	add	r25=r63,r2				//2: {891:17} 1980
 }
 {   .mmb  //R-Addr: 0x290
	add	r24=24,r10				//2: {909:27} 2089
	add	r20=48,r10				//2: {898:27} 1968
	br.cond.dptk	b6 ;;				//2: {363:1} 142
// Block 275: ltail collapsed  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$fe:
 {   .mmi  //R-Addr: 0x2a0
	shladd	r14=r32,2,r63				//0: {418:8} 2162
	add	r11=1,r0				//0: {417:17} 2168
	sxt4	r10=r37					//0: {414:23} 2152
 }
 {   .mmi  //R-Addr: 0x2b0
	add	r9=-1,r0				//0: {416:17} 2159
	add	r8=1,r37				//0: {414:25} 2151
	add	r37=2,r37 ;;				//0: {415:25} 2155
 }
 {   .mii  //R-Addr: 0x2c0
	ld4	r3=[r14]				//1: {418:8} 2163
	add	r2=r63,r10				//1: {414:23} 2153
	sxt4	r30=r8					//1: {415:23} 2156
 }
 {   .mmi  //R-Addr: 0x2d0
	ld4	r17=[r44] ;;				//1: {321:6} 2167
	ld1	r29=[r2]				//2: {414:23} 2154
	add	r28=r63,r30				//2: {415:23} 2157
 }
 {   .mii  //R-Addr: 0x2e0
	nop.m	0
	sxt4	r27=r3 ;;				//2: {418:8} 2164
	cmp4.eq.unc	p0,p13=r29,r0			//3: {417:8} 2651
 }
 {   .mmi  //R-Addr: 0x2f0
	ld1	r26=[r28] ;;				//3: {415:23} 2158
	nop.m	0
  (p13)shl	r25=r11,r29 ;;				//4: {417:17} 2169
 }
 {   .mii  //R-Addr: 0x300
	nop.m	0
	shr	r24=r27,r26				//5: {418:8} 2165
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x310
  (p13)add	r9=-1,r25 ;;				//7: {417:17} 2170
	and	r32=r24,r9				//8: {418:8} 2166
	nop.i	0
 }
 {   .mib  //R-Addr: 0x320
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//8: {321:6} 2679
// Block 274: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$fd:
 {   .mmi  //R-Addr: 0x330
	ld4	r19=[r8]				//0: {921:27} 2146
	ld4	r17=[r44]				//0: {321:6} 2150
	mov	r60=r32 ;;				//0: {921:20} 2143
 }
 {   .mmi  //R-Addr: 0x340
	shladd	r18=r19,2,r63 ;;			//1: {921:27} 2147
	add	r16=16,r18				//2: {921:27} 2148
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x350
	ld4	r32=[r16]				//3: {921:27} 2149
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2680
// Block 273: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$fc:
 {   .mmi  //R-Addr: 0x360
	ld4	r15=[r29]				//0: {922:27} 2138
	ld4	r17=[r44]				//0: {321:6} 2142
	mov	r60=r32 ;;				//0: {922:20} 2135
 }
 {   .mmi  //R-Addr: 0x370
	shladd	r14=r15,2,r63 ;;			//1: {922:27} 2139
	add	r11=16,r14				//2: {922:27} 2140
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x380
	ld4	r32=[r11]				//3: {922:27} 2141
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2681
// Block 272: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$fb:
 {   .mmi  //R-Addr: 0x390
	ld4	r10=[r8]				//0: {918:27} 2130
	ld4	r17=[r44]				//0: {321:6} 2134
	mov	r60=r32 ;;				//0: {918:20} 2127
 }
 {   .mmi  //R-Addr: 0x3a0
	shladd	r9=r10,2,r63 ;;				//1: {918:27} 2131
	add	r8=12,r9				//2: {918:27} 2132
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x3b0
	ld4	r32=[r8]				//3: {918:27} 2133
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2682
// Block 271: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$fa:
 {   .mmi  //R-Addr: 0x3c0
	ld4	r3=[r29]				//0: {919:27} 2122
	ld4	r17=[r44]				//0: {321:6} 2126
	mov	r60=r32 ;;				//0: {919:20} 2119
 }
 {   .mmi  //R-Addr: 0x3d0
	shladd	r2=r3,2,r63 ;;				//1: {919:27} 2123
	add	r30=12,r2				//2: {919:27} 2124
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x3e0
	ld4	r32=[r30]				//3: {919:27} 2125
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2683
// Block 270: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$f9:
 {   .mmi  //R-Addr: 0x3f0
	ld4	r29=[r26]				//0: {914:27} 2114
	ld4	r17=[r44]				//0: {321:6} 2118
	mov	r60=r32 ;;				//0: {914:20} 2111
 }
 {   .mmi  //R-Addr: 0x400
	shladd	r28=r29,2,r63 ;;			//1: {914:27} 2115
	add	r27=8,r28				//2: {914:27} 2116
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x410
	ld4	r32=[r27]				//3: {914:27} 2117
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2684
// Block 269: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$f8:
 {   .mmi  //R-Addr: 0x420
	ld4	r26=[r8]				//0: {915:27} 2106
	ld4	r17=[r44]				//0: {321:6} 2110
	mov	r60=r32 ;;				//0: {915:20} 2103
 }
 {   .mmi  //R-Addr: 0x430
	shladd	r25=r26,2,r63 ;;			//1: {915:27} 2107
	add	r24=8,r25				//2: {915:27} 2108
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x440
	ld4	r32=[r24]				//3: {915:27} 2109
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2685
// Block 268: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$f7:
 {   .mmi  //R-Addr: 0x450
	ld4	r20=[r29]				//0: {916:27} 2098
	ld4	r17=[r44]				//0: {321:6} 2102
	mov	r60=r32 ;;				//0: {916:20} 2095
 }
 {   .mmi  //R-Addr: 0x460
	shladd	r19=r20,2,r63 ;;			//1: {916:27} 2099
	add	r18=8,r19				//2: {916:27} 2100
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x470
	ld4	r32=[r18]				//3: {916:27} 2101
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2686
// Block 267: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$f6:
 {   .mmi  //R-Addr: 0x480
	ld4	r16=[r24]				//0: {909:27} 2090
	ld4	r17=[r44]				//0: {321:6} 2094
	mov	r60=r32 ;;				//0: {909:20} 2087
 }
 {   .mmi  //R-Addr: 0x490
	shladd	r15=r16,2,r63 ;;			//1: {909:27} 2091
	add	r14=4,r15				//2: {909:27} 2092
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x4a0
	ld4	r32=[r14]				//3: {909:27} 2093
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2687
// Block 266: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$f5:
 {   .mmi  //R-Addr: 0x4b0
	ld4	r11=[r26]				//0: {910:27} 2082
	ld4	r17=[r44]				//0: {321:6} 2086
	mov	r60=r32 ;;				//0: {910:20} 2079
 }
 {   .mmi  //R-Addr: 0x4c0
	shladd	r10=r11,2,r63 ;;			//1: {910:27} 2083
	add	r9=4,r10				//2: {910:27} 2084
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x4d0
	ld4	r32=[r9]				//3: {910:27} 2085
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2688
// Block 265: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$f4:
 {   .mmi  //R-Addr: 0x4e0
	ld4	r8=[r8]					//0: {911:27} 2074
	ld4	r17=[r44]				//0: {321:6} 2078
	mov	r60=r32 ;;				//0: {911:20} 2071
 }
 {   .mmi  //R-Addr: 0x4f0
	shladd	r3=r8,2,r63 ;;				//1: {911:27} 2075
	add	r2=4,r3					//2: {911:27} 2076
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x500
	ld4	r32=[r2]				//3: {911:27} 2077
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2689
// Block 264: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$f3:
 {   .mmi  //R-Addr: 0x510
	ld4	r30=[r29]				//0: {912:27} 2066
	ld4	r17=[r44]				//0: {321:6} 2070
	mov	r60=r32 ;;				//0: {912:20} 2063
 }
 {   .mmi  //R-Addr: 0x520
	shladd	r29=r30,2,r63 ;;			//1: {912:27} 2067
	add	r28=4,r29				//2: {912:27} 2068
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x530
	ld4	r32=[r28]				//3: {912:27} 2069
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2690
// Block 263: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$f2:
 {   .mib  //R-Addr: 0x540
	ld4	r17=[r44]				//0: {321:6} 2062
	xor	r32=-1,r32				//0: {496:18} 2061
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2691
// Block 262: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$f1:
 {   .mib  //R-Addr: 0x550
	ld4	r17=[r44]				//0: {321:6} 2060
	sxt4	r32=r9					//0: {488:18} 2059
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2692
// Block 261:  Pred: 21     Succ: 794 805  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$f0:
 {   .mmi  //R-Addr: 0x560
	ld4	r27=[r28]				//0: {518:18} 2044
	ld4	r26=[r10]				//0: {518:18} 2043
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x570
	ld4.a	r16=[r8]				//1: {520:18} 2050
	ld4.a	r37=[r30]				//1: {519:18} 2048
	shladd	r25=r27,2,r63 ;;			//1: {518:18} 2045
 }
 {   .mmi  //R-Addr: 0x580
	st4	[r25]=r26				//2: {518:18} 2046
	ld4.a	r18=[r8]				//2: {521:18} 2052
	nop.i	0
 }
 {   .mmi  //R-Addr: 0x590
	ld4.c.clr	r37=[r30] ;;			//2: {519:18} 3480
	ld4.c.clr	r16=[r8]			//3: {520:18} 3475
	shladd	r24=r18,2,r63				//3: {521:18} 2053
 }
 {   .mmi  //R-Addr: 0x5a0
	st4	[r28]=r16				//3: {520:18} 2051
	ld4	r17=[r44]				//3: {321:6} 2057
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x5b0
	ld4.s	r20=[r24]				//4: {521:18} 2054
// Branch taken probability 0.05
	chk.a.clr	r18,.b1_794			//4: {521:18} 3485
	nop.i	0 ;;
// Block 805:  Pred: 261 794     Succ: 795 807  -GO
// Freq 1.2e-01
 }
.b1_805: 
 {   .mii  //R-Addr: 0x5c0
	nop.m	0
	nop.i	0
	extr	r67=r20,2,30				//0: {521:18} 2055
 }
 {   .mmi  //R-Addr: 0x5d0
// Branch taken probability 0.05
	chk.s	r20,.b1_795 ;;				//0: {521:18} 3492
// Block 807: ltail  Pred: 805     Succ: 3  -GO
// Freq 1.1e-01
	shladd	r66=r67,2,r33				//1: {522:18} 2056
	nop.i	0
 }
 {   .mib  //R-Addr: 0x5e0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//1: {522:18} 5544
// Block 260: collapsed  Pred: 21     Succ: 451  -GO
// Freq 1.2e-01
 }
$$1$1_0$TAG$ef:
 {   .mii  //R-Addr: 0x5f0
	shladd	r19=r67,2,r63				//0: {534:18} 4486
	sxt4	r18=r66					//0: {526:66} 1989
	sxt4	r17=r47 ;;				//0: {529:18} 2035
 }
 {   .mmi  //R-Addr: 0x600
	add	r16=20,r18				//1: {527:31} 2000
	add	r15=40,r17				//1: {529:18} 2036
	add	r11=16,r18				//1: {526:66} 1994
 }
 {   .mii  //R-Addr: 0x610
	add	r24=4,r18				//1: {533:18} 4488
	add	r14=12,r18				//1: {526:66} 1990
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x620
	ld4	r9=[r11]				//2: {526:66} 1995
	ld4	r10=[r14]				//2: {526:66} 1991
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x630
	ld4	r8=[r16]				//3: {527:31} 2001
	sxt4	r2=r9					//3: {526:66} 1996
	sxt4	r3=r10 ;;				//3: {526:66} 1992
 }
 {   .mmi  //R-Addr: 0x640
	setf.sig	f6=r2				//4: {526:66} 1997
	setf.sig	f7=r3				//4: {526:66} 1993
	cmp4.ne.unc	p0,p15=r8,r0 ;;			//4: {528:18} 2652
 }
 {   .mmi  //R-Addr: 0x650
  (p15)add	r8=1,r0 ;;				//5: {528:27} 2039
	nop.m	0
	sxt4	r30=r8 ;;				//6: {529:51} 2004
 }
 {   .mii  //R-Addr: 0x660
	setf.sig	f35=r30				//7: {529:18} 2009
	cmp.ne.unc	p0,p14=0,r30 ;;			//7: {529:18} 2648
  (p14)break	1 ;;					//8: {529:18} 2007
 }
 {   .mfi  //R-Addr: 0x670
	nop.m	0
	xma.l	f6=f7,f6,f0				//10: {526:66} 1998
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x680
	nop.m	0
	fcvt.xf	f34=f35					//13: {529:18} 2011
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x690
	getf.sig	r29=f6				//14: {526:66} 1999
	fcvt.xf	f12=f6					//14: {529:18} 2010
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x6a0
	nop.m	0
	frcpa.s1	f33,p13=f12,f34			//18: {529:18} 2012
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x6b0
	nop.m	0
  (p13)fnma.s1	f11=f34,f33,f1				//22: {529:18} 2013
	nop.i	0
 }
 {   .mfi  //R-Addr: 0x6c0
	nop.m	0
  (p13)fma.s1	f10=f12,f33,f0				//22: {529:18} 2014
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x6d0
	nop.m	0
  (p13)fma.s1	f8=f11,f11,f11				//26: {529:18} 2016
	nop.i	0
 }
 {   .mfi  //R-Addr: 0x6e0
	nop.m	0
  (p13)fma.s1	f9=f11,f11,f0				//26: {529:18} 2015
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x6f0
	nop.m	0
  (p13)fnma.s1	f7=f34,f10,f12				//27: {529:18} 2020
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x700
	nop.m	0
  (p13)fma.s1	f32=f8,f33,f33				//30: {529:18} 2018
	nop.i	0
 }
 {   .mfi  //R-Addr: 0x710
	nop.m	0
  (p13)fma.s1	f6=f9,f9,f11				//30: {529:18} 2017
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x720
	nop.m	0
  (p13)fma.s1	f15=f6,f32,f33				//34: {529:18} 2019
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x730
	nop.m	0
  (p13)fnma.s1	f13=f34,f15,f1				//38: {529:18} 2022
	nop.i	0
 }
 {   .mfi  //R-Addr: 0x740
	nop.m	0
  (p13)fma.s1	f14=f7,f15,f10				//38: {529:18} 2021
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x750
	nop.m	0
  (p13)fma.s1	f11=f13,f15,f15				//42: {529:18} 2023
	nop.i	0
 }
 {   .mfi  //R-Addr: 0x760
	nop.m	0
  (p13)fnma.s1	f12=f34,f14,f12				//42: {529:18} 2024
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x770
	nop.m	0
  (p13)fma.s1	f33=f12,f11,f14				//46: {529:18} 2025
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x780
	nop.m	0
	fcvt.fx.trunc.s1	f10=f33			//50: {529:18} 2028
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x790
	getf.sig	r28=f10				//54: {529:18} 2029
	xma.l	f9=f10,f35,f0				//54: {529:18} 2032
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x7a0
	getf.sig	r27=f9 ;;			//58: {529:18} 2033
	nop.m	0
	sxt4	r32=r28 ;;				//59: {530:18} 2038
 }
 {   .mmi  //R-Addr: 0x7b0
	sub	r26=r29,r27 ;;				//63: {529:18} 2034
	st4	[r15]=r26				//64: {529:18} 2037
	nop.i	0
 }
 {   .mmb  //R-Addr: 0x7c0
	ld4	r17=[r44]				//64: {321:6} 1242
	ld4	r20=[r19]				//64: {534:18} 1239
	br.cond.sptk	.b1_451 ;;			//64: {530:18} 2694
// Block 259: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$ee:
 {   .mii  //R-Addr: 0x7d0
	ld1	r19=[r25]				//0: {891:17} 1984
	add	r18=1,r25				//0: {891:17} 1981
	add	r37=2,r37				//0: {891:32} 1987
 }
 {   .mmi  //R-Addr: 0x7e0
	ld4	r17=[r44] ;;				//0: {321:6} 1988
	ld1	r16=[r18]				//1: {891:17} 1982
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x7f0
	nop.m	0
	shl	r15=r16,8				//2: {891:17} 1983
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x800
	or	r14=r15,r19 ;;				//3: {891:17} 1985
	sub	r32=r32,r14				//4: {891:17} 1986
	nop.i	0
 }
 {   .mib  //R-Addr: 0x810
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2695
// Block 258: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$ed:
 {   .mmi  //R-Addr: 0x820
	ld1	r11=[r25]				//0: {890:17} 1975
	ld4	r17=[r44]				//0: {321:6} 1978
	add	r37=1,r37 ;;				//0: {890:24} 1977
 }
 {   .mib  //R-Addr: 0x830
	sub	r32=r32,r11				//1: {890:17} 1976
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//1: {321:6} 2696
// Block 257: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$ec:
 {   .mmi  //R-Addr: 0x840
	ld4	r10=[r20]				//0: {898:27} 1969
	ld4	r17=[r44]				//0: {321:6} 1972
	mov	r60=r32 ;;				//0: {898:20} 1966
 }
 {   .mmi  //R-Addr: 0x850
	shladd	r9=r10,2,r63 ;;				//1: {898:27} 1970
	ld4	r32=[r9]				//2: {898:27} 1971
	nop.i	0
 }
 {   .mib  //R-Addr: 0x860
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2697
// Block 256: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$eb:
 {   .mii  //R-Addr: 0x870
	ld4	r17=[r44]				//0: {321:6} 1965
	sxt4	r29=r66					//0: {899:27} 1960
	mov	r60=r32 ;;				//0: {899:20} 1959
 }
 {   .mmi  //R-Addr: 0x880
	add	r28=44,r29 ;;				//1: {899:27} 1961
	ld4	r27=[r28]				//2: {899:27} 1962
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x890
	shladd	r26=r27,2,r63 ;;			//3: {899:27} 1963
	ld4	r32=[r26]				//4: {899:27} 1964
	nop.i	0
 }
 {   .mib  //R-Addr: 0x8a0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2698
// Block 255: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$ea:
 {   .mii  //R-Addr: 0x8b0
	ld4	r17=[r44]				//0: {321:6} 1958
	sxt4	r19=r66					//0: {900:27} 1953
	mov	r60=r32 ;;				//0: {900:20} 1952
 }
 {   .mmi  //R-Addr: 0x8c0
	add	r18=40,r19 ;;				//1: {900:27} 1954
	ld4	r16=[r18]				//2: {900:27} 1955
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x8d0
	shladd	r15=r16,2,r63 ;;			//3: {900:27} 1956
	ld4	r32=[r15]				//4: {900:27} 1957
	nop.i	0
 }
 {   .mib  //R-Addr: 0x8e0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2699
// Block 254: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$e9:
 {   .mii  //R-Addr: 0x8f0
	ld4	r17=[r44]				//0: {321:6} 1951
	sxt4	r25=r66					//0: {901:27} 1946
	mov	r60=r32 ;;				//0: {901:20} 1945
 }
 {   .mmi  //R-Addr: 0x900
	add	r24=36,r25 ;;				//1: {901:27} 1947
	ld4	r20=[r24]				//2: {901:27} 1948
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x910
	shladd	r19=r20,2,r63 ;;			//3: {901:27} 1949
	ld4	r32=[r19]				//4: {901:27} 1950
	nop.i	0
 }
 {   .mib  //R-Addr: 0x920
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2700
// Block 253: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$e8:
 {   .mii  //R-Addr: 0x930
	ld4	r17=[r44]				//0: {321:6} 1944
	sxt4	r26=r66					//0: {902:27} 1939
	mov	r60=r32 ;;				//0: {902:20} 1938
 }
 {   .mmi  //R-Addr: 0x940
	add	r25=32,r26 ;;				//1: {902:27} 1940
	ld4	r24=[r25]				//2: {902:27} 1941
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x950
	shladd	r20=r24,2,r63 ;;			//3: {902:27} 1942
	ld4	r32=[r20]				//4: {902:27} 1943
	nop.i	0
 }
 {   .mib  //R-Addr: 0x960
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2701
// Block 252: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$e7:
 {   .mii  //R-Addr: 0x970
	ld4	r17=[r44]				//0: {321:6} 1937
	sxt4	r18=r66					//0: {903:27} 1932
	mov	r60=r32 ;;				//0: {903:20} 1931
 }
 {   .mmi  //R-Addr: 0x980
	add	r16=28,r18 ;;				//1: {903:27} 1933
	ld4	r15=[r16]				//2: {903:27} 1934
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x990
	shladd	r14=r15,2,r63 ;;			//3: {903:27} 1935
	ld4	r32=[r14]				//4: {903:27} 1936
	nop.i	0
 }
 {   .mib  //R-Addr: 0x9a0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2702
// Block 251: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$e6:
 {   .mii  //R-Addr: 0x9b0
	ld4	r17=[r44]				//0: {321:6} 1930
	sxt4	r30=r66					//0: {904:27} 1925
	mov	r60=r32 ;;				//0: {904:20} 1924
 }
 {   .mmi  //R-Addr: 0x9c0
	add	r29=24,r30 ;;				//1: {904:27} 1926
	ld4	r28=[r29]				//2: {904:27} 1927
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x9d0
	shladd	r27=r28,2,r63 ;;			//3: {904:27} 1928
	ld4	r32=[r27]				//4: {904:27} 1929
	nop.i	0
 }
 {   .mib  //R-Addr: 0x9e0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2703
// Block 250: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$e5:
 {   .mii  //R-Addr: 0x9f0
	ld4	r17=[r44]				//0: {321:6} 1923
	sxt4	r11=r66					//0: {905:27} 1918
	mov	r60=r32 ;;				//0: {905:20} 1917
 }
 {   .mmi  //R-Addr: 0xa00
	add	r10=20,r11 ;;				//1: {905:27} 1919
	ld4	r9=[r10]				//2: {905:27} 1920
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xa10
	shladd	r8=r9,2,r63 ;;				//3: {905:27} 1921
	ld4	r32=[r8]				//4: {905:27} 1922
	nop.i	0
 }
 {   .mib  //R-Addr: 0xa20
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2704
// Block 249: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$e4:
 {   .mii  //R-Addr: 0xa30
	ld4	r17=[r44]				//0: {321:6} 1916
	sxt4	r9=r66					//0: {906:27} 1911
	mov	r60=r32 ;;				//0: {906:20} 1910
 }
 {   .mmi  //R-Addr: 0xa40
	add	r8=16,r9 ;;				//1: {906:27} 1912
	ld4	r3=[r8]					//2: {906:27} 1913
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xa50
	shladd	r2=r3,2,r63 ;;				//3: {906:27} 1914
	ld4	r32=[r2]				//4: {906:27} 1915
	nop.i	0
 }
 {   .mib  //R-Addr: 0xa60
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2705
// Block 248: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$e3:
 {   .mii  //R-Addr: 0xa70
	ld4	r17=[r44]				//0: {321:6} 1909
	sxt4	r3=r66					//0: {907:27} 1904
	mov	r60=r32 ;;				//0: {907:20} 1903
 }
 {   .mmi  //R-Addr: 0xa80
	add	r2=12,r3 ;;				//1: {907:27} 1905
	ld4	r30=[r2]				//2: {907:27} 1906
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xa90
	shladd	r29=r30,2,r63 ;;			//3: {907:27} 1907
	ld4	r32=[r29]				//4: {907:27} 1908
	nop.i	0
 }
 {   .mib  //R-Addr: 0xaa0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2706
// Block 247: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$e2:
 {   .mii  //R-Addr: 0xab0
	ld4	r17=[r44]				//0: {321:6} 1902
	sxt4	r30=r37					//0: {889:17} 1885
	add	r37=4,r37 ;;				//0: {889:32} 1901
 }
 {   .mmi  //R-Addr: 0xac0
	add	r29=r63,r30 ;;				//1: {889:17} 1886
	add	r28=1,r29				//2: {889:17} 1894
	add	r27=3,r29				//2: {889:17} 1887
 }
 {   .mii  //R-Addr: 0xad0
	ld1	r26=[r29]				//2: {889:17} 1898
	add	r25=2,r29				//2: {889:17} 1890
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xae0
	ld1	r24=[r27]				//3: {889:17} 1888
	ld1	r20=[r25]				//3: {889:17} 1891
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0xaf0
	ld1	r19=[r28]				//4: {889:17} 1895
	shl	r18=r24,8				//4: {889:17} 1889
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xb00
	or	r16=r18,r20 ;;				//5: {889:17} 1892
	nop.m	0
	shl	r15=r16,8 ;;				//6: {889:17} 1893
 }
 {   .mmi  //R-Addr: 0xb10
	or	r14=r15,r19 ;;				//7: {889:17} 1896
	nop.m	0
	shl	r11=r14,8 ;;				//8: {889:17} 1897
 }
 {   .mmi  //R-Addr: 0xb20
	or	r10=r11,r26 ;;				//9: {889:17} 1899
	add	r32=r32,r10				//10: {889:17} 1900
	nop.i	0
 }
 {   .mib  //R-Addr: 0xb30
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//10: {321:6} 2707
// Block 246: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$e1:
 {   .mii  //R-Addr: 0xb40
	ld4	r17=[r44]				//0: {321:6} 1884
	sxt4	r28=r37					//0: {888:17} 1875
	add	r37=2,r37 ;;				//0: {888:32} 1883
 }
 {   .mmi  //R-Addr: 0xb50
	add	r27=r63,r28 ;;				//1: {888:17} 1876
	ld1	r26=[r27]				//2: {888:17} 1880
	add	r25=1,r27 ;;				//2: {888:17} 1877
 }
 {   .mmi  //R-Addr: 0xb60
	ld1	r24=[r25] ;;				//3: {888:17} 1878
	nop.m	0
	shl	r20=r24,8 ;;				//4: {888:17} 1879
 }
 {   .mmi  //R-Addr: 0xb70
	or	r19=r20,r26 ;;				//5: {888:17} 1881
	add	r32=r32,r19				//6: {888:17} 1882
	nop.i	0
 }
 {   .mib  //R-Addr: 0xb80
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//6: {321:6} 2708
// Block 245: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$e0:
 {   .mii  //R-Addr: 0xb90
	ld4	r17=[r44]				//0: {321:6} 1874
	sxt4	r8=r37					//0: {887:17} 1869
	add	r37=1,r37 ;;				//0: {887:24} 1873
 }
 {   .mmi  //R-Addr: 0xba0
	add	r3=r63,r8 ;;				//1: {887:17} 1870
	ld1	r2=[r3]					//2: {887:17} 1871
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0xbb0
	add	r32=r32,r2				//3: {887:17} 1872
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2709
// Block 22:  Pred: 21     Succ: 278 279  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$1:
 {   .mii  //R-Addr: 0xbc0
	nop.m	0
	nop.i	0
	sxt4	r15=r37					//0: {371:22} 143
 }
 {   .mmi  //R-Addr: 0xbd0
	add	r37=1,r37				//0: {371:24} 146
	add	r25=3,r0				//0: {394:14} 183
	sxt4	r14=r32 ;;				//0: {394:14} 181
 }
 {   .mii  //R-Addr: 0xbe0
	add	r11=r63,r15				//1: {371:22} 144
	sxt4	r10=r37 ;;				//1: {381:30} 155
	add	r9=r63,r10				//2: {381:30} 156
 }
 {   .mmi  //R-Addr: 0xbf0
	ld1	r16=[r11]				//2: {371:22} 145
	nop.m	0
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0xc00
	cmp4.le.unc	p0,p15=3,r16			//3: {373:8} 153
	cmp4.ne.unc	p14,p0=r16,r0			//3: {373:8} 147
	cmp4.eq.unc	p13,p12=1,r16			//3: {373:8} 149
 }
 {   .mmb  //R-Addr: 0xc10
	cmp4.lt.unc	p10,p0=5,r16			//3: {373:8} 176
	cmp4.gt.unc	p9,p8=10,r16			//3: {373:8} 178
// Branch taken probability 0.50
  (p14)br.cond.dptk	.b1_278 ;;			//3: {373:8} 148
// Block 279: ltail  Pred: 22     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mib  //R-Addr: 0xc20
	ld4	r17=[r44]				//0: {321:6} 152
	add	r32=-1,r0				//0: {378:10} 151
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2710
// Block 278:  Pred: 22     Succ: 281 280  -G
// Freq 5.8e-02
 }
.b1_278: 
 {   .mii  //R-Addr: 0xc30
  (p13)ld1	r8=[r9]					//0: {381:30} 157
  (p13)add	r37=1,r37				//0: {381:32} 158
  (p12)cmp4.le.unc	p0,p7=6,r16			//0: {373:8} 190
 }
 {   .bbb  //R-Addr: 0xc40
// Branch taken probability 0.16
  (p13)br.cond.dpnt	.b1_281				//0: {373:8} 150
// Block 280: lexit  Pred: 278     Succ: 285 286  -G
// Freq 4.9e-02
// Branch taken probability 0.50
  (p15)br.cond.dptk	.b1_285				//0: {373:8} 154
// Block 286:  Pred: 280     Succ: 287 288  -G
// Freq 2.4e-02
// Branch taken probability 0.50
  (p10)br.cond.dptk	.b1_287 ;;			//0: {373:8} 177
// Block 288:  Pred: 290 286     Succ: 297  -GO
// Freq 1.6e-02
 }
.b1_288: 
 {   .mii  //R-Addr: 0xc50
	mov	r71=r0					//0: {394:14} 186
	mov	r69=r16					//0: {394:14} 184
	mov	r70=r14					//0: {394:14} 185
 }
 {   .mmb  //R-Addr: 0xc60
	nop.m	0
	nop.m	0
	br.call.sptk	b0=CX3$_Z5DOFLTIII0UP9NMT# ;;	//0: {394:14} 188
// Block 297: ltail  Pred: 288     Succ: 3  -GO
// Freq 1.6e-02
 }
 {   .mii  //R-Addr: 0xc70
	ld4	r17=[r44]				//2: {321:6} 215
	mov	gp=r36					//2: {394:14} 5484
	mov	r32=r8					//2: {394:10} 214
 }
 {   .mmb  //R-Addr: 0xc80
	nop.m	0
	nop.m	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2712
// Block 287:  Pred: 286     Succ: 289 290  -G
// Freq 3.7e-02
 }
.b1_287: 
 {   .mii  //R-Addr: 0xc90
  (p8)	cmp4.ge.unc	p6,p0=11,r16			//0: {373:8} 192
  (p9)	cmp4.ge.unc	p15,p0=9,r16			//0: {373:8} 208
	nop.i	0
 }
 {   .mbb  //R-Addr: 0xca0
	nop.m	0
// Branch taken probability 0.50
  (p9)	br.cond.dptk	.b1_289				//0: {373:8} 179
// Block 290:  Pred: 287     Succ: 288 291  -G
// Freq 1.8e-02
// Branch taken probability 0.22
  (p6)	br.cond.dpnt	.b1_288 ;;			//0: {373:8} 193
// Block 291: lexit  Pred: 290     Succ: 285 292  -GO
// Freq 2.4e-02
 }
 {   .mii  //R-Addr: 0xcb0
	cmp4.gt.unc	p6,p0=12,r16			//0: {373:8} 194
	cmp4.ge.unc	p7,p0=17,r16			//0: {373:8} 196
	nop.i	0
 }
 {   .bbb  //R-Addr: 0xcc0
// Branch taken probability 0.20
  (p6)	br.cond.dpnt	.b1_285				//0: {373:8} 195
// Block 292: lexit  Pred: 291     Succ: 293 817  -G
// Freq 1.9e-02
// Branch taken probability 0.80
  (p7)	br.cond.dptk	.b1_293				//0: {373:8} 197
// Block 817:  Pred: 292     Succ: 285  -
// Freq 3.9e-03
	br.cond.sptk	.b1_285 ;;			//0: {373:8} 5545
// Block 289: lexit  Pred: 287     Succ: 285 294  -GO
// Freq 3.2e-02
 }
.b1_289: 
 {   .mib  //R-Addr: 0xcd0
	nop.m	0
	nop.i	0
// Branch taken probability 0.50
  (p7)	br.cond.dptk	.b1_285 ;;			//0: {373:8} 191
// Block 294:  Pred: 289     Succ: 293 295  -G
// Freq 1.6e-02
 }
 {   .mbb  //R-Addr: 0xce0
	cmp4.le.unc	p13,p0=12,r16			//0: {373:8} 210
// Branch taken probability 0.50
  (p15)br.cond.dptk	.b1_293				//0: {373:8} 209
// Block 295: lexit  Pred: 294     Succ: 293 285  -G
// Freq 2.4e-02
// Branch taken probability 0.80
  (p13)br.cond.dptk	.b1_293 ;;			//0: {373:8} 211
// Block 285: epilog  Pred: 280 291 289 295 817     Succ: 7  -G
// Freq 5.9e-02
 }
.b1_285: 
 {   .mib  //R-Addr: 0xcf0
	add	r37=-2,r37				//0: {375:20} 175
	add	r17=13,r0				//0: {375:10} 174
	br.cond.sptk	.b1_7 ;;			//0: {375:20} 2715
// Block 293:  Pred: 295 292 294     Succ: 296  -GO
// Freq 2.4e-02
 }
.b1_293: 
 {   .mii  //R-Addr: 0xd00
	add	r25=3,r0				//0: {407:14} 201
	sxt4	r71=r32					//0: {407:14} 200
	sxt4	r70=r60					//0: {407:14} 199
 }
 {   .mmb  //R-Addr: 0xd10
	mov	r69=r16					//0: {407:14} 202
	nop.m	0
	br.call.sptk	b0=CX3$_Z5DOFLTIII0UP9NMT# ;;	//0: {407:14} 206
// Block 296: ltail  Pred: 293     Succ: 3  -GO
// Freq 2.4e-02
 }
 {   .mii  //R-Addr: 0xd20
	ld4	r17=[r44]				//2: {321:6} 213
	mov	r32=r8					//2: {407:10} 212
	mov	gp=r36					//2: {407:14} 5485
 }
 {   .mmb  //R-Addr: 0xd30
	nop.m	0
	nop.m	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2716
// Block 243: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$de:
 {   .mii  //R-Addr: 0xd40
	ld4.a	r17=[r44]				//0: {321:6} 1868
	sxt4	r18=r66					//0: {945:20} 1862
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xd50
	add	r16=16,r18 ;;				//1: {945:20} 1863
	ld4	r15=[r16]				//2: {945:20} 1864
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xd60
	shladd	r14=r15,2,r63 ;;			//3: {945:20} 1865
	add	r11=4,r14				//4: {945:20} 1866
	nop.i	0 ;;
 }
 {   .mmb  //R-Addr: 0xd70
	st4	[r11]=r32				//5: {945:20} 1867
	ld4.c.clr	r17=[r44]			//5: {321:6} 5295
	br.cond.sptk.many	.b1_3 ;;		//5: {321:6} 2717
// Block 242: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$dd:
 {   .mii  //R-Addr: 0xd80
	ld4.a	r17=[r44]				//0: {321:6} 1861
	sxt4	r15=r66					//0: {946:20} 1855
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xd90
	add	r14=12,r15 ;;				//1: {946:20} 1856
	ld4	r11=[r14]				//2: {946:20} 1857
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xda0
	shladd	r10=r11,2,r63 ;;			//3: {946:20} 1858
	add	r9=4,r10				//4: {946:20} 1859
	nop.i	0 ;;
 }
 {   .mmb  //R-Addr: 0xdb0
	st4	[r9]=r32				//5: {946:20} 1860
	ld4.c.clr	r17=[r44]			//5: {321:6} 5281
	br.cond.sptk.many	.b1_3 ;;		//5: {321:6} 2718
// Block 241: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$dc:
 {   .mii  //R-Addr: 0xdc0
	ld4.a	r17=[r44]				//0: {321:6} 1854
	sxt4	r10=r66					//0: {942:20} 1849
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xdd0
	add	r9=16,r10 ;;				//1: {942:20} 1850
	ld4	r8=[r9]					//2: {942:20} 1851
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xde0
	shladd	r3=r8,2,r63 ;;				//3: {942:20} 1852
	st4	[r3]=r32				//4: {942:20} 1853
	nop.i	0
 }
 {   .mib  //R-Addr: 0xdf0
	ld4.c.clr	r17=[r44]			//4: {321:6} 5267
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2719
// Block 240: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$db:
 {   .mii  //R-Addr: 0xe00
	ld4.a	r17=[r44]				//0: {321:6} 1848
	sxt4	r20=r66					//0: {943:20} 1843
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xe10
	add	r19=12,r20 ;;				//1: {943:20} 1844
	ld4	r18=[r19]				//2: {943:20} 1845
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xe20
	shladd	r16=r18,2,r63 ;;			//3: {943:20} 1846
	st4	[r16]=r32				//4: {943:20} 1847
	nop.i	0
 }
 {   .mib  //R-Addr: 0xe30
	ld4.c.clr	r17=[r44]			//4: {321:6} 5253
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2720
// Block 239: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$da:
 {   .mii  //R-Addr: 0xe40
	ld4	r17=[r44]				//0: {321:6} 1842
	sxt4	r2=r66					//0: {948:19} 1836
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xe50
	add	r30=28,r2 ;;				//1: {948:19} 1837
	ld4	r29=[r30]				//2: {948:19} 1838
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xe60
	add	r28=r32,r29 ;;				//3: {948:19} 1839
	shladd	r27=r28,2,r63				//4: {948:19} 1840
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0xe70
	ld4	r32=[r27]				//5: {948:19} 1841
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//5: {321:6} 2721
// Block 238: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$d9:
 {   .mii  //R-Addr: 0xe80
	ld4	r17=[r44]				//0: {321:6} 1835
	sxt4	r28=r66					//0: {949:19} 1829
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xe90
	add	r27=24,r28 ;;				//1: {949:19} 1830
	ld4	r26=[r27]				//2: {949:19} 1831
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xea0
	add	r25=r32,r26 ;;				//3: {949:19} 1832
	shladd	r24=r25,2,r63				//4: {949:19} 1833
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0xeb0
	ld4	r32=[r24]				//5: {949:19} 1834
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//5: {321:6} 2722
// Block 237: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$d8:
 {   .mii  //R-Addr: 0xec0
	ld4	r17=[r44]				//0: {321:6} 1828
	sxt4	r26=r66					//0: {950:19} 1822
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xed0
	add	r25=20,r26 ;;				//1: {950:19} 1823
	ld4	r24=[r25]				//2: {950:19} 1824
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xee0
	add	r20=r32,r24 ;;				//3: {950:19} 1825
	shladd	r19=r20,2,r63				//4: {950:19} 1826
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0xef0
	ld4	r32=[r19]				//5: {950:19} 1827
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//5: {321:6} 2723
// Block 236: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$d7:
 {   .mii  //R-Addr: 0xf00
	ld4	r17=[r44]				//0: {321:6} 1821
	sxt4	r8=r66					//0: {951:19} 1815
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xf10
	add	r3=16,r8 ;;				//1: {951:19} 1816
	ld4	r2=[r3]					//2: {951:19} 1817
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xf20
	add	r30=r32,r2 ;;				//3: {951:19} 1818
	shladd	r29=r30,2,r63				//4: {951:19} 1819
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0xf30
	ld4	r32=[r29]				//5: {951:19} 1820
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//5: {321:6} 2724
// Block 235: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$d6:
 {   .mii  //R-Addr: 0xf40
	ld4	r17=[r44]				//0: {321:6} 1814
	sxt4	r18=r66					//0: {952:19} 1808
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xf50
	add	r16=12,r18 ;;				//1: {952:19} 1809
	ld4	r15=[r16]				//2: {952:19} 1810
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0xf60
	add	r14=r32,r15 ;;				//3: {952:19} 1811
	shladd	r11=r14,2,r63				//4: {952:19} 1812
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0xf70
	ld4	r32=[r11]				//5: {952:19} 1813
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//5: {321:6} 2725
// Block 234: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$d5:
 {   .mib  //R-Addr: 0xf80
	ld4	r17=[r44]				//0: {321:6} 1807
	add	r32=5,r32				//0: {880:17} 1806
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2726
// Block 233: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$d4:
 {   .mib  //R-Addr: 0xf90
	ld4	r17=[r44]				//0: {321:6} 1805
	add	r32=4,r32				//0: {881:17} 1804
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2727
// Block 232: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$d3:
 {   .mib  //R-Addr: 0xfa0
	ld4	r17=[r44]				//0: {321:6} 1803
	add	r32=3,r32				//0: {882:17} 1802
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2728
// Block 231: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$d2:
 {   .mib  //R-Addr: 0xfb0
	ld4	r17=[r44]				//0: {321:6} 1801
	add	r32=2,r32				//0: {883:17} 1800
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2729
// Block 230: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$d1:
 {   .mib  //R-Addr: 0xfc0
	ld4	r17=[r44]				//0: {321:6} 1799
	add	r32=1,r32				//0: {884:17} 1798
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2730
// Block 229: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$d0:
 {   .mib  //R-Addr: 0xfd0
	ld4	r17=[r44]				//0: {321:6} 1797
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2731
// Block 228: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$cf:
 {   .mib  //R-Addr: 0xfe0
	ld4	r17=[r44]				//0: {321:6} 1796
	mov	r58=r60					//0: {543:17} 1795
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2732
// Block 227: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$ce:
 {   .mii  //R-Addr: 0xff0
	nop.m	0
	nop.i	0
	sxt4	r10=r37					//0: {698:25} 1784
 }
 {   .mmi  //R-Addr: 0x1000
	add	r37=2,r37				//0: {698:43} 1793
	ld4	r17=[r44]				//0: {321:6} 1794
	mov	r60=r32 ;;				//0: {698:18} 1783
 }
 {   .mmi  //R-Addr: 0x1010
	add	r9=r63,r10 ;;				//1: {698:25} 1785
	ld1	r8=[r9]					//2: {698:25} 1789
	add	r3=1,r9 ;;				//2: {698:25} 1786
 }
 {   .mmi  //R-Addr: 0x1020
	ld1	r2=[r3] ;;				//3: {698:25} 1787
	nop.m	0
	shl	r30=r2,8 ;;				//4: {698:25} 1788
 }
 {   .mmi  //R-Addr: 0x1030
	or	r29=r30,r8 ;;				//5: {698:25} 1790
	sub	r28=r0,r29				//6: {698:25} 1791
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x1040
	nop.m	0
	sxt4	r32=r28					//7: {698:25} 1792
	br.cond.sptk.many	.b1_3 ;;		//7: {321:6} 2733
// Block 226: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$cd:
 {   .mmi  //R-Addr: 0x1050
	shladd	r10=r32,2,r60 ;;			//0: {541:17} 1779
	add	r9=r63,r10				//1: {541:17} 1780
	nop.i	0 ;;
 }
 {   .mmb  //R-Addr: 0x1060
	st1	[r9]=r58				//2: {541:17} 1781
	ld4	r17=[r44]				//2: {321:6} 1782
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2734
// Block 225: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$cc:
 {   .mii  //R-Addr: 0x1070
	ld4	r17=[r44]				//0: {321:6} 1778
	sxt4	r27=r66					//0: {862:19} 1774
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1080
	add	r26=48,r27 ;;				//1: {862:19} 1775
	ld4	r25=[r26]				//2: {862:19} 1776
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x1090
	add	r32=r32,r25				//3: {862:19} 1777
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2735
// Block 224: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$cb:
 {   .mii  //R-Addr: 0x10a0
	ld4	r17=[r44]				//0: {321:6} 1773
	sxt4	r15=r66					//0: {863:19} 1769
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x10b0
	add	r14=44,r15 ;;				//1: {863:19} 1770
	ld4	r11=[r14]				//2: {863:19} 1771
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x10c0
	add	r32=r32,r11				//3: {863:19} 1772
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2736
// Block 223: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$ca:
 {   .mii  //R-Addr: 0x10d0
	ld4	r17=[r44]				//0: {321:6} 1768
	sxt4	r24=r66					//0: {864:19} 1764
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x10e0
	add	r20=40,r24 ;;				//1: {864:19} 1765
	ld4	r19=[r20]				//2: {864:19} 1766
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x10f0
	add	r32=r32,r19				//3: {864:19} 1767
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2737
// Block 222: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$c9:
 {   .mii  //R-Addr: 0x1100
	ld4	r17=[r44]				//0: {321:6} 1763
	sxt4	r19=r66					//0: {865:19} 1759
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1110
	add	r18=36,r19 ;;				//1: {865:19} 1760
	ld4	r16=[r18]				//2: {865:19} 1761
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x1120
	add	r32=r32,r16				//3: {865:19} 1762
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2738
// Block 221: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$c8:
 {   .mii  //R-Addr: 0x1130
	ld4	r17=[r44]				//0: {321:6} 1758
	sxt4	r18=r66					//0: {866:19} 1754
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1140
	add	r16=32,r18 ;;				//1: {866:19} 1755
	ld4	r15=[r16]				//2: {866:19} 1756
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x1150
	add	r32=r32,r15				//3: {866:19} 1757
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2739
// Block 220: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$c7:
 {   .mii  //R-Addr: 0x1160
	ld4	r17=[r44]				//0: {321:6} 1753
	sxt4	r25=r66					//0: {867:19} 1749
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1170
	add	r24=28,r25 ;;				//1: {867:19} 1750
	ld4	r20=[r24]				//2: {867:19} 1751
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x1180
	add	r32=r32,r20				//3: {867:19} 1752
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2740
// Block 219: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$c6:
 {   .mii  //R-Addr: 0x1190
	ld4	r17=[r44]				//0: {321:6} 1748
	sxt4	r14=r66					//0: {868:19} 1744
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x11a0
	add	r11=24,r14 ;;				//1: {868:19} 1745
	ld4	r10=[r11]				//2: {868:19} 1746
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x11b0
	add	r32=r32,r10				//3: {868:19} 1747
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2741
// Block 218: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$c5:
 {   .mii  //R-Addr: 0x11c0
	ld4	r17=[r44]				//0: {321:6} 1743
	sxt4	r28=r66					//0: {869:19} 1739
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x11d0
	add	r27=20,r28 ;;				//1: {869:19} 1740
	ld4	r26=[r27]				//2: {869:19} 1741
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x11e0
	add	r32=r32,r26				//3: {869:19} 1742
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2742
// Block 217: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$c4:
 {   .mii  //R-Addr: 0x11f0
	ld4	r17=[r44]				//0: {321:6} 1738
	sxt4	r9=r66					//0: {870:19} 1734
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1200
	add	r8=16,r9 ;;				//1: {870:19} 1735
	ld4	r3=[r8]					//2: {870:19} 1736
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x1210
	add	r32=r32,r3				//3: {870:19} 1737
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2743
// Block 216: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$c3:
 {   .mii  //R-Addr: 0x1220
	ld4	r17=[r44]				//0: {321:6} 1733
	sxt4	r2=r66					//0: {871:19} 1729
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1230
	add	r30=12,r2 ;;				//1: {871:19} 1730
	ld4	r29=[r30]				//2: {871:19} 1731
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x1240
	add	r32=r32,r29				//3: {871:19} 1732
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2744
// Block 215: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$c2:
 {   .mii  //R-Addr: 0x1250
	nop.m	0
	nop.i	0
	sxt4	r2=r37					//0: {875:18} 1708
 }
 {   .mmi  //R-Addr: 0x1260
	add	r37=4,r37				//0: {875:35} 1727
	ld4	r17=[r44]				//0: {321:6} 1728
	sxt4	r30=r66 ;;				//0: {875:18} 1723
 }
 {   .mmi  //R-Addr: 0x1270
	add	r29=r63,r2 ;;				//1: {875:18} 1709
	add	r28=1,r29				//2: {875:18} 1717
	add	r27=3,r29				//2: {875:18} 1710
 }
 {   .mii  //R-Addr: 0x1280
	ld1	r26=[r29]				//2: {875:18} 1721
	add	r25=2,r29				//2: {875:18} 1713
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1290
	ld1	r24=[r27]				//3: {875:18} 1711
	ld1	r20=[r25]				//3: {875:18} 1714
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x12a0
	ld1	r19=[r28]				//4: {875:18} 1718
	shl	r18=r24,8				//4: {875:18} 1712
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x12b0
	or	r16=r18,r20 ;;				//5: {875:18} 1715
	nop.m	0
	shl	r15=r16,8 ;;				//6: {875:18} 1716
 }
 {   .mmi  //R-Addr: 0x12c0
	or	r14=r15,r19 ;;				//7: {875:18} 1719
	nop.m	0
	shl	r11=r14,8 ;;				//8: {875:18} 1720
 }
 {   .mmi  //R-Addr: 0x12d0
	or	r10=r11,r26 ;;				//9: {875:18} 1722
	shladd	r9=r10,2,r30				//10: {875:18} 1724
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x12e0
	ld4	r8=[r9] ;;				//11: {875:18} 1725
	add	r32=r32,r8				//12: {875:18} 1726
	nop.i	0
 }
 {   .mib  //R-Addr: 0x12f0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//12: {321:6} 2745
// Block 214: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$c1:
 {   .mii  //R-Addr: 0x1300
	nop.m	0
	nop.i	0
	sxt4	r19=r37					//0: {874:18} 1695
 }
 {   .mmi  //R-Addr: 0x1310
	add	r37=2,r37				//0: {874:35} 1706
	ld4	r17=[r44]				//0: {321:6} 1707
	sxt4	r18=r66 ;;				//0: {874:18} 1702
 }
 {   .mmi  //R-Addr: 0x1320
	add	r16=r63,r19 ;;				//1: {874:18} 1696
	ld1	r15=[r16]				//2: {874:18} 1700
	add	r14=1,r16 ;;				//2: {874:18} 1697
 }
 {   .mmi  //R-Addr: 0x1330
	ld1	r11=[r14] ;;				//3: {874:18} 1698
	nop.m	0
	shl	r10=r11,8 ;;				//4: {874:18} 1699
 }
 {   .mmi  //R-Addr: 0x1340
	or	r9=r10,r15 ;;				//5: {874:18} 1701
	shladd	r8=r9,2,r18				//6: {874:18} 1703
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1350
	ld4	r3=[r8] ;;				//7: {874:18} 1704
	add	r32=r32,r3				//8: {874:18} 1705
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1360
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//8: {321:6} 2746
// Block 213: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$c0:
 {   .mii  //R-Addr: 0x1370
	nop.m	0
	nop.i	0
	sxt4	r3=r37					//0: {873:18} 1686
 }
 {   .mmi  //R-Addr: 0x1380
	add	r37=1,r37				//0: {873:28} 1693
	ld4	r17=[r44]				//0: {321:6} 1694
	sxt4	r2=r66 ;;				//0: {873:18} 1689
 }
 {   .mmi  //R-Addr: 0x1390
	add	r30=r63,r3 ;;				//1: {873:18} 1687
	ld1	r29=[r30]				//2: {873:18} 1688
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x13a0
	shladd	r28=r29,2,r2 ;;				//3: {873:18} 1690
	ld4	r27=[r28]				//4: {873:18} 1691
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x13b0
	add	r32=r32,r27				//5: {873:18} 1692
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//5: {321:6} 2747
// Block 212:  Pred: 21     Succ: 330 552  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$bf:
 {   .mib  //R-Addr: 0x13c0
	cmp4.ge.unc	p7,p0=r32,r0			//0: {852:18} 1682
	nop.i	0
// Branch taken probability 0.50
  (p7)	br.cond.dptk	.b1_330 ;;			//0: {852:18} 1683
// Block 552: ltail  Pred: 212     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mib  //R-Addr: 0x13d0
	ld4	r17=[r44]				//0: {321:6} 1685
	add	r37=1,r37				//0: {853:18} 1684
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2748
// Block 211:  Pred: 21     Succ: 549 550  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$be:
 {   .mib  //R-Addr: 0x13e0
	cmp4.lt.unc	p6,p0=r32,r0			//0: {850:18} 1672
	sxt4	r28=r37					//0: {850:29} 1676
// Branch taken probability 0.50
  (p6)	br.cond.dptk	.b1_549 ;;			//0: {850:18} 1673
// Block 550: ltail  Pred: 211     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mii  //R-Addr: 0x13f0
	ld4	r17=[r44]				//0: {321:6} 1681
	add	r27=r63,r28				//0: {850:29} 1677
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1400
	ld1	r26=[r27] ;;				//1: {850:29} 1678
	nop.m	0
	sxt1	r25=r26 ;;				//2: {850:29} 1679
 }
 {   .mib  //R-Addr: 0x1410
	add	r37=r37,r25				//3: {850:29} 1680
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2749
// Block 549: ltail  Pred: 211     Succ: 3  -G
// Freq 5.8e-02
 }
.b1_549: 
 {   .mib  //R-Addr: 0x1420
	ld4	r17=[r44]				//0: {321:6} 1675
	add	r37=1,r37				//0: {851:18} 1674
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2750
// Block 210:  Pred: 21     Succ: 330 547  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$bd:
 {   .mib  //R-Addr: 0x1430
	cmp4.ge.unc	p15,p0=r60,r32			//0: {848:18} 1668
	nop.i	0
// Branch taken probability 0.50
  (p15)br.cond.dptk	.b1_330 ;;			//0: {848:18} 1669
// Block 547: ltail  Pred: 210     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mib  //R-Addr: 0x1440
	ld4	r17=[r44]				//0: {321:6} 1671
	add	r37=1,r37				//0: {849:18} 1670
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2751
// Block 209:  Pred: 21     Succ: 544 545  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$bc:
 {   .mib  //R-Addr: 0x1450
	cmp4.lt.unc	p14,p0=r60,r32			//0: {846:18} 1658
	sxt4	r24=r37					//0: {846:29} 1662
// Branch taken probability 0.50
  (p14)br.cond.dptk	.b1_544 ;;			//0: {846:18} 1659
// Block 545: ltail  Pred: 209     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mii  //R-Addr: 0x1460
	ld4	r17=[r44]				//0: {321:6} 1667
	add	r20=r63,r24				//0: {846:29} 1663
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1470
	ld1	r19=[r20] ;;				//1: {846:29} 1664
	nop.m	0
	sxt1	r18=r19 ;;				//2: {846:29} 1665
 }
 {   .mib  //R-Addr: 0x1480
	add	r37=r37,r18				//3: {846:29} 1666
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2752
// Block 544: ltail  Pred: 209     Succ: 3  -G
// Freq 5.8e-02
 }
.b1_544: 
 {   .mib  //R-Addr: 0x1490
	ld4	r17=[r44]				//0: {321:6} 1661
	add	r37=1,r37				//0: {847:18} 1660
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2753
// Block 207: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$ba:
 {   .mii  //R-Addr: 0x14a0
	ld4	r17=[r44]				//0: {321:6} 1657
	sxt4	r26=r37					//0: {855:18} 1652
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x14b0
	add	r25=r63,r26 ;;				//1: {855:18} 1653
	ld1	r24=[r25]				//2: {855:18} 1654
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x14c0
	nop.m	0
	sxt1	r20=r24					//3: {855:18} 1655
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x14d0
	add	r37=r37,r20				//4: {855:18} 1656
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2755
// Block 206: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$b9:
 {   .mib  //R-Addr: 0x14e0
	ld4	r17=[r44]				//0: {321:6} 1651
	mov	r60=r32					//0: {544:17} 1650
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2756
// Block 205: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$b8:
 {   .mib  //R-Addr: 0x14f0
	ld4	r17=[r44]				//0: {321:6} 1649
	mov	r58=r32					//0: {542:17} 1648
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2757
// Block 204: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$b7:
 {   .mmi  //R-Addr: 0x1500
	shladd	r3=r60,2,r32 ;;				//0: {540:17} 1644
	add	r2=r63,r3				//1: {540:17} 1645
	nop.i	0 ;;
 }
 {   .mmb  //R-Addr: 0x1510
	st1	[r2]=r58				//2: {540:17} 1646
	ld4	r17=[r44]				//2: {321:6} 1647
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2758
// Block 203: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$b6:
 {   .mii  //R-Addr: 0x1520
	ld4	r17=[r44]				//0: {321:6} 1643
	shladd	r19=r60,2,r32				//0: {538:17} 1640
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1530
	add	r18=r63,r19 ;;				//1: {538:17} 1641
	ld1	r32=[r18]				//2: {538:17} 1642
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1540
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2759
// Block 202: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$b5:
 {   .mii  //R-Addr: 0x1550
	ld4	r17=[r44]				//0: {321:6} 1639
	xor	r8=r32,r60				//0: {545:17} 1636
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1560
	xor	r60=r8,r60 ;;				//1: {545:26} 1637
	xor	r32=r8,r60				//2: {545:35} 1638
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1570
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2760
// Block 201: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$b4:
 {   .mib  //R-Addr: 0x1580
	ld4	r17=[r44]				//0: {321:6} 1635
	add	r32=-4,r32				//0: {893:17} 1634
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2761
// Block 200: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$b3:
 {   .mib  //R-Addr: 0x1590
	ld4	r17=[r44]				//0: {321:6} 1633
	add	r32=-3,r32				//0: {894:17} 1632
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2762
// Block 199: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$b2:
 {   .mib  //R-Addr: 0x15a0
	ld4	r17=[r44]				//0: {321:6} 1631
	add	r32=-2,r32				//0: {895:17} 1630
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2763
// Block 198: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$b1:
 {   .mib  //R-Addr: 0x15b0
	ld4	r17=[r44]				//0: {321:6} 1629
	add	r32=-1,r32				//0: {896:17} 1628
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2764
// Block 197: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$b0:
 {   .mii  //R-Addr: 0x15c0
	ld4.a	r17=[r44]				//0: {321:6} 1627
	sxt4	r16=r66					//0: {631:19} 1624
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x15d0
	add	r15=64,r16 ;;				//1: {631:19} 1625
	st4	[r15]=r32				//2: {631:19} 1626
	nop.i	0
 }
 {   .mib  //R-Addr: 0x15e0
	ld4.c.clr	r17=[r44]			//2: {321:6} 4967
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2765
// Block 196: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$af:
 {   .mii  //R-Addr: 0x15f0
	ld4.a	r17=[r44]				//0: {321:6} 1623
	sxt4	r10=r66					//0: {632:19} 1620
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1600
	add	r9=60,r10 ;;				//1: {632:19} 1621
	st4	[r9]=r32				//2: {632:19} 1622
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1610
	ld4.c.clr	r17=[r44]			//2: {321:6} 4954
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2766
// Block 195: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$ae:
 {   .mii  //R-Addr: 0x1620
	ld4.a	r17=[r44]				//0: {321:6} 1619
	sxt4	r14=r66					//0: {633:19} 1616
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1630
	add	r11=56,r14 ;;				//1: {633:19} 1617
	st4	[r11]=r32				//2: {633:19} 1618
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1640
	ld4.c.clr	r17=[r44]			//2: {321:6} 4941
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2767
// Block 194: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$ad:
 {   .mii  //R-Addr: 0x1650
	ld4.a	r17=[r44]				//0: {321:6} 1615
	sxt4	r14=r66					//0: {634:19} 1612
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1660
	add	r11=52,r14 ;;				//1: {634:19} 1613
	st4	[r11]=r32				//2: {634:19} 1614
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1670
	ld4.c.clr	r17=[r44]			//2: {321:6} 4928
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2768
// Block 193: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$ac:
 {   .mii  //R-Addr: 0x1680
	ld4.a	r17=[r44]				//0: {321:6} 1611
	sxt4	r10=r66					//0: {635:19} 1608
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1690
	add	r9=48,r10 ;;				//1: {635:19} 1609
	st4	[r9]=r32				//2: {635:19} 1610
	nop.i	0
 }
 {   .mib  //R-Addr: 0x16a0
	ld4.c.clr	r17=[r44]			//2: {321:6} 4915
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2769
// Block 192: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$ab:
 {   .mii  //R-Addr: 0x16b0
	ld4.a	r17=[r44]				//0: {321:6} 1607
	sxt4	r16=r66					//0: {636:19} 1604
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x16c0
	add	r15=44,r16 ;;				//1: {636:19} 1605
	st4	[r15]=r32				//2: {636:19} 1606
	nop.i	0
 }
 {   .mib  //R-Addr: 0x16d0
	ld4.c.clr	r17=[r44]			//2: {321:6} 4902
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2770
// Block 191: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$aa:
 {   .mii  //R-Addr: 0x16e0
	ld4.a	r17=[r44]				//0: {321:6} 1603
	sxt4	r8=r66					//0: {637:19} 1600
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x16f0
	add	r3=40,r8 ;;				//1: {637:19} 1601
	st4	[r3]=r32				//2: {637:19} 1602
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1700
	ld4.c.clr	r17=[r44]			//2: {321:6} 4889
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2771
// Block 190: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$a9:
 {   .mii  //R-Addr: 0x1710
	ld4.a	r17=[r44]				//0: {321:6} 1599
	sxt4	r19=r66					//0: {638:19} 1596
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1720
	add	r18=36,r19 ;;				//1: {638:19} 1597
	st4	[r18]=r32				//2: {638:19} 1598
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1730
	ld4.c.clr	r17=[r44]			//2: {321:6} 4876
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2772
// Block 189: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$a8:
 {   .mii  //R-Addr: 0x1740
	ld4.a	r17=[r44]				//0: {321:6} 1595
	sxt4	r2=r66					//0: {639:19} 1592
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1750
	add	r30=32,r2 ;;				//1: {639:19} 1593
	st4	[r30]=r32				//2: {639:19} 1594
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1760
	ld4.c.clr	r17=[r44]			//2: {321:6} 4863
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2773
// Block 188: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$a7:
 {   .mii  //R-Addr: 0x1770
	ld4.a	r17=[r44]				//0: {321:6} 1591
	sxt4	r24=r66					//0: {640:19} 1588
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1780
	add	r20=28,r24 ;;				//1: {640:19} 1589
	st4	[r20]=r32				//2: {640:19} 1590
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1790
	ld4.c.clr	r17=[r44]			//2: {321:6} 4850
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2774
// Block 187: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$a6:
 {   .mii  //R-Addr: 0x17a0
	ld4.a	r17=[r44]				//0: {321:6} 1587
	sxt4	r29=r66					//0: {641:19} 1584
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x17b0
	add	r28=24,r29 ;;				//1: {641:19} 1585
	st4	[r28]=r32				//2: {641:19} 1586
	nop.i	0
 }
 {   .mib  //R-Addr: 0x17c0
	ld4.c.clr	r17=[r44]			//2: {321:6} 4837
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2775
// Block 186: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$a5:
 {   .mii  //R-Addr: 0x17d0
	ld4.a	r17=[r44]				//0: {321:6} 1583
	sxt4	r26=r66					//0: {642:19} 1580
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x17e0
	add	r25=20,r26 ;;				//1: {642:19} 1581
	st4	[r25]=r32				//2: {642:19} 1582
	nop.i	0
 }
 {   .mib  //R-Addr: 0x17f0
	ld4.c.clr	r17=[r44]			//2: {321:6} 4824
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2776
// Block 185: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$a4:
 {   .mii  //R-Addr: 0x1800
	ld4.a	r17=[r44]				//0: {321:6} 1579
	sxt4	r27=r66					//0: {643:19} 1576
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1810
	add	r26=16,r27 ;;				//1: {643:19} 1577
	st4	[r26]=r32				//2: {643:19} 1578
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1820
	ld4.c.clr	r17=[r44]			//2: {321:6} 4811
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2777
// Block 184: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$a3:
 {   .mii  //R-Addr: 0x1830
	ld4.a	r17=[r44]				//0: {321:6} 1575
	sxt4	r28=r66					//0: {644:19} 1572
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1840
	add	r27=12,r28 ;;				//1: {644:19} 1573
	st4	[r27]=r32				//2: {644:19} 1574
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1850
	ld4.c.clr	r17=[r44]			//2: {321:6} 4798
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2778
// Block 183: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$a2:
 {   .mii  //R-Addr: 0x1860
	nop.m	0
	nop.i	0
	sxt4	r25=r37					//0: {648:18} 1552
 }
 {   .mmi  //R-Addr: 0x1870
	add	r37=4,r37				//0: {648:43} 1570
	ld4.a	r17=[r44]				//0: {321:6} 1571
	sxt4	r24=r66 ;;				//0: {648:18} 1567
 }
 {   .mmi  //R-Addr: 0x1880
	add	r20=r63,r25 ;;				//1: {648:18} 1553
	add	r19=1,r20				//2: {648:18} 1561
	add	r18=3,r20				//2: {648:18} 1554
 }
 {   .mii  //R-Addr: 0x1890
	ld1	r16=[r20]				//2: {648:18} 1565
	add	r15=2,r20				//2: {648:18} 1557
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x18a0
	ld1	r14=[r18]				//3: {648:18} 1555
	ld1	r11=[r15]				//3: {648:18} 1558
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x18b0
	ld1	r10=[r19]				//4: {648:18} 1562
	shl	r9=r14,8				//4: {648:18} 1556
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x18c0
	or	r8=r9,r11 ;;				//5: {648:18} 1559
	nop.m	0
	shl	r3=r8,8 ;;				//6: {648:18} 1560
 }
 {   .mmi  //R-Addr: 0x18d0
	or	r2=r3,r10 ;;				//7: {648:18} 1563
	nop.m	0
	shl	r30=r2,8 ;;				//8: {648:18} 1564
 }
 {   .mmi  //R-Addr: 0x18e0
	or	r29=r30,r16 ;;				//9: {648:18} 1566
	shladd	r28=r29,2,r24				//10: {648:18} 1568
	nop.i	0 ;;
 }
 {   .mmb  //R-Addr: 0x18f0
	st4	[r28]=r32				//11: {648:18} 1569
	ld4.c.clr	r17=[r44]			//11: {321:6} 4785
	br.cond.sptk.many	.b1_3 ;;		//11: {321:6} 2779
// Block 182: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$a1:
 {   .mii  //R-Addr: 0x1900
	nop.m	0
	nop.i	0
	sxt4	r14=r37					//0: {647:18} 1540
 }
 {   .mmi  //R-Addr: 0x1910
	add	r37=2,r37				//0: {647:43} 1550
	ld4.a	r17=[r44]				//0: {321:6} 1551
	sxt4	r11=r66 ;;				//0: {647:18} 1547
 }
 {   .mmi  //R-Addr: 0x1920
	add	r10=r63,r14 ;;				//1: {647:18} 1541
	ld1	r9=[r10]				//2: {647:18} 1545
	add	r8=1,r10 ;;				//2: {647:18} 1542
 }
 {   .mmi  //R-Addr: 0x1930
	ld1	r3=[r8] ;;				//3: {647:18} 1543
	nop.m	0
	shl	r2=r3,8 ;;				//4: {647:18} 1544
 }
 {   .mmi  //R-Addr: 0x1940
	or	r30=r2,r9 ;;				//5: {647:18} 1546
	shladd	r29=r30,2,r11				//6: {647:18} 1548
	nop.i	0 ;;
 }
 {   .mmb  //R-Addr: 0x1950
	st4	[r29]=r32				//7: {647:18} 1549
	ld4.c.clr	r17=[r44]			//7: {321:6} 4770
	br.cond.sptk.many	.b1_3 ;;		//7: {321:6} 2780
// Block 181: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$a0:
 {   .mii  //R-Addr: 0x1960
	nop.m	0
	nop.i	0
	sxt4	r27=r37					//0: {646:18} 1532
 }
 {   .mmi  //R-Addr: 0x1970
	add	r37=1,r37				//0: {646:23} 1538
	ld4.a	r17=[r44]				//0: {321:6} 1539
	sxt4	r26=r66 ;;				//0: {646:18} 1535
 }
 {   .mmi  //R-Addr: 0x1980
	add	r25=r63,r27 ;;				//1: {646:18} 1533
	ld1	r24=[r25]				//2: {646:18} 1534
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1990
	shladd	r20=r24,2,r26 ;;			//3: {646:18} 1536
	st4	[r20]=r32				//4: {646:18} 1537
	nop.i	0
 }
 {   .mib  //R-Addr: 0x19a0
	ld4.c.clr	r17=[r44]			//4: {321:6} 4755
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2781
// Block 180:  Pred: 21     Succ: 330 515  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$9f:
 {   .mib  //R-Addr: 0x19b0
	cmp4.le.unc	p13,p0=r32,r0			//0: {843:18} 1528
	nop.i	0
// Branch taken probability 0.50
  (p13)br.cond.dptk	.b1_330 ;;			//0: {843:18} 1529
// Block 515: ltail  Pred: 180     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mib  //R-Addr: 0x19c0
	ld4	r17=[r44]				//0: {321:6} 1531
	add	r37=1,r37				//0: {844:18} 1530
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2782
// Block 179:  Pred: 21     Succ: 512 513  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$9e:
 {   .mib  //R-Addr: 0x19d0
	cmp4.gt.unc	p12,p0=r32,r0			//0: {841:18} 1518
	sxt4	r16=r37					//0: {841:29} 1522
// Branch taken probability 0.50
  (p12)br.cond.dptk	.b1_512 ;;			//0: {841:18} 1519
// Block 513: ltail  Pred: 179     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mii  //R-Addr: 0x19e0
	ld4	r17=[r44]				//0: {321:6} 1527
	add	r15=r63,r16				//0: {841:29} 1523
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x19f0
	ld1	r14=[r15] ;;				//1: {841:29} 1524
	nop.m	0
	sxt1	r11=r14 ;;				//2: {841:29} 1525
 }
 {   .mib  //R-Addr: 0x1a00
	add	r37=r37,r11				//3: {841:29} 1526
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2783
// Block 512: ltail  Pred: 179     Succ: 3  -G
// Freq 5.8e-02
 }
.b1_512: 
 {   .mib  //R-Addr: 0x1a10
	ld4	r17=[r44]				//0: {321:6} 1521
	add	r37=1,r37				//0: {842:18} 1520
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2784
// Block 178:  Pred: 21     Succ: 330 510  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$9d:
 {   .mib  //R-Addr: 0x1a20
	cmp4.le.unc	p10,p0=r60,r32			//0: {839:18} 1514
	nop.i	0
// Branch taken probability 0.50
  (p10)br.cond.dptk	.b1_330 ;;			//0: {839:18} 1515
// Block 510: ltail  Pred: 178     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mib  //R-Addr: 0x1a30
	ld4	r17=[r44]				//0: {321:6} 1517
	add	r37=1,r37				//0: {840:18} 1516
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2785
// Block 177:  Pred: 21     Succ: 507 508  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$9c:
 {   .mib  //R-Addr: 0x1a40
	cmp4.gt.unc	p9,p0=r60,r32			//0: {837:18} 1504
	sxt4	r10=r37					//0: {837:29} 1508
// Branch taken probability 0.50
  (p9)	br.cond.dptk	.b1_507 ;;			//0: {837:18} 1505
// Block 508: ltail  Pred: 177     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mii  //R-Addr: 0x1a50
	ld4	r17=[r44]				//0: {321:6} 1513
	add	r9=r63,r10				//0: {837:29} 1509
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1a60
	ld1	r8=[r9] ;;				//1: {837:29} 1510
	nop.m	0
	sxt1	r3=r8 ;;				//2: {837:29} 1511
 }
 {   .mib  //R-Addr: 0x1a70
	add	r37=r37,r3				//3: {837:29} 1512
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2786
// Block 507: ltail  Pred: 177     Succ: 3  -G
// Freq 5.8e-02
 }
.b1_507: 
 {   .mib  //R-Addr: 0x1a80
	ld4	r17=[r44]				//0: {321:6} 1507
	add	r37=1,r37				//0: {838:18} 1506
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2787
// Block 176: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$9b:
 {   .mib  //R-Addr: 0x1a90
	ld4	r17=[r44]				//0: {321:6} 1503
	mov	r37=r32					//0: {501:18} 1502
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2788
// Block 175: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$9a:
 {   .mii  //R-Addr: 0x1aa0
	ld4.a	r17=[r44]				//0: {321:6} 1501
	sxt4	r19=r66					//0: {938:19} 1495
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1ab0
	add	r18=20,r19 ;;				//1: {938:19} 1496
	ld4	r16=[r18]				//2: {938:19} 1497
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1ac0
	add	r15=r32,r16 ;;				//3: {938:19} 1498
	shladd	r14=r15,2,r63				//4: {938:19} 1499
	nop.i	0 ;;
 }
 {   .mmb  //R-Addr: 0x1ad0
	st4	[r14]=r60				//5: {938:19} 1500
	ld4.c.clr	r17=[r44]			//5: {321:6} 4734
	br.cond.sptk.many	.b1_3 ;;		//5: {321:6} 2789
// Block 174: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$99:
 {   .mii  //R-Addr: 0x1ae0
	ld4.a	r17=[r44]				//0: {321:6} 1494
	sxt4	r20=r66					//0: {939:19} 1488
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1af0
	add	r19=16,r20 ;;				//1: {939:19} 1489
	ld4	r18=[r19]				//2: {939:19} 1490
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1b00
	add	r16=r32,r18 ;;				//3: {939:19} 1491
	shladd	r15=r16,2,r63				//4: {939:19} 1492
	nop.i	0 ;;
 }
 {   .mmb  //R-Addr: 0x1b10
	st4	[r15]=r60				//5: {939:19} 1493
	ld4.c.clr	r17=[r44]			//5: {321:6} 4719
	br.cond.sptk.many	.b1_3 ;;		//5: {321:6} 2790
// Block 173: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$98:
 {   .mii  //R-Addr: 0x1b20
	ld4.a	r17=[r44]				//0: {321:6} 1487
	sxt4	r11=r66					//0: {940:19} 1481
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1b30
	add	r10=12,r11 ;;				//1: {940:19} 1482
	ld4	r9=[r10]				//2: {940:19} 1483
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1b40
	add	r8=r32,r9 ;;				//3: {940:19} 1484
	shladd	r3=r8,2,r63				//4: {940:19} 1485
	nop.i	0 ;;
 }
 {   .mmb  //R-Addr: 0x1b50
	st4	[r3]=r60				//5: {940:19} 1486
	ld4.c.clr	r17=[r44]			//5: {321:6} 4704
	br.cond.sptk.many	.b1_3 ;;		//5: {321:6} 2791
// Block 172: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$97:
 {   .mii  //R-Addr: 0x1b60
	ld4.a	r17=[r44]				//0: {321:6} 1480
	shladd	r25=r32,2,r63				//0: {513:18} 1477
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1b70
	add	r24=12,r25 ;;				//1: {513:18} 1478
	st4	[r24]=r60				//2: {513:18} 1479
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1b80
	ld4.c.clr	r17=[r44]			//2: {321:6} 4689
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2792
// Block 171: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$96:
 {   .mii  //R-Addr: 0x1b90
	ld4.a	r17=[r44]				//0: {321:6} 1476
	shladd	r2=r32,2,r63				//0: {514:18} 1473
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1ba0
	add	r30=8,r2 ;;				//1: {514:18} 1474
	st4	[r30]=r60				//2: {514:18} 1475
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1bb0
	ld4.c.clr	r17=[r44]			//2: {321:6} 4675
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2793
// Block 170: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$95:
 {   .mii  //R-Addr: 0x1bc0
	ld4.a	r17=[r44]				//0: {321:6} 1472
	shladd	r27=r32,2,r63				//0: {515:18} 1469
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1bd0
	add	r26=4,r27 ;;				//1: {515:18} 1470
	st4	[r26]=r60				//2: {515:18} 1471
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1be0
	ld4.c.clr	r17=[r44]			//2: {321:6} 4661
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2794
// Block 169: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$94:
 {   .mii  //R-Addr: 0x1bf0
	ld4.a	r17=[r44]				//0: {321:6} 1468
	shladd	r29=r32,2,r63				//0: {516:18} 1466
	nop.i	0 ;;
 }
 {   .mmb  //R-Addr: 0x1c00
	st4	[r29]=r60				//1: {516:18} 1467
	ld4.c.clr	r17=[r44]			//1: {321:6} 4647
	br.cond.sptk.many	.b1_3 ;;		//1: {321:6} 2795
// Block 168: collapsed  Pred: 21     Succ: 495 497  -GO
// Freq 1.2e-01
 }


//  561 :   case F_swl: { BCPLWORD n,q;
//  562 :                 q = (pc+1)>>1;
//  563 :                 n = H[q++];
//  564 :                 if(0<=a && a<n) q += a + 1;
//  565 :                 pc = (q<<1) + SH[q];
//  566 :                 goto fetch;
//  567 :               }
//  568 :

$$1$1_0$TAG$93:  // SWL
 {   .mii  //R-Addr: 0x1c10
	ld4	r17=[r44]				//0: {321:6} 1462
	add	r25=1,r37				//0: {562:18} 1451
	cmp4.lt.unc	p8,p7=r32,r0 ;;			//0: {564:18} 2662
 }
 {   .mii  //R-Addr: 0x1c20
	nop.m	0
	extr	r24=r25,1,31 ;;				//1: {562:18} 1452
	shladd	r20=r24,1,r63				//2: {563:18} 1454
 }
 {   .mmi  //R-Addr: 0x1c30
	add	r27=1,r24 ;;				//2: {563:24} 1453
	ld2	r19=[r20]				//3: {563:18} 1455
	add	r28=r32,r27,1				//3: {564:34} 1465
 }
 {   .mii  //R-Addr: 0x1c40
	nop.m	0
	shladd	r26=r27,1,r63 ;;			//3: {565:18} 1458
  (p7)	cmp4.ge	p8,p0=r32,r19				//4: {564:18} 2664
 }
 {   .mib  //R-Addr: 0x1c50
	ld2.s	r2=[r26]				//4: {565:18} 1459
	shladd	r29=r28,1,r63				//4: {565:18} 3281
// Branch taken probability 0.75
  (p8)	br.cond.dptk	.b1_495 ;;			//4: {564:18} 1464
// Block 497:  Pred: 168     Succ: 495  -G
// Freq 2.9e-02
 }
 {   .mii  //R-Addr: 0x1c60
	ld2.s	r2=[r29]				//0: {565:18} 3288
	mov	r27=r28					//0: {564:34} 3282
	mov	r26=r29 ;;				//0: {565:18} 3289
// Block 495:  Pred: 168 497     Succ: 796 809  -GO
// Freq 1.2e-01
 }
.b1_495: 
 {   .mii  //R-Addr: 0x1c70
	nop.m	0
	nop.i	0
	sxt2	r30=r2					//0: {565:18} 1460
 }
 {   .mmi  //R-Addr: 0x1c80
// Branch taken probability 0.05
	chk.s	r2,.b1_796 ;;				//0: {565:18} 3283
// Block 809: ltail  Pred: 495     Succ: 3  -GO
// Freq 1.1e-01
	shladd	r37=r27,1,r30				//1: {565:18} 1461
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1c90
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//1: {565:18} 5546
// Block 167: prolog  Pred: 21     Succ: 488 699  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$92:
 {   .mii  //R-Addr: 0x1ca0
	ld4	r17=[r44]				//0: {321:6} 1438
	add	r30=1,r37				//0: {548:18} 1427
	add	r10=1,r0 ;;				//0: {547:38} 1426
 }
 {   .mii  //R-Addr: 0x1cb0
	nop.m	0
	extr	r15=r30,1,31 ;;				//1: {548:18} 1428
	add	r14=1,r15				//2: {557:18} 1433
 }
 {   .mmi  //R-Addr: 0x1cc0
	shladd	r8=r15,1,r63 ;;				//2: {549:18} 1429
	ld2	r9=[r8]					//3: {549:18} 1430
	add	r11=2,r8 ;;				//3: {557:18} 1434
 }
 {   .mib  //R-Addr: 0x1cd0
	ld2.s	r18=[r11]				//4: {557:18} 1435
	cmp4.gt.unc	p6,p0=1,r9			//4: {550:18} 1431
// Branch taken probability 0.50
  (p6)	br.cond.dptk	.b1_488 ;;			//4: {550:18} 1432
// Block 699: lentry lexit  Pred: 167 701     Succ: 491 700  -G
// Freq 5.8e+00
 }
.b1_699: 
 {   .mmi  //R-Addr: 0x1ce0
	add	r10=r10,r10 ;;				//0: {551:20} 2397
	shladd	r3=r10,1,r8				//1: {552:20} 2398
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x1cf0
	ld2	r2=[r3] ;;				//2: {552:20} 2399
	cmp4.eq.unc	p6,p0=r32,r2			//3: {553:20} 2400
	cmp4.ge.unc	p7,p0=r32,r2			//3: {554:20} 2402
 }
 {   .mbb  //R-Addr: 0x1d00
	nop.m	0
// Branch taken probability 0.20
  (p6)	br.cond.dpnt	.b1_491				//3: {553:20} 2401
// Block 700:  Pred: 699     Succ: 701 702  -G
// Freq 4.6e+00
// Branch taken probability 0.50
  (p7)	br.cond.dptk	.b1_701 ;;			//0: {554:20} 2403
// Block 702:  Pred: 700     Succ: 701  -G
// Freq 2.3e+00
 }
 {   .mii  //R-Addr: 0x1d10
	add	r10=1,r10				//0: {554:31} 2406
	nop.i	0
	nop.i	0 ;;
// Block 701: lexit ltail  Pred: 700 702     Succ: 699 488  -G
// Freq 4.6e+00
 }
.b1_701: 
 {   .mib  //R-Addr: 0x1d20
	cmp4.le.unc	p8,p0=r10,r9			//0: {550:18} 2404
	nop.i	0
// Branch taken probability 0.80
  (p8)	br.cond.dptk	.b1_699 ;;			//0: {550:18} 2405
// Block 488: epilog  Pred: 167 701 491     Succ: 797 811  -GO
// Freq 1.2e-01
 }
.b1_488: 
 {   .mii  //R-Addr: 0x1d30
	nop.m	0
	nop.i	0
	sxt2	r16=r18					//0: {557:18} 1436
 }
 {   .mmi  //R-Addr: 0x1d40
// Branch taken probability 0.05
	chk.s	r18,.b1_797 ;;				//0: {557:18} 3267
// Block 811: ltail  Pred: 488     Succ: 3  -GO
// Freq 1.1e-01
	shladd	r37=r14,1,r16				//1: {557:18} 1437
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1d50
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//1: {557:18} 5547
// Block 166: lexit  Pred: 21     Succ: 481 480  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$91:
 {   .mii  //R-Addr: 0x1d60
	shladd	r29=r67,2,r0				//0: {575:26} 1401
	cmp4.eq.unc	p13,p0=-1,r32			//0: {569:16} 1384
	sxt4	r19=r66					//0: {602:26} 1416
 }
 {   .mbb  //R-Addr: 0x1d70
	cmp4.eq.unc	p14,p0=r32,r0			//0: {569:16} 1386
// Branch taken probability 0.20
  (p13)br.cond.dpnt	.b1_481				//0: {569:16} 1385
// Block 480: lexit  Pred: 166     Succ: 483 482  -G
// Freq 9.3e-02
// Branch taken probability 0.20
  (p14)br.cond.dpnt	.b1_483 ;;			//0: {569:16} 1387
// Block 482:  Pred: 480     Succ: 485 484  -G
// Freq 7.4e-02
 }
 {   .mii  //R-Addr: 0x1d80
	add	r25=2,r0				//0: {582:30} 1410
	sxt4	r27=r55					//0: {582:30} 1409
	sxt4	r28=r67					//0: {582:30} 1408
 }
 {   .mmb  //R-Addr: 0x1d90
	cmp4.eq.unc	p15,p0=5,r32			//0: {569:16} 1393
	add	r26=16,r19				//0: {602:26} 1417
// Branch taken probability 0.40
  (p15)br.cond.dpnt	.b1_485 ;;			//0: {569:16} 1394
// Block 484:  Pred: 482     Succ: 486  -GO
// Freq 4.4e-02
 }
 {   .mii  //R-Addr: 0x1da0
	st4	[r62]=r32				//0: {572:12} 1398
	mov	r69=r28					//0: {582:30} 1411
	mov	r70=r27					//0: {582:30} 1412
 }
 {   .mmi  //R-Addr: 0x1db0
	st4	[r59]=r58 ;;				//0: {574:26} 1400
	st4	[r61]=r60				//1: {573:12} 1399
	nop.i	0
 }
 {   .mmi  //R-Addr: 0x1dc0
	st4	[r57]=r29 ;;				//1: {575:26} 1402
	st4	[r56]=r39				//2: {576:26} 1403
	nop.i	0
 }
 {   .mmi  //R-Addr: 0x1dd0
	st4	[r52]=r37 ;;				//2: {578:26} 1405
	st4	[r54]=r53				//3: {577:26} 1404
	nop.i	0
 }
 {   .mmi  //R-Addr: 0x1de0
	st4	[r51]=r50 ;;				//3: {579:26} 1406
	st4	[r49]=r48				//4: {580:26} 1407
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1df0
	nop.m	0
	nop.i	0
	br.call.sptk	b0=CX3$_Z5DOSYSII23C78UM# ;;	//4: {582:30} 1414
// Block 486: ltail  Pred: 484     Succ: 3  -GO
// Freq 4.4e-02
 }
 {   .mii  //R-Addr: 0x1e00
	ld4	r17=[r44]				//6: {321:6} 1425
	mov	r32=r8					//6: {582:26} 1424
	mov	gp=r36					//6: {582:30} 5486
 }
 {   .mmb  //R-Addr: 0x1e10
	nop.m	0
	nop.m	0
	br.cond.sptk.many	.b1_3 ;;		//6: {321:6} 2798
// Block 165: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$90:
 {   .mii  //R-Addr: 0x1e20
	ld4	r17=[r44]				//0: {321:6} 1383
	sxt4	r29=r66					//0: {608:27} 1380
	mov	r60=r32 ;;				//0: {608:20} 1379
 }
 {   .mmi  //R-Addr: 0x1e30
	add	r28=64,r29 ;;				//1: {608:27} 1381
	ld4	r32=[r28]				//2: {608:27} 1382
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1e40
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2799
// Block 164: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$8f:
 {   .mii  //R-Addr: 0x1e50
	ld4	r17=[r44]				//0: {321:6} 1378
	sxt4	r28=r66					//0: {609:27} 1375
	mov	r60=r32 ;;				//0: {609:20} 1374
 }
 {   .mmi  //R-Addr: 0x1e60
	add	r27=60,r28 ;;				//1: {609:27} 1376
	ld4	r32=[r27]				//2: {609:27} 1377
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1e70
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2800
// Block 163: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$8e:
 {   .mii  //R-Addr: 0x1e80
	ld4	r17=[r44]				//0: {321:6} 1373
	sxt4	r2=r66					//0: {610:27} 1370
	mov	r60=r32 ;;				//0: {610:20} 1369
 }
 {   .mmi  //R-Addr: 0x1e90
	add	r30=56,r2 ;;				//1: {610:27} 1371
	ld4	r32=[r30]				//2: {610:27} 1372
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1ea0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2801
// Block 162: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$8d:
 {   .mii  //R-Addr: 0x1eb0
	ld4	r17=[r44]				//0: {321:6} 1368
	sxt4	r26=r66					//0: {611:27} 1365
	mov	r60=r32 ;;				//0: {611:20} 1364
 }
 {   .mmi  //R-Addr: 0x1ec0
	add	r25=52,r26 ;;				//1: {611:27} 1366
	ld4	r32=[r25]				//2: {611:27} 1367
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1ed0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2802
// Block 161: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$8c:
 {   .mii  //R-Addr: 0x1ee0
	ld4	r17=[r44]				//0: {321:6} 1363
	sxt4	r8=r66					//0: {612:27} 1360
	mov	r60=r32 ;;				//0: {612:20} 1359
 }
 {   .mmi  //R-Addr: 0x1ef0
	add	r3=48,r8 ;;				//1: {612:27} 1361
	ld4	r32=[r3]				//2: {612:27} 1362
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1f00
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2803
// Block 160: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$8b:
 {   .mii  //R-Addr: 0x1f10
	ld4	r17=[r44]				//0: {321:6} 1358
	sxt4	r24=r66					//0: {613:27} 1355
	mov	r60=r32 ;;				//0: {613:20} 1354
 }
 {   .mmi  //R-Addr: 0x1f20
	add	r20=44,r24 ;;				//1: {613:27} 1356
	ld4	r32=[r20]				//2: {613:27} 1357
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1f30
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2804
// Block 159: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$8a:
 {   .mii  //R-Addr: 0x1f40
	ld4	r17=[r44]				//0: {321:6} 1353
	sxt4	r10=r66					//0: {614:27} 1350
	mov	r60=r32 ;;				//0: {614:20} 1349
 }
 {   .mmi  //R-Addr: 0x1f50
	add	r9=40,r10 ;;				//1: {614:27} 1351
	ld4	r32=[r9]				//2: {614:27} 1352
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1f60
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2805
// Block 158: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$89:
 {   .mii  //R-Addr: 0x1f70
	ld4	r17=[r44]				//0: {321:6} 1348
	sxt4	r19=r66					//0: {615:27} 1345
	mov	r60=r32 ;;				//0: {615:20} 1344
 }
 {   .mmi  //R-Addr: 0x1f80
	add	r18=36,r19 ;;				//1: {615:27} 1346
	ld4	r32=[r18]				//2: {615:27} 1347
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1f90
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2806
// Block 157: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$88:
 {   .mii  //R-Addr: 0x1fa0
	ld4	r17=[r44]				//0: {321:6} 1343
	sxt4	r14=r66					//0: {616:27} 1340
	mov	r60=r32 ;;				//0: {616:20} 1339
 }
 {   .mmi  //R-Addr: 0x1fb0
	add	r11=32,r14 ;;				//1: {616:27} 1341
	ld4	r32=[r11]				//2: {616:27} 1342
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1fc0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2807
// Block 156: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$87:
 {   .mii  //R-Addr: 0x1fd0
	ld4	r17=[r44]				//0: {321:6} 1338
	sxt4	r16=r66					//0: {617:27} 1335
	mov	r60=r32 ;;				//0: {617:20} 1334
 }
 {   .mmi  //R-Addr: 0x1fe0
	add	r15=28,r16 ;;				//1: {617:27} 1336
	ld4	r32=[r15]				//2: {617:27} 1337
	nop.i	0
 }
 {   .mib  //R-Addr: 0x1ff0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2808
// Block 155: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$86:
 {   .mii  //R-Addr: 0x2000
	ld4	r17=[r44]				//0: {321:6} 1333
	sxt4	r16=r66					//0: {618:27} 1330
	mov	r60=r32 ;;				//0: {618:20} 1329
 }
 {   .mmi  //R-Addr: 0x2010
	add	r15=24,r16 ;;				//1: {618:27} 1331
	ld4	r32=[r15]				//2: {618:27} 1332
	nop.i	0
 }
 {   .mib  //R-Addr: 0x2020
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2809
// Block 154: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$85:
 {   .mii  //R-Addr: 0x2030
	ld4	r17=[r44]				//0: {321:6} 1328
	sxt4	r14=r66					//0: {619:27} 1325
	mov	r60=r32 ;;				//0: {619:20} 1324
 }
 {   .mmi  //R-Addr: 0x2040
	add	r11=20,r14 ;;				//1: {619:27} 1326
	ld4	r32=[r11]				//2: {619:27} 1327
	nop.i	0
 }
 {   .mib  //R-Addr: 0x2050
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2810
// Block 153: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$84:
 {   .mii  //R-Addr: 0x2060
	ld4	r17=[r44]				//0: {321:6} 1323
	sxt4	r19=r66					//0: {620:27} 1320
	mov	r60=r32 ;;				//0: {620:20} 1319
 }
 {   .mmi  //R-Addr: 0x2070
	add	r18=16,r19 ;;				//1: {620:27} 1321
	ld4	r32=[r18]				//2: {620:27} 1322
	nop.i	0
 }
 {   .mib  //R-Addr: 0x2080
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2811
// Block 152: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$83:
 {   .mii  //R-Addr: 0x2090
	ld4	r17=[r44]				//0: {321:6} 1318
	sxt4	r10=r66					//0: {621:27} 1315
	mov	r60=r32 ;;				//0: {621:20} 1314
 }
 {   .mmi  //R-Addr: 0x20a0
	add	r9=12,r10 ;;				//1: {621:27} 1316
	ld4	r32=[r9]				//2: {621:27} 1317
	nop.i	0
 }
 {   .mib  //R-Addr: 0x20b0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2812
// Block 151: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$82:
 {   .mii  //R-Addr: 0x20c0
	mov	r60=r32					//0: {625:17} 1293
	sxt4	r16=r37					//0: {625:24} 1294
	sxt4	r15=r66					//0: {625:24} 1309
 }
 {   .mmb  //R-Addr: 0x20d0
	add	r37=4,r37				//0: {625:41} 1312
	ld4	r17=[r44]				//0: {321:6} 1313
	nop.b	0 ;;
 }
 {   .mmi  //R-Addr: 0x20e0
	add	r14=r63,r16 ;;				//1: {625:24} 1295
	add	r11=1,r14				//2: {625:24} 1303
	add	r10=3,r14				//2: {625:24} 1296
 }
 {   .mii  //R-Addr: 0x20f0
	ld1	r9=[r14]				//2: {625:24} 1307
	add	r8=2,r14				//2: {625:24} 1299
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2100
	ld1	r3=[r10]				//3: {625:24} 1297
	ld1	r2=[r8]					//3: {625:24} 1300
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x2110
	ld1	r30=[r11]				//4: {625:24} 1304
	shl	r29=r3,8				//4: {625:24} 1298
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2120
	or	r28=r29,r2 ;;				//5: {625:24} 1301
	nop.m	0
	shl	r27=r28,8 ;;				//6: {625:24} 1302
 }
 {   .mmi  //R-Addr: 0x2130
	or	r26=r27,r30 ;;				//7: {625:24} 1305
	nop.m	0
	shl	r25=r26,8 ;;				//8: {625:24} 1306
 }
 {   .mmi  //R-Addr: 0x2140
	or	r24=r25,r9 ;;				//9: {625:24} 1308
	shladd	r20=r24,2,r15				//10: {625:24} 1310
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x2150
	ld4	r32=[r20]				//11: {625:24} 1311
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//11: {321:6} 2813
// Block 150: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$81:
 {   .mii  //R-Addr: 0x2160
	mov	r60=r32					//0: {624:17} 1280
	sxt4	r8=r37					//0: {624:24} 1281
	sxt4	r3=r66					//0: {624:24} 1288
 }
 {   .mmb  //R-Addr: 0x2170
	add	r37=2,r37				//0: {624:41} 1291
	ld4	r17=[r44]				//0: {321:6} 1292
	nop.b	0 ;;
 }
 {   .mmi  //R-Addr: 0x2180
	add	r2=r63,r8 ;;				//1: {624:24} 1282
	ld1	r30=[r2]				//2: {624:24} 1286
	add	r29=1,r2 ;;				//2: {624:24} 1283
 }
 {   .mmi  //R-Addr: 0x2190
	ld1	r28=[r29] ;;				//3: {624:24} 1284
	nop.m	0
	shl	r27=r28,8 ;;				//4: {624:24} 1285
 }
 {   .mmi  //R-Addr: 0x21a0
	or	r26=r27,r30 ;;				//5: {624:24} 1287
	shladd	r25=r26,2,r3				//6: {624:24} 1289
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x21b0
	ld4	r32=[r25]				//7: {624:24} 1290
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//7: {321:6} 2814
// Block 149: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$80:
 {   .mii  //R-Addr: 0x21c0
	mov	r60=r32					//0: {623:17} 1271
	sxt4	r25=r37					//0: {623:24} 1272
	sxt4	r24=r66					//0: {623:24} 1275
 }
 {   .mmb  //R-Addr: 0x21d0
	add	r37=1,r37				//0: {623:33} 1278
	ld4	r17=[r44]				//0: {321:6} 1279
	nop.b	0 ;;
 }
 {   .mmi  //R-Addr: 0x21e0
	add	r20=r63,r25 ;;				//1: {623:24} 1273
	ld1	r19=[r20]				//2: {623:24} 1274
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x21f0
	shladd	r18=r19,2,r24 ;;			//3: {623:24} 1276
	ld4	r32=[r18]				//4: {623:24} 1277
	nop.i	0
 }
 {   .mib  //R-Addr: 0x2200
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2815
// Block 148:  Pred: 21     Succ: 330 461  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$7f:
 {   .mib  //R-Addr: 0x2210
	cmp4.gt.unc	p12,p0=r32,r0			//0: {834:18} 1267
	nop.i	0
// Branch taken probability 0.50
  (p12)br.cond.dptk	.b1_330 ;;			//0: {834:18} 1268
// Block 461: ltail  Pred: 148     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mib  //R-Addr: 0x2220
	ld4	r17=[r44]				//0: {321:6} 1270
	add	r37=1,r37				//0: {835:18} 1269
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2816
// Block 147:  Pred: 21     Succ: 458 459  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$7e:
 {   .mib  //R-Addr: 0x2230
	cmp4.le.unc	p10,p0=r32,r0			//0: {832:18} 1257
	sxt4	r18=r37					//0: {832:28} 1261
// Branch taken probability 0.50
  (p10)br.cond.dptk	.b1_458 ;;			//0: {832:18} 1258
// Block 459: ltail  Pred: 147     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mii  //R-Addr: 0x2240
	ld4	r17=[r44]				//0: {321:6} 1266
	add	r16=r63,r18				//0: {832:28} 1262
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2250
	ld1	r15=[r16] ;;				//1: {832:28} 1263
	nop.m	0
	sxt1	r14=r15 ;;				//2: {832:28} 1264
 }
 {   .mib  //R-Addr: 0x2260
	add	r37=r37,r14				//3: {832:28} 1265
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2817
// Block 458: ltail  Pred: 147     Succ: 3  -G
// Freq 5.8e-02
 }
.b1_458: 
 {   .mib  //R-Addr: 0x2270
	ld4	r17=[r44]				//0: {321:6} 1260
	add	r37=1,r37				//0: {833:18} 1259
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2818
// Block 146:  Pred: 21     Succ: 330 456  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$7d:
 {   .mib  //R-Addr: 0x2280
	cmp4.gt.unc	p9,p0=r60,r32			//0: {830:18} 1253
	nop.i	0
// Branch taken probability 0.50
  (p9)	br.cond.dptk	.b1_330 ;;			//0: {830:18} 1254
// Block 456: ltail  Pred: 146     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mib  //R-Addr: 0x2290
	ld4	r17=[r44]				//0: {321:6} 1256
	add	r37=1,r37				//0: {831:18} 1255
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2819
// Block 145:  Pred: 21     Succ: 453 454  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$7c:
 {   .mib  //R-Addr: 0x22a0
	cmp4.le.unc	p8,p0=r60,r32			//0: {828:18} 1243
	sxt4	r11=r37					//0: {828:28} 1247
// Branch taken probability 0.50
  (p8)	br.cond.dptk	.b1_453 ;;			//0: {828:18} 1244
// Block 454: ltail  Pred: 145     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mii  //R-Addr: 0x22b0
	ld4	r17=[r44]				//0: {321:6} 1252
	add	r10=r63,r11				//0: {828:28} 1248
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x22c0
	ld1	r9=[r10] ;;				//1: {828:28} 1249
	nop.m	0
	sxt1	r8=r9 ;;				//2: {828:28} 1250
 }
 {   .mib  //R-Addr: 0x22d0
	add	r37=r37,r8				//3: {828:28} 1251
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2820
// Block 453: ltail  Pred: 145     Succ: 3  -G
// Freq 5.8e-02
 }
.b1_453: 
 {   .mib  //R-Addr: 0x22e0
	ld4	r17=[r44]				//0: {321:6} 1246
	add	r37=1,r37				//0: {829:18} 1245
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2821
// Block 144:  Pred: 21     Succ: 451  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$7b:
 {   .mii  //R-Addr: 0x22f0
	ld4	r17=[r44]				//0: {321:6} 4487
	shladd	r19=r67,2,r63				//0: {534:18} 1238
	sxt4	r18=r66 ;;				//0: {533:18} 1235
 }
 {   .mii  //R-Addr: 0x2300
	ld4	r20=[r19]				//1: {534:18} 4489
	add	r24=4,r18				//1: {533:18} 1236
	nop.i	0 ;;
// Block 451: ltail  Pred: 260 144     Succ: 3  -G
// Freq 2.3e-01
 }
.b1_451: 
 {   .mii  //R-Addr: 0x2310
	ld4	r37=[r24]				//0: {533:18} 1237
	extr	r67=r20,2,30				//0: {534:18} 1240
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x2320
	shladd	r66=r67,2,r33				//1: {535:18} 1241
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//1: {321:6} 2822
// Block 143: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$7a:
 {   .mii  //R-Addr: 0x2330
	ld4	r17=[r44]				//0: {321:6} 1234
	shladd	r27=r32,2,r63				//0: {505:18} 1231
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2340
	add	r26=24,r27 ;;				//1: {505:18} 1232
	ld4	r32=[r26]				//2: {505:18} 1233
	nop.i	0
 }
 {   .mib  //R-Addr: 0x2350
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2823
// Block 142: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$79:
 {   .mii  //R-Addr: 0x2360
	ld4	r17=[r44]				//0: {321:6} 1230
	shladd	r25=r32,2,r63				//0: {506:18} 1227
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2370
	add	r24=20,r25 ;;				//1: {506:18} 1228
	ld4	r32=[r24]				//2: {506:18} 1229
	nop.i	0
 }
 {   .mib  //R-Addr: 0x2380
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2824
// Block 141: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$78:
 {   .mii  //R-Addr: 0x2390
	ld4	r17=[r44]				//0: {321:6} 1226
	shladd	r29=r32,2,r63				//0: {507:18} 1223
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x23a0
	add	r28=16,r29 ;;				//1: {507:18} 1224
	ld4	r32=[r28]				//2: {507:18} 1225
	nop.i	0
 }
 {   .mib  //R-Addr: 0x23b0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2825
// Block 140: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$77:
 {   .mii  //R-Addr: 0x23c0
	ld4	r17=[r44]				//0: {321:6} 1222
	shladd	r20=r32,2,r63				//0: {508:18} 1219
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x23d0
	add	r19=12,r20 ;;				//1: {508:18} 1220
	ld4	r32=[r19]				//2: {508:18} 1221
	nop.i	0
 }
 {   .mib  //R-Addr: 0x23e0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2826
// Block 139: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$76:
 {   .mii  //R-Addr: 0x23f0
	ld4	r17=[r44]				//0: {321:6} 1218
	shladd	r2=r32,2,r63				//0: {509:18} 1215
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2400
	add	r30=8,r2 ;;				//1: {509:18} 1216
	ld4	r32=[r30]				//2: {509:18} 1217
	nop.i	0
 }
 {   .mib  //R-Addr: 0x2410
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2827
// Block 138: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$75:
 {   .mii  //R-Addr: 0x2420
	ld4	r17=[r44]				//0: {321:6} 1214
	shladd	r18=r32,2,r63				//0: {510:18} 1211
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2430
	add	r16=4,r18 ;;				//1: {510:18} 1212
	ld4	r32=[r16]				//2: {510:18} 1213
	nop.i	0
 }
 {   .mib  //R-Addr: 0x2440
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2828
// Block 137: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$74:
 {   .mii  //R-Addr: 0x2450
	ld4	r17=[r44]				//0: {321:6} 1210
	shladd	r3=r32,2,r63				//0: {511:18} 1208
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x2460
	ld4	r32=[r3]				//1: {511:18} 1209
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//1: {321:6} 2829
// Block 136: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$73:
 {   .mii  //R-Addr: 0x2470
	nop.m	0
	nop.i	0
	sxt4	r15=r37					//0: {876:18} 1195
 }
 {   .mmi  //R-Addr: 0x2480
	add	r37=2,r37				//0: {876:35} 1206
	ld4	r17=[r44]				//0: {321:6} 1207
	sxt4	r14=r47 ;;				//0: {876:18} 1202
 }
 {   .mmi  //R-Addr: 0x2490
	add	r11=r63,r15 ;;				//1: {876:18} 1196
	ld1	r10=[r11]				//2: {876:18} 1200
	add	r9=1,r11 ;;				//2: {876:18} 1197
 }
 {   .mmi  //R-Addr: 0x24a0
	ld1	r8=[r9] ;;				//3: {876:18} 1198
	nop.m	0
	shl	r3=r8,8 ;;				//4: {876:18} 1199
 }
 {   .mmi  //R-Addr: 0x24b0
	or	r2=r3,r10 ;;				//5: {876:18} 1201
	shladd	r30=r2,2,r14				//6: {876:18} 1203
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x24c0
	ld4	r29=[r30] ;;				//7: {876:18} 1204
	add	r32=r32,r29				//8: {876:18} 1205
	nop.i	0
 }
 {   .mib  //R-Addr: 0x24d0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//8: {321:6} 2830
// Block 135: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$72:
 {   .mii  //R-Addr: 0x24e0
	nop.m	0
	nop.i	0
	sxt4	r16=r37					//0: {658:24} 1185
 }
 {   .mmi  //R-Addr: 0x24f0
	add	r37=2,r37				//0: {658:43} 1193
	ld4	r17=[r44]				//0: {321:6} 1194
	mov	r60=r32 ;;				//0: {658:17} 1184
 }
 {   .mmi  //R-Addr: 0x2500
	add	r15=r63,r16 ;;				//1: {658:24} 1186
	ld1	r14=[r15]				//2: {658:24} 1190
	add	r11=1,r15 ;;				//2: {658:24} 1187
 }
 {   .mmi  //R-Addr: 0x2510
	ld1	r10=[r11] ;;				//3: {658:24} 1188
	nop.m	0
	shl	r9=r10,8 ;;				//4: {658:24} 1189
 }
 {   .mmi  //R-Addr: 0x2520
	or	r8=r9,r14 ;;				//5: {658:24} 1191
	add	r32=r55,r8				//6: {658:24} 1192
	nop.i	0
 }
 {   .mib  //R-Addr: 0x2530
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//6: {321:6} 2831
// Block 134: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$71:
 {   .mii  //R-Addr: 0x2540
	nop.m	0
	nop.i	0
	sxt4	r28=r37					//0: {654:18} 1172
 }
 {   .mmi  //R-Addr: 0x2550
	add	r37=2,r37				//0: {654:43} 1182
	ld4.a	r17=[r44]				//0: {321:6} 1183
	sxt4	r27=r47 ;;				//0: {654:18} 1179
 }
 {   .mmi  //R-Addr: 0x2560
	add	r26=r63,r28 ;;				//1: {654:18} 1173
	ld1	r25=[r26]				//2: {654:18} 1177
	add	r24=1,r26 ;;				//2: {654:18} 1174
 }
 {   .mmi  //R-Addr: 0x2570
	ld1	r20=[r24] ;;				//3: {654:18} 1175
	nop.m	0
	shl	r19=r20,8 ;;				//4: {654:18} 1176
 }
 {   .mmi  //R-Addr: 0x2580
	or	r18=r19,r25 ;;				//5: {654:18} 1178
	shladd	r16=r18,2,r27				//6: {654:18} 1180
	nop.i	0 ;;
 }
 {   .mmb  //R-Addr: 0x2590
	st4	[r16]=r32				//7: {654:18} 1181
	ld4.c.clr	r17=[r44]			//7: {321:6} 4399
	br.cond.sptk.many	.b1_3 ;;		//7: {321:6} 2832
// Block 133: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$70:
 {   .mii  //R-Addr: 0x25a0
	mov	r60=r32					//0: {650:18} 1159
	sxt4	r29=r37					//0: {650:25} 1160
	sxt4	r28=r47					//0: {650:25} 1167
 }
 {   .mmb  //R-Addr: 0x25b0
	add	r37=2,r37				//0: {650:43} 1170
	ld4	r17=[r44]				//0: {321:6} 1171
	nop.b	0 ;;
 }
 {   .mmi  //R-Addr: 0x25c0
	add	r27=r63,r29 ;;				//1: {650:25} 1161
	ld1	r26=[r27]				//2: {650:25} 1165
	add	r25=1,r27 ;;				//2: {650:25} 1162
 }
 {   .mmi  //R-Addr: 0x25d0
	ld1	r24=[r25] ;;				//3: {650:25} 1163
	nop.m	0
	shl	r20=r24,8 ;;				//4: {650:25} 1164
 }
 {   .mmi  //R-Addr: 0x25e0
	or	r19=r20,r26 ;;				//5: {650:25} 1166
	shladd	r18=r19,2,r28				//6: {650:25} 1168
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x25f0
	ld4	r32=[r18]				//7: {650:25} 1169
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//7: {321:6} 2833
// Block 132: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$6f:
 {   .mii  //R-Addr: 0x2600
	mov	r60=r32					//0: {926:18} 1143
	sxt4	r15=r37					//0: {926:25} 1144
	sxt4	r14=r47					//0: {926:25} 1151
 }
 {   .mmb  //R-Addr: 0x2610
	add	r37=2,r37				//0: {926:46} 1157
	ld4	r17=[r44]				//0: {321:6} 1158
	nop.b	0 ;;
 }
 {   .mmi  //R-Addr: 0x2620
	add	r11=r63,r15 ;;				//1: {926:25} 1145
	ld1	r10=[r11]				//2: {926:25} 1149
	add	r9=1,r11 ;;				//2: {926:25} 1146
 }
 {   .mmi  //R-Addr: 0x2630
	ld1	r8=[r9] ;;				//3: {926:25} 1147
	nop.m	0
	shl	r3=r8,8 ;;				//4: {926:25} 1148
 }
 {   .mmi  //R-Addr: 0x2640
	or	r2=r3,r10 ;;				//5: {926:25} 1150
	shladd	r30=r2,2,r14				//6: {926:25} 1152
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2650
	ld4	r29=[r30] ;;				//7: {926:25} 1153
	shladd	r28=r29,2,r63				//8: {926:25} 1154
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2660
	add	r27=8,r28 ;;				//9: {926:25} 1155
	ld4	r32=[r27]				//10: {926:25} 1156
	nop.i	0
 }
 {   .mib  //R-Addr: 0x2670
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//10: {321:6} 2834
// Block 131: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$6e:
 {   .mii  //R-Addr: 0x2680
	mov	r60=r32					//0: {925:18} 1127
	sxt4	r19=r37					//0: {925:25} 1128
	sxt4	r18=r47					//0: {925:25} 1135
 }
 {   .mmb  //R-Addr: 0x2690
	add	r37=2,r37				//0: {925:46} 1141
	ld4	r17=[r44]				//0: {321:6} 1142
	nop.b	0 ;;
 }
 {   .mmi  //R-Addr: 0x26a0
	add	r16=r63,r19 ;;				//1: {925:25} 1129
	ld1	r15=[r16]				//2: {925:25} 1133
	add	r14=1,r16 ;;				//2: {925:25} 1130
 }
 {   .mmi  //R-Addr: 0x26b0
	ld1	r11=[r14] ;;				//3: {925:25} 1131
	nop.m	0
	shl	r10=r11,8 ;;				//4: {925:25} 1132
 }
 {   .mmi  //R-Addr: 0x26c0
	or	r9=r10,r15 ;;				//5: {925:25} 1134
	shladd	r8=r9,2,r18				//6: {925:25} 1136
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x26d0
	ld4	r3=[r8] ;;				//7: {925:25} 1137
	shladd	r2=r3,2,r63				//8: {925:25} 1138
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x26e0
	add	r30=4,r2 ;;				//9: {925:25} 1139
	ld4	r32=[r30]				//10: {925:25} 1140
	nop.i	0
 }
 {   .mib  //R-Addr: 0x26f0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//10: {321:6} 2835
// Block 130: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$6d:
 {   .mii  //R-Addr: 0x2700
	mov	r60=r32					//0: {924:18} 1112
	sxt4	r26=r37					//0: {924:25} 1113
	sxt4	r25=r47					//0: {924:25} 1120
 }
 {   .mmb  //R-Addr: 0x2710
	add	r37=2,r37				//0: {924:46} 1125
	ld4	r17=[r44]				//0: {321:6} 1126
	nop.b	0 ;;
 }
 {   .mmi  //R-Addr: 0x2720
	add	r24=r63,r26 ;;				//1: {924:25} 1114
	ld1	r20=[r24]				//2: {924:25} 1118
	add	r19=1,r24 ;;				//2: {924:25} 1115
 }
 {   .mmi  //R-Addr: 0x2730
	ld1	r18=[r19] ;;				//3: {924:25} 1116
	nop.m	0
	shl	r16=r18,8 ;;				//4: {924:25} 1117
 }
 {   .mmi  //R-Addr: 0x2740
	or	r15=r16,r20 ;;				//5: {924:25} 1119
	shladd	r14=r15,2,r25				//6: {924:25} 1121
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2750
	ld4	r11=[r14] ;;				//7: {924:25} 1122
	shladd	r10=r11,2,r63				//8: {924:25} 1123
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x2760
	ld4	r32=[r10]				//9: {924:25} 1124
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//9: {321:6} 2836
// Block 129: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$6c:
 {   .mii  //R-Addr: 0x2770
	nop.m	0
	nop.i	0
	sxt4	r8=r37					//0: {934:18} 1098
 }
 {   .mmi  //R-Addr: 0x2780
	add	r37=2,r37				//0: {934:46} 1110
	ld4.a	r17=[r44]				//0: {321:6} 1111
	sxt4	r3=r47 ;;				//0: {934:18} 1105
 }
 {   .mmi  //R-Addr: 0x2790
	add	r2=r63,r8 ;;				//1: {934:18} 1099
	ld1	r30=[r2]				//2: {934:18} 1103
	add	r29=1,r2 ;;				//2: {934:18} 1100
 }
 {   .mmi  //R-Addr: 0x27a0
	ld1	r28=[r29] ;;				//3: {934:18} 1101
	nop.m	0
	shl	r27=r28,8 ;;				//4: {934:18} 1102
 }
 {   .mmi  //R-Addr: 0x27b0
	or	r26=r27,r30 ;;				//5: {934:18} 1104
	shladd	r25=r26,2,r3				//6: {934:18} 1106
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x27c0
	ld4	r24=[r25] ;;				//7: {934:18} 1107
	shladd	r20=r24,2,r63				//8: {934:18} 1108
	nop.i	0 ;;
 }
 {   .mmb  //R-Addr: 0x27d0
	st4	[r20]=r32				//9: {934:18} 1109
	ld4.c.clr	r17=[r44]			//9: {321:6} 4348
	br.cond.sptk.many	.b1_3 ;;		//9: {321:6} 2837
// Block 128:  Pred: 21     Succ: 426  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$6b:
 {   .mmi  //R-Addr: 0x27e0
	shladd	r11=r67,2,r0				//0: {706:20} 1093
	add	r67=11,r67				//0: {706:39} 1097
	sxt4	r10=r66 ;;				//0: {706:20} 1094
 }
 {   .mmi  //R-Addr: 0x27f0
	add	r9=44,r10 ;;				//1: {706:20} 1095
	st4	[r9]=r11				//2: {706:20} 1096
	nop.i	0
 }
 {   .mib  //R-Addr: 0x2800
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_426 ;;		//2: {706:39} 2838
// Block 127:  Pred: 21     Succ: 426  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$6a:
 {   .mmi  //R-Addr: 0x2810
	shladd	r18=r67,2,r0				//0: {707:20} 1088
	add	r67=10,r67				//0: {707:39} 1092
	sxt4	r17=r66 ;;				//0: {707:20} 1089
 }
 {   .mmi  //R-Addr: 0x2820
	add	r16=40,r17 ;;				//1: {707:20} 1090
	st4	[r16]=r18				//2: {707:20} 1091
	nop.i	0
 }
 {   .mib  //R-Addr: 0x2830
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_426 ;;		//2: {707:39} 2839
// Block 126:  Pred: 21     Succ: 426  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$69:
 {   .mmi  //R-Addr: 0x2840
	shladd	r16=r67,2,r0				//0: {708:20} 1083
	add	r67=9,r67				//0: {708:39} 1087
	sxt4	r15=r66 ;;				//0: {708:20} 1084
 }
 {   .mmi  //R-Addr: 0x2850
	add	r14=36,r15 ;;				//1: {708:20} 1085
	st4	[r14]=r16				//2: {708:20} 1086
	nop.i	0
 }
 {   .mib  //R-Addr: 0x2860
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_426 ;;		//2: {708:39} 2840
// Block 125:  Pred: 21     Succ: 426  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$68:
 {   .mmi  //R-Addr: 0x2870
	shladd	r15=r67,2,r0				//0: {709:20} 1078
	add	r67=8,r67				//0: {709:39} 1082
	sxt4	r14=r66 ;;				//0: {709:20} 1079
 }
 {   .mmi  //R-Addr: 0x2880
	add	r11=32,r14 ;;				//1: {709:20} 1080
	st4	[r11]=r15				//2: {709:20} 1081
	nop.i	0
 }
 {   .mib  //R-Addr: 0x2890
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_426 ;;		//2: {709:39} 2841
// Block 124:  Pred: 21     Succ: 426  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$67:
 {   .mmi  //R-Addr: 0x28a0
	shladd	r19=r67,2,r0				//0: {710:20} 1073
	add	r67=7,r67				//0: {710:39} 1077
	sxt4	r18=r66 ;;				//0: {710:20} 1074
 }
 {   .mmi  //R-Addr: 0x28b0
	add	r17=28,r18 ;;				//1: {710:20} 1075
	st4	[r17]=r19				//2: {710:20} 1076
	nop.i	0
 }
 {   .mib  //R-Addr: 0x28c0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_426 ;;		//2: {710:39} 2842
// Block 123:  Pred: 21     Succ: 426  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$66:
 {   .mmi  //R-Addr: 0x28d0
	shladd	r10=r67,2,r0				//0: {711:20} 1068
	add	r67=6,r67				//0: {711:39} 1072
	sxt4	r9=r66 ;;				//0: {711:20} 1069
 }
 {   .mmi  //R-Addr: 0x28e0
	add	r8=24,r9 ;;				//1: {711:20} 1070
	st4	[r8]=r10				//2: {711:20} 1071
	nop.i	0
 }
 {   .mib  //R-Addr: 0x28f0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_426 ;;		//2: {711:39} 2843
// Block 122:  Pred: 21     Succ: 426  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$65:
 {   .mmi  //R-Addr: 0x2900
	shladd	r25=r67,2,r0				//0: {712:20} 1063
	add	r67=5,r67				//0: {712:39} 1067
	sxt4	r24=r66 ;;				//0: {712:20} 1064
 }
 {   .mmi  //R-Addr: 0x2910
	add	r20=20,r24 ;;				//1: {712:20} 1065
	st4	[r20]=r25				//2: {712:20} 1066
	nop.i	0
 }
 {   .mib  //R-Addr: 0x2920
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_426 ;;		//2: {712:39} 2844
// Block 121:  Pred: 21     Succ: 426  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$64:
 {   .mmi  //R-Addr: 0x2930
	shladd	r3=r67,2,r0				//0: {713:20} 1058
	add	r67=4,r67				//0: {713:39} 1062
	sxt4	r2=r66 ;;				//0: {713:20} 1059
 }
 {   .mmi  //R-Addr: 0x2940
	add	r30=16,r2 ;;				//1: {713:20} 1060
	st4	[r30]=r3				//2: {713:20} 1061
	nop.i	0
 }
 {   .mib  //R-Addr: 0x2950
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_426 ;;		//2: {713:39} 2845
// Block 120:  Pred: 21     Succ: 426  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$63:
 {   .mmi  //R-Addr: 0x2960
	shladd	r28=r67,2,r0				//0: {714:20} 1031
	add	r67=3,r67				//0: {714:39} 1035
	sxt4	r27=r66 ;;				//0: {714:20} 1032
 }
 {   .mmi  //R-Addr: 0x2970
	add	r26=12,r27 ;;				//1: {714:20} 1033
	st4	[r26]=r28				//2: {714:20} 1034
	nop.i	0 ;;
// Block 426: lexit ltail  Pred: 127 126 125 124 123 122 121 120 128     Succ: 3 818  -GO
// Freq 1.0e+00
 }
.b1_426: 
 {   .mmi  //R-Addr: 0x2980
	add	r9=2,r37				//0: {716:20} 1038
	ld4.a	r17=[r44]				//0: {321:6} 1055
	sxt4	r3=r37					//0: {717:20} 1041
 }
 {   .mii  //R-Addr: 0x2990
	shladd	r66=r67,2,r33				//0: {715:20} 1036
	sxt4	r8=r47 ;;				//0: {717:20} 1048
	sxt4	r2=r66					//1: {716:20} 1037
 }
 {   .mmi  //R-Addr: 0x29a0
	add	r30=r63,r3 ;;				//1: {717:20} 1042
	ld1.a	r14=[r30]				//2: {717:20} 1046
	add	r29=4,r2				//2: {716:20} 1039
 }
 {   .mmi  //R-Addr: 0x29b0
	add	r27=12,r2				//2: {719:20} 1053
	add	r28=8,r2				//2: {718:20} 1051
	add	r26=1,r30 ;;				//2: {717:20} 1043
 }
 {   .mmi  //R-Addr: 0x29c0
	st4	[r29]=r9				//3: {716:20} 1040
	ld1	r25=[r26]				//3: {717:20} 1044
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x29d0
	ld1.c.clr	r14=[r30]			//4: {717:20} 4329
	shl	r24=r25,8				//4: {717:20} 1045
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x29e0
	or	r20=r24,r14 ;;				//5: {717:20} 1047
	shladd	r19=r20,2,r8				//6: {717:20} 1049
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x29f0
	ld4	r37=[r19]				//7: {717:20} 1050
	st4	[r27]=r32				//7: {719:20} 1054
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x2a00
	st4	[r28]=r37				//8: {718:20} 1052
	cmp4.ge.unc	p12,p0=r37,r0			//8: {720:20} 1056
	nop.i	0
 }
 {   .mbb  //R-Addr: 0x2a10
	ld4.c.clr	r17=[r44]			//8: {321:6} 4324
// Branch taken probability 0.80
  (p12)br.cond.dptk.many	.b1_3			//8: {720:20} 1057
// Block 818:  Pred: 426     Succ: 2  -
// Freq 2.1e-01
	br.cond.sptk	.b1_2 ;;			//8: {720:20} 5548
// Block 119: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$62:
 {   .mii  //R-Addr: 0x2a20
	nop.m	0
	nop.i	0
	sxt4	r29=r37					//0: {695:25} 1014
 }
 {   .mmi  //R-Addr: 0x2a30
	add	r37=4,r37				//0: {695:43} 1029
	ld4	r17=[r44]				//0: {321:6} 1030
	mov	r60=r32 ;;				//0: {695:18} 1013
 }
 {   .mmi  //R-Addr: 0x2a40
	add	r28=r63,r29 ;;				//1: {695:25} 1015
	add	r27=1,r28				//2: {695:25} 1023
	add	r26=3,r28				//2: {695:25} 1016
 }
 {   .mii  //R-Addr: 0x2a50
	ld1	r25=[r28]				//2: {695:25} 1027
	add	r24=2,r28				//2: {695:25} 1019
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2a60
	ld1	r20=[r26]				//3: {695:25} 1017
	ld1	r19=[r24]				//3: {695:25} 1020
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x2a70
	ld1	r18=[r27]				//4: {695:25} 1024
	shl	r16=r20,8				//4: {695:25} 1018
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2a80
	or	r15=r16,r19 ;;				//5: {695:25} 1021
	nop.m	0
	shl	r14=r15,8 ;;				//6: {695:25} 1022
 }
 {   .mmi  //R-Addr: 0x2a90
	or	r11=r14,r18 ;;				//7: {695:25} 1025
	nop.m	0
	shl	r10=r11,8 ;;				//8: {695:25} 1026
 }
 {   .mib  //R-Addr: 0x2aa0
	or	r32=r10,r25				//9: {695:25} 1028
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//9: {321:6} 2847
// Block 118: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$61:
 {   .mii  //R-Addr: 0x2ab0
	nop.m	0
	nop.i	0
	sxt4	r9=r37					//0: {694:25} 1004
 }
 {   .mmi  //R-Addr: 0x2ac0
	add	r37=2,r37				//0: {694:43} 1011
	ld4	r17=[r44]				//0: {321:6} 1012
	mov	r60=r32 ;;				//0: {694:18} 1003
 }
 {   .mmi  //R-Addr: 0x2ad0
	add	r8=r63,r9 ;;				//1: {694:25} 1005
	ld1	r3=[r8]					//2: {694:25} 1009
	add	r2=1,r8 ;;				//2: {694:25} 1006
 }
 {   .mmi  //R-Addr: 0x2ae0
	ld1	r30=[r2] ;;				//3: {694:25} 1007
	nop.m	0
	shl	r29=r30,8 ;;				//4: {694:25} 1008
 }
 {   .mib  //R-Addr: 0x2af0
	or	r32=r29,r3				//5: {694:25} 1010
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//5: {321:6} 2848
// Block 117: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$60:
 {   .mii  //R-Addr: 0x2b00
	nop.m	0
	nop.i	0
	sxt4	r9=r37					//0: {693:25} 998
 }
 {   .mmi  //R-Addr: 0x2b10
	add	r37=1,r37				//0: {693:31} 1001
	ld4	r17=[r44]				//0: {321:6} 1002
	mov	r60=r32 ;;				//0: {693:18} 997
 }
 {   .mmi  //R-Addr: 0x2b20
	add	r8=r63,r9 ;;				//1: {693:25} 999
	ld1	r32=[r8]				//2: {693:25} 1000
	nop.i	0
 }
 {   .mib  //R-Addr: 0x2b30
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2849
// Block 116:  Pred: 21     Succ: 330 421  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$5f:
 {   .mib  //R-Addr: 0x2b40
	cmp4.lt.unc	p7,p0=r32,r0			//0: {825:18} 993
	nop.i	0
// Branch taken probability 0.50
  (p7)	br.cond.dptk	.b1_330 ;;			//0: {825:18} 994
// Block 421: ltail  Pred: 116     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mib  //R-Addr: 0x2b50
	ld4	r17=[r44]				//0: {321:6} 996
	add	r37=1,r37				//0: {826:18} 995
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2850
// Block 115:  Pred: 21     Succ: 418 419  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$5e:
 {   .mib  //R-Addr: 0x2b60
	cmp4.ge.unc	p6,p0=r32,r0			//0: {823:18} 983
	sxt4	r3=r37					//0: {823:28} 987
// Branch taken probability 0.50
  (p6)	br.cond.dptk	.b1_418 ;;			//0: {823:18} 984
// Block 419: ltail  Pred: 115     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mii  //R-Addr: 0x2b70
	ld4	r17=[r44]				//0: {321:6} 992
	add	r2=r63,r3				//0: {823:28} 988
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2b80
	ld1	r30=[r2] ;;				//1: {823:28} 989
	nop.m	0
	sxt1	r29=r30 ;;				//2: {823:28} 990
 }
 {   .mib  //R-Addr: 0x2b90
	add	r37=r37,r29				//3: {823:28} 991
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2851
// Block 418: ltail  Pred: 115     Succ: 3  -G
// Freq 5.8e-02
 }
.b1_418: 
 {   .mib  //R-Addr: 0x2ba0
	ld4	r17=[r44]				//0: {321:6} 986
	add	r37=1,r37				//0: {824:18} 985
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2852
// Block 114:  Pred: 21     Succ: 330 416  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$5d:
 {   .mib  //R-Addr: 0x2bb0
	cmp4.lt.unc	p15,p0=r60,r32			//0: {821:18} 979
	nop.i	0
// Branch taken probability 0.50
  (p15)br.cond.dptk	.b1_330 ;;			//0: {821:18} 980
// Block 416: ltail  Pred: 114     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mib  //R-Addr: 0x2bc0
	ld4	r17=[r44]				//0: {321:6} 982
	add	r37=1,r37				//0: {822:18} 981
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2853
// Block 113:  Pred: 21     Succ: 413 414  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$5c:
 {   .mib  //R-Addr: 0x2bd0
	cmp4.ge.unc	p14,p0=r60,r32			//0: {819:18} 969
	sxt4	r28=r37					//0: {819:28} 973
// Branch taken probability 0.50
  (p14)br.cond.dptk	.b1_413 ;;			//0: {819:18} 970
// Block 414: ltail  Pred: 113     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mii  //R-Addr: 0x2be0
	ld4	r17=[r44]				//0: {321:6} 978
	add	r27=r63,r28				//0: {819:28} 974
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2bf0
	ld1	r26=[r27] ;;				//1: {819:28} 975
	nop.m	0
	sxt1	r25=r26 ;;				//2: {819:28} 976
 }
 {   .mib  //R-Addr: 0x2c00
	add	r37=r37,r25				//3: {819:28} 977
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2854
// Block 413: ltail  Pred: 113     Succ: 3  -G
// Freq 5.8e-02
 }
.b1_413: 
 {   .mib  //R-Addr: 0x2c10
	ld4	r17=[r44]				//0: {321:6} 972
	add	r37=1,r37				//0: {820:18} 971
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2855
// Block 112: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$5b:
 {   .mii  //R-Addr: 0x2c20
	mov	r60=r32					//0: {676:17} 965
	extr	r24=r37,1,31				//0: {674:17} 956
	sxt4	r20=r37					//0: {674:17} 957
 }
 {   .mmb  //R-Addr: 0x2c30
	add	r37=1,r37				//0: {676:50} 967
	ld4	r17=[r44]				//0: {321:6} 968
	nop.b	0 ;;
 }
 {   .mmi  //R-Addr: 0x2c40
	add	r19=r63,r20 ;;				//1: {674:17} 958
	ld1	r18=[r19]				//2: {674:17} 959
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2c50
	add	r16=r24,r18 ;;				//3: {674:17} 960
	shladd	r15=r16,1,r63				//4: {675:17} 961
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2c60
	ld2	r14=[r15] ;;				//5: {675:17} 962
	nop.m	0
	sxt2	r11=r14 ;;				//6: {675:17} 963
 }
 {   .mmi  //R-Addr: 0x2c70
	shladd	r10=r16,1,r11 ;;			//7: {675:17} 964
	nop.m	0
	extr	r32=r10,2,30				//8: {676:24} 966
 }
 {   .mib  //R-Addr: 0x2c80
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//8: {321:6} 2856
// Block 111: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$5a:
 {   .mii  //R-Addr: 0x2c90
	ld4	r17=[r44]				//0: {321:6} 955
	sxt4	r3=r37					//0: {678:24} 948
	mov	r60=r32 ;;				//0: {678:17} 947
 }
 {   .mmi  //R-Addr: 0x2ca0
	add	r2=r63,r3 ;;				//1: {678:24} 949
	ld1	r30=[r2]				//2: {678:24} 950
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x2cb0
	nop.m	0
	sxt1	r29=r30					//3: {678:24} 951
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x2cc0
	add	r28=r37,r29				//4: {678:24} 952
	add	r37=1,r37 ;;				//4: {678:50} 954
	extr	r32=r28,2,30				//5: {678:24} 953
 }
 {   .mib  //R-Addr: 0x2cd0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//5: {321:6} 2857
// Block 110: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$59:
 {   .mib  //R-Addr: 0x2ce0
	ld4	r17=[r44]				//0: {321:6} 946
	or	r32=r60,r32				//0: {498:18} 945
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2858
// Block 109: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$58:
 {   .mib  //R-Addr: 0x2cf0
	ld4	r17=[r44]				//0: {321:6} 944
	and	r32=r60,r32				//0: {497:18} 943
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2859
// Block 108: ltail collapsed  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$57:
 {   .mii  //R-Addr: 0x2d00
	ld4	r17=[r44]				//0: {321:6} 941
	cmp4.gt.unc	p0,p14=32,r32			//0: {494:18} 2653
	sxt4	r27=r32 ;;				//0: {495:18} 938
 }
 {   .mmi  //R-Addr: 0x2d10
  (p14)add	r60=0,r0 ;;				//1: {494:32} 942
	nop.m	0
	zxt4	r26=r60 ;;				//2: {495:18} 937
 }
 {   .mii  //R-Addr: 0x2d20
	nop.m	0
	shr.u	r25=r26,r27 ;;				//5: {495:18} 939
	sxt4	r32=r25					//8: {495:18} 940
 }
 {   .mib  //R-Addr: 0x2d30
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//8: {321:6} 2860
// Block 107: ltail collapsed  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$56:
 {   .mii  //R-Addr: 0x2d40
	ld4	r17=[r44]				//0: {321:6} 933
	cmp4.gt.unc	p0,p10=32,r32			//0: {492:18} 2654
	sxt4	r27=r32 ;;				//0: {493:18} 931
 }
 {   .mmi  //R-Addr: 0x2d50
  (p10)add	r60=0,r0 ;;				//1: {492:32} 934
	nop.m	0
	shl	r32=r60,r27				//4: {493:18} 932
 }
 {   .mib  //R-Addr: 0x2d60
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2861
// Block 106: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$55:
 {   .mib  //R-Addr: 0x2d70
	ld4	r17=[r44]				//0: {321:6} 928
	sub	r32=r60,r32				//0: {487:18} 927
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2862
// Block 105: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$54:
 {   .mib  //R-Addr: 0x2d80
	ld4	r17=[r44]				//0: {321:6} 926
	add	r32=r32,r60				//0: {486:18} 925
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2863
// Block 104: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$53:
 {   .mii  //R-Addr: 0x2d90
	nop.m	0
	nop.i	0
	sxt4	r8=r37					//0: {877:18} 916
 }
 {   .mmi  //R-Addr: 0x2da0
	add	r37=1,r37				//0: {877:29} 923
	ld4	r17=[r44]				//0: {321:6} 924
	sxt4	r3=r46 ;;				//0: {877:18} 919
 }
 {   .mmi  //R-Addr: 0x2db0
	add	r2=r63,r8 ;;				//1: {877:18} 917
	ld1	r30=[r2]				//2: {877:18} 918
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2dc0
	shladd	r29=r30,2,r3 ;;				//3: {877:18} 920
	ld4	r28=[r29]				//4: {877:18} 921
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x2dd0
	add	r32=r32,r28				//5: {877:18} 922
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//5: {321:6} 2864
// Block 103: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$52:
 {   .mii  //R-Addr: 0x2de0
	nop.m	0
	nop.i	0
	sxt4	r26=r37					//0: {659:24} 909
 }
 {   .mmi  //R-Addr: 0x2df0
	add	r37=1,r37				//0: {659:36} 914
	ld4	r17=[r44]				//0: {321:6} 915
	mov	r60=r32 ;;				//0: {659:17} 908
 }
 {   .mmi  //R-Addr: 0x2e00
	add	r25=r63,r26 ;;				//1: {659:24} 910
	ld1	r24=[r25]				//2: {659:24} 911
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2e10
	add	r20=r55,r24 ;;				//3: {659:24} 912
	add	r32=256,r20				//4: {659:24} 913
	nop.i	0
 }
 {   .mib  //R-Addr: 0x2e20
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2865
// Block 102: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$51:
 {   .mii  //R-Addr: 0x2e30
	nop.m	0
	nop.i	0
	sxt4	r15=r37					//0: {655:18} 900
 }
 {   .mmi  //R-Addr: 0x2e40
	add	r37=1,r37				//0: {655:24} 906
	ld4.a	r17=[r44]				//0: {321:6} 907
	sxt4	r14=r46 ;;				//0: {655:18} 903
 }
 {   .mmi  //R-Addr: 0x2e50
	add	r11=r63,r15 ;;				//1: {655:18} 901
	ld1	r10=[r11]				//2: {655:18} 902
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2e60
	shladd	r9=r10,2,r14 ;;				//3: {655:18} 904
	st4	[r9]=r32				//4: {655:18} 905
	nop.i	0
 }
 {   .mib  //R-Addr: 0x2e70
	ld4.c.clr	r17=[r44]			//4: {321:6} 4155
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2866
// Block 101: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$50:
 {   .mii  //R-Addr: 0x2e80
	mov	r60=r32					//0: {651:18} 891
	sxt4	r19=r37					//0: {651:25} 892
	sxt4	r18=r46					//0: {651:25} 895
 }
 {   .mmb  //R-Addr: 0x2e90
	add	r37=1,r37				//0: {651:35} 898
	ld4	r17=[r44]				//0: {321:6} 899
	nop.b	0 ;;
 }
 {   .mmi  //R-Addr: 0x2ea0
	add	r16=r63,r19 ;;				//1: {651:25} 893
	ld1	r15=[r16]				//2: {651:25} 894
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2eb0
	shladd	r14=r15,2,r18 ;;			//3: {651:25} 896
	ld4	r32=[r14]				//4: {651:25} 897
	nop.i	0
 }
 {   .mib  //R-Addr: 0x2ec0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2867
// Block 100: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$4f:
 {   .mii  //R-Addr: 0x2ed0
	mov	r60=r32					//0: {929:18} 879
	sxt4	r27=r37					//0: {929:25} 880
	sxt4	r26=r46					//0: {929:25} 883
 }
 {   .mmb  //R-Addr: 0x2ee0
	add	r37=1,r37				//0: {929:37} 889
	ld4	r17=[r44]				//0: {321:6} 890
	nop.b	0 ;;
 }
 {   .mmi  //R-Addr: 0x2ef0
	add	r25=r63,r27 ;;				//1: {929:25} 881
	ld1	r24=[r25]				//2: {929:25} 882
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2f00
	shladd	r20=r24,2,r26 ;;			//3: {929:25} 884
	ld4	r19=[r20]				//4: {929:25} 885
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2f10
	shladd	r18=r19,2,r63 ;;			//5: {929:25} 886
	add	r16=8,r18				//6: {929:25} 887
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x2f20
	ld4	r32=[r16]				//7: {929:25} 888
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//7: {321:6} 2868
// Block 99: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$4e:
 {   .mii  //R-Addr: 0x2f30
	mov	r60=r32					//0: {928:18} 867
	sxt4	r11=r37					//0: {928:25} 868
	sxt4	r10=r46					//0: {928:25} 871
 }
 {   .mmb  //R-Addr: 0x2f40
	add	r37=1,r37				//0: {928:37} 877
	ld4	r17=[r44]				//0: {321:6} 878
	nop.b	0 ;;
 }
 {   .mmi  //R-Addr: 0x2f50
	add	r9=r63,r11 ;;				//1: {928:25} 869
	ld1	r8=[r9]					//2: {928:25} 870
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2f60
	shladd	r3=r8,2,r10 ;;				//3: {928:25} 872
	ld4	r2=[r3]					//4: {928:25} 873
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2f70
	shladd	r30=r2,2,r63 ;;				//5: {928:25} 874
	add	r29=4,r30				//6: {928:25} 875
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x2f80
	ld4	r32=[r29]				//7: {928:25} 876
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//7: {321:6} 2869
// Block 98: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$4d:
 {   .mii  //R-Addr: 0x2f90
	mov	r60=r32					//0: {927:18} 856
	sxt4	r9=r37					//0: {927:25} 857
	sxt4	r8=r46					//0: {927:25} 860
 }
 {   .mmb  //R-Addr: 0x2fa0
	add	r37=1,r37				//0: {927:37} 865
	ld4	r17=[r44]				//0: {321:6} 866
	nop.b	0 ;;
 }
 {   .mmi  //R-Addr: 0x2fb0
	add	r3=r63,r9 ;;				//1: {927:25} 858
	ld1	r2=[r3]					//2: {927:25} 859
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2fc0
	shladd	r30=r2,2,r8 ;;				//3: {927:25} 861
	ld4	r29=[r30]				//4: {927:25} 862
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x2fd0
	shladd	r28=r29,2,r63 ;;			//5: {927:25} 863
	ld4	r32=[r28]				//6: {927:25} 864
	nop.i	0
 }
 {   .mib  //R-Addr: 0x2fe0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//6: {321:6} 2870
// Block 97: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$4c:
 {   .mii  //R-Addr: 0x2ff0
	nop.m	0
	nop.i	0
	sxt4	r28=r37					//0: {935:18} 846
 }
 {   .mmi  //R-Addr: 0x3000
	add	r37=1,r37				//0: {935:26} 854
	ld4.a	r17=[r44]				//0: {321:6} 855
	sxt4	r27=r46 ;;				//0: {935:18} 849
 }
 {   .mmi  //R-Addr: 0x3010
	add	r26=r63,r28 ;;				//1: {935:18} 847
	ld1	r25=[r26]				//2: {935:18} 848
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x3020
	shladd	r24=r25,2,r27 ;;			//3: {935:18} 850
	ld4	r20=[r24]				//4: {935:18} 851
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x3030
	shladd	r19=r20,2,r63 ;;			//5: {935:18} 852
	st4	[r19]=r32				//6: {935:18} 853
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3040
	ld4.c.clr	r17=[r44]			//6: {321:6} 4104
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//6: {321:6} 2871
// Block 96:  Pred: 21     Succ: 383  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$4b:
 {   .mmi  //R-Addr: 0x3050
	shladd	r18=r67,2,r0				//0: {723:20} 841
	add	r67=11,r67				//0: {723:39} 845
	sxt4	r17=r66 ;;				//0: {723:20} 842
 }
 {   .mmi  //R-Addr: 0x3060
	add	r16=44,r17 ;;				//1: {723:20} 843
	st4	[r16]=r18				//2: {723:20} 844
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3070
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_383 ;;		//2: {723:39} 2872
// Block 95:  Pred: 21     Succ: 383  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$4a:
 {   .mmi  //R-Addr: 0x3080
	shladd	r27=r67,2,r0				//0: {724:20} 836
	add	r67=10,r67				//0: {724:39} 840
	sxt4	r26=r66 ;;				//0: {724:20} 837
 }
 {   .mmi  //R-Addr: 0x3090
	add	r25=40,r26 ;;				//1: {724:20} 838
	st4	[r25]=r27				//2: {724:20} 839
	nop.i	0
 }
 {   .mib  //R-Addr: 0x30a0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_383 ;;		//2: {724:39} 2873
// Block 94:  Pred: 21     Succ: 383  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$49:
 {   .mmi  //R-Addr: 0x30b0
	shladd	r15=r67,2,r0				//0: {725:20} 831
	add	r67=9,r67				//0: {725:39} 835
	sxt4	r14=r66 ;;				//0: {725:20} 832
 }
 {   .mmi  //R-Addr: 0x30c0
	add	r11=36,r14 ;;				//1: {725:20} 833
	st4	[r11]=r15				//2: {725:20} 834
	nop.i	0
 }
 {   .mib  //R-Addr: 0x30d0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_383 ;;		//2: {725:39} 2874
// Block 93:  Pred: 21     Succ: 383  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$48:
 {   .mmi  //R-Addr: 0x30e0
	shladd	r30=r67,2,r0				//0: {726:20} 826
	add	r67=8,r67				//0: {726:39} 830
	sxt4	r29=r66 ;;				//0: {726:20} 827
 }
 {   .mmi  //R-Addr: 0x30f0
	add	r28=32,r29 ;;				//1: {726:20} 828
	st4	[r28]=r30				//2: {726:20} 829
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3100
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_383 ;;		//2: {726:39} 2875
// Block 92:  Pred: 21     Succ: 383  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$47:
 {   .mmi  //R-Addr: 0x3110
	shladd	r10=r67,2,r0				//0: {727:20} 821
	add	r67=7,r67				//0: {727:39} 825
	sxt4	r9=r66 ;;				//0: {727:20} 822
 }
 {   .mmi  //R-Addr: 0x3120
	add	r8=28,r9 ;;				//1: {727:20} 823
	st4	[r8]=r10				//2: {727:20} 824
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3130
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_383 ;;		//2: {727:39} 2876
// Block 91:  Pred: 21     Succ: 383  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$46:
 {   .mmi  //R-Addr: 0x3140
	shladd	r8=r67,2,r0				//0: {728:20} 816
	add	r67=6,r67				//0: {728:39} 820
	sxt4	r3=r66 ;;				//0: {728:20} 817
 }
 {   .mmi  //R-Addr: 0x3150
	add	r2=24,r3 ;;				//1: {728:20} 818
	st4	[r2]=r8					//2: {728:20} 819
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3160
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_383 ;;		//2: {728:39} 2877
// Block 90:  Pred: 21     Succ: 383  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$45:
 {   .mmi  //R-Addr: 0x3170
	shladd	r3=r67,2,r0				//0: {729:20} 811
	add	r67=5,r67				//0: {729:39} 815
	sxt4	r2=r66 ;;				//0: {729:20} 812
 }
 {   .mmi  //R-Addr: 0x3180
	add	r30=20,r2 ;;				//1: {729:20} 813
	st4	[r30]=r3				//2: {729:20} 814
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3190
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_383 ;;		//2: {729:39} 2878
// Block 89:  Pred: 21     Succ: 383  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$44:
 {   .mmi  //R-Addr: 0x31a0
	shladd	r11=r67,2,r0				//0: {730:20} 806
	add	r67=4,r67				//0: {730:39} 810
	sxt4	r10=r66 ;;				//0: {730:20} 807
 }
 {   .mmi  //R-Addr: 0x31b0
	add	r9=16,r10 ;;				//1: {730:20} 808
	st4	[r9]=r11				//2: {730:20} 809
	nop.i	0
 }
 {   .mib  //R-Addr: 0x31c0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_383 ;;		//2: {730:39} 2879
// Block 88:  Pred: 21     Succ: 383  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$43:
 {   .mmi  //R-Addr: 0x31d0
	shladd	r29=r67,2,r0				//0: {731:20} 783
	add	r67=3,r67				//0: {731:39} 787
	sxt4	r28=r66 ;;				//0: {731:20} 784
 }
 {   .mmi  //R-Addr: 0x31e0
	add	r27=12,r28 ;;				//1: {731:20} 785
	st4	[r27]=r29				//2: {731:20} 786
	nop.i	0 ;;
// Block 383:  Pred: 95 94 93 92 91 90 89 88 96     Succ: 798 813  -GO
// Freq 1.0e+00
 }
.b1_383: 
 {   .mmi  //R-Addr: 0x31f0
	shladd	r66=r67,2,r33				//0: {732:20} 788
	add	r24=1,r37				//0: {733:20} 790
	sxt4	r19=r37					//0: {734:20} 793
 }
 {   .mii  //R-Addr: 0x3200
	ld4.a	r17=[r44]				//0: {321:6} 803
	sxt4	r20=r46 ;;				//0: {734:20} 796
	sxt4	r18=r66					//1: {733:20} 789
 }
 {   .mmi  //R-Addr: 0x3210
	add	r16=r63,r19 ;;				//1: {734:20} 794
	ld1.a	r19=[r16]				//2: {734:20} 795
	add	r15=4,r18				//2: {733:20} 791
 }
 {   .mii  //R-Addr: 0x3220
	add	r14=12,r18				//2: {736:20} 801
	add	r11=8,r18 ;;				//2: {735:20} 799
	shladd	r10=r19,2,r20				//3: {734:20} 797
 }
 {   .mmi  //R-Addr: 0x3230
	st4	[r15]=r24 ;;				//3: {733:20} 792
	ld4.s	r37=[r10]				//4: {734:20} 798
	nop.i	0
 }
 {   .mmi  //R-Addr: 0x3240
// Branch taken probability 0.05
	chk.a.clr	r19,.b1_798 ;;			//4: {734:20} 4073
// Block 813:  Pred: 383     Succ: 799 812  -GO
// Freq 9.9e-01
	cmp4.ge.unc	p12,p0=r37,r0			//5: {737:20} 804
// Branch taken probability 0.05
	chk.s	r37,.b1_799 ;;				//5: {734:20} 4080
// Block 812: lexit ltail  Pred: 826 813 799     Succ: 3 819  -GO
// Freq 1.0e+00
 }
.b1_812: 
 {   .mmi  //R-Addr: 0x3250
	st4	[r14]=r32 ;;				//0: {736:20} 802
	st4	[r11]=r37				//1: {735:20} 800
	nop.i	0
 }
 {   .mbb  //R-Addr: 0x3260
	ld4.c.clr	r17=[r44]			//1: {321:6} 4068
// Branch taken probability 0.80
  (p12)br.cond.dptk.many	.b1_3			//1: {737:20} 805
// Block 819:  Pred: 812     Succ: 2  -
// Freq 2.1e-01
	br.cond.sptk	.b1_2 ;;			//1: {737:20} 5549
// Block 87: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$42:
 {   .mii  //R-Addr: 0x3270
	nop.m	0
	nop.i	0
	sxt4	r3=r37					//0: {629:24} 765
 }
 {   .mmi  //R-Addr: 0x3280
	add	r37=4,r37				//0: {629:42} 781
	ld4	r17=[r44]				//0: {321:6} 782
	mov	r60=r32 ;;				//0: {629:17} 764
 }
 {   .mmi  //R-Addr: 0x3290
	add	r2=r63,r3 ;;				//1: {629:24} 766
	add	r30=1,r2				//2: {629:24} 774
	add	r29=3,r2				//2: {629:24} 767
 }
 {   .mii  //R-Addr: 0x32a0
	ld1	r28=[r2]				//2: {629:24} 778
	add	r27=2,r2				//2: {629:24} 770
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x32b0
	ld1	r26=[r29]				//3: {629:24} 768
	ld1	r25=[r27]				//3: {629:24} 771
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x32c0
	ld1	r24=[r30]				//4: {629:24} 775
	shl	r20=r26,8				//4: {629:24} 769
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x32d0
	or	r19=r20,r25 ;;				//5: {629:24} 772
	nop.m	0
	shl	r18=r19,8 ;;				//6: {629:24} 773
 }
 {   .mmi  //R-Addr: 0x32e0
	or	r16=r18,r24 ;;				//7: {629:24} 776
	nop.m	0
	shl	r15=r16,8 ;;				//8: {629:24} 777
 }
 {   .mmi  //R-Addr: 0x32f0
	or	r14=r15,r28 ;;				//9: {629:24} 779
	add	r32=r67,r14				//10: {629:24} 780
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3300
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//10: {321:6} 2881
// Block 86: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$41:
 {   .mii  //R-Addr: 0x3310
	nop.m	0
	nop.i	0
	sxt4	r26=r37					//0: {628:24} 754
 }
 {   .mmi  //R-Addr: 0x3320
	add	r37=2,r37				//0: {628:42} 762
	ld4	r17=[r44]				//0: {321:6} 763
	mov	r60=r32 ;;				//0: {628:17} 753
 }
 {   .mmi  //R-Addr: 0x3330
	add	r25=r63,r26 ;;				//1: {628:24} 755
	ld1	r24=[r25]				//2: {628:24} 759
	add	r20=1,r25 ;;				//2: {628:24} 756
 }
 {   .mmi  //R-Addr: 0x3340
	ld1	r19=[r20] ;;				//3: {628:24} 757
	nop.m	0
	shl	r18=r19,8 ;;				//4: {628:24} 758
 }
 {   .mmi  //R-Addr: 0x3350
	or	r16=r18,r24 ;;				//5: {628:24} 760
	add	r32=r67,r16				//6: {628:24} 761
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3360
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//6: {321:6} 2882
// Block 85: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$40:
 {   .mii  //R-Addr: 0x3370
	nop.m	0
	nop.i	0
	sxt4	r10=r37					//0: {627:24} 747
 }
 {   .mmi  //R-Addr: 0x3380
	add	r37=1,r37				//0: {627:32} 751
	ld4	r17=[r44]				//0: {321:6} 752
	mov	r60=r32 ;;				//0: {627:17} 746
 }
 {   .mmi  //R-Addr: 0x3390
	add	r9=r63,r10 ;;				//1: {627:24} 748
	ld1	r8=[r9]					//2: {627:24} 749
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x33a0
	add	r32=r67,r8				//3: {627:24} 750
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2883
// Block 84:  Pred: 21     Succ: 330 378  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$3f:
 {   .mib  //R-Addr: 0x33b0
	cmp4.ne.unc	p13,p0=r32,r0			//0: {816:18} 742
	nop.i	0
// Branch taken probability 0.50
  (p13)br.cond.dptk	.b1_330 ;;			//0: {816:18} 743
// Block 378: ltail  Pred: 84     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mib  //R-Addr: 0x33c0
	ld4	r17=[r44]				//0: {321:6} 745
	add	r37=1,r37				//0: {817:18} 744
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2884
// Block 83:  Pred: 21     Succ: 375 376  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$3e:
 {   .mib  //R-Addr: 0x33d0
	cmp4.eq.unc	p12,p0=r32,r0			//0: {814:18} 732
	sxt4	r24=r37					//0: {814:29} 736
// Branch taken probability 0.50
  (p12)br.cond.dptk	.b1_375 ;;			//0: {814:18} 733
// Block 376: ltail  Pred: 83     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mii  //R-Addr: 0x33e0
	ld4	r17=[r44]				//0: {321:6} 741
	add	r20=r63,r24				//0: {814:29} 737
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x33f0
	ld1	r19=[r20] ;;				//1: {814:29} 738
	nop.m	0
	sxt1	r18=r19 ;;				//2: {814:29} 739
 }
 {   .mib  //R-Addr: 0x3400
	add	r37=r37,r18				//3: {814:29} 740
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2885
// Block 375: ltail  Pred: 83     Succ: 3  -G
// Freq 5.8e-02
 }
.b1_375: 
 {   .mib  //R-Addr: 0x3410
	ld4	r17=[r44]				//0: {321:6} 735
	add	r37=1,r37				//0: {815:18} 734
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2886
// Block 82:  Pred: 21     Succ: 330 373  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$3d:
 {   .mib  //R-Addr: 0x3420
	cmp4.ne.unc	p10,p0=r60,r32			//0: {812:18} 728
	nop.i	0
// Branch taken probability 0.50
  (p10)br.cond.dptk	.b1_330 ;;			//0: {812:18} 729
// Block 373: ltail  Pred: 82     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mib  //R-Addr: 0x3430
	ld4	r17=[r44]				//0: {321:6} 731
	add	r37=1,r37				//0: {813:18} 730
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2887
// Block 81:  Pred: 21     Succ: 370 371  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$3c:
 {   .mib  //R-Addr: 0x3440
	cmp4.eq.unc	p9,p0=r60,r32			//0: {810:18} 718
	sxt4	r16=r37					//0: {810:29} 722
// Branch taken probability 0.50
  (p9)	br.cond.dptk	.b1_370 ;;			//0: {810:18} 719
// Block 371: ltail  Pred: 81     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mii  //R-Addr: 0x3450
	ld4	r17=[r44]				//0: {321:6} 727
	add	r15=r63,r16				//0: {810:29} 723
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x3460
	ld1	r14=[r15] ;;				//1: {810:29} 724
	nop.m	0
	sxt1	r11=r14 ;;				//2: {810:29} 725
 }
 {   .mib  //R-Addr: 0x3470
	add	r37=r37,r11				//3: {810:29} 726
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2888
// Block 370: ltail  Pred: 81     Succ: 3  -G
// Freq 5.8e-02
 }
.b1_370: 
 {   .mib  //R-Addr: 0x3480
	ld4	r17=[r44]				//0: {321:6} 721
	add	r37=1,r37				//0: {811:18} 720
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2889
// Block 80: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$3b:
 {   .mii  //R-Addr: 0x3490
	mov	r60=r32					//0: {664:17} 712
	extr	r15=r37,1,31				//0: {662:17} 703
	sxt4	r14=r37					//0: {662:17} 704
 }
 {   .mmb  //R-Addr: 0x34a0
	add	r37=1,r37				//0: {664:50} 716
	ld4	r17=[r44]				//0: {321:6} 717
	nop.b	0 ;;
 }
 {   .mmi  //R-Addr: 0x34b0
	add	r11=r63,r14 ;;				//1: {662:17} 705
	ld1	r10=[r11]				//2: {662:17} 706
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x34c0
	add	r9=r15,r10 ;;				//3: {662:17} 707
	shladd	r8=r9,1,r63				//4: {663:17} 708
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x34d0
	ld2	r3=[r8] ;;				//5: {663:17} 709
	nop.m	0
	sxt2	r2=r3 ;;				//6: {663:17} 710
 }
 {   .mmi  //R-Addr: 0x34e0
	shladd	r30=r9,1,r2 ;;				//7: {663:17} 711
	nop.m	0
	extr	r29=r30,2,30 ;;				//8: {664:24} 713
 }
 {   .mmi  //R-Addr: 0x34f0
	shladd	r28=r29,2,r63 ;;			//9: {664:24} 714
	ld4	r32=[r28]				//10: {664:24} 715
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3500
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//10: {321:6} 2890
// Block 79: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$3a:
 {   .mii  //R-Addr: 0x3510
	ld4	r17=[r44]				//0: {321:6} 702
	sxt4	r20=r37					//0: {666:24} 693
	mov	r60=r32 ;;				//0: {666:17} 692
 }
 {   .mmi  //R-Addr: 0x3520
	add	r19=r63,r20 ;;				//1: {666:24} 694
	ld1	r18=[r19]				//2: {666:24} 695
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x3530
	nop.m	0
	sxt1	r16=r18					//3: {666:24} 696
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x3540
	add	r15=r37,r16				//4: {666:24} 697
	add	r37=1,r37 ;;				//4: {666:50} 701
	extr	r14=r15,2,30 ;;				//5: {666:24} 698
 }
 {   .mmi  //R-Addr: 0x3550
	shladd	r11=r14,2,r63 ;;			//6: {666:24} 699
	ld4	r32=[r11]				//7: {666:24} 700
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3560
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//7: {321:6} 2891
// Block 78: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$39:
 {   .mii  //R-Addr: 0x3570
	ld4.a	r17=[r44]				//0: {321:6} 691
	extr	r27=r37,1,31				//0: {668:17} 678
	sxt4	r26=r37					//0: {668:17} 679
 }
 {   .mmi  //R-Addr: 0x3580
	add	r37=1,r37 ;;				//0: {670:50} 690
	add	r25=r63,r26				//1: {668:17} 680
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x3590
	ld1	r24=[r25] ;;				//2: {668:17} 681
	add	r20=r27,r24				//3: {668:17} 682
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x35a0
	shladd	r19=r20,1,r63 ;;			//4: {669:17} 683
	ld2	r18=[r19]				//5: {669:17} 684
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x35b0
	nop.m	0
	sxt2	r16=r18					//6: {669:17} 685
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x35c0
	shladd	r15=r20,1,r16 ;;			//7: {669:17} 686
	nop.m	0
	extr	r14=r15,2,30 ;;				//8: {670:17} 687
 }
 {   .mmi  //R-Addr: 0x35d0
	shladd	r11=r14,2,r63 ;;			//9: {670:17} 688
	st4	[r11]=r32				//10: {670:17} 689
	nop.i	0
 }
 {   .mib  //R-Addr: 0x35e0
	ld4.c.clr	r17=[r44]			//10: {321:6} 3956
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//10: {321:6} 2892
// Block 77: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$38:
 {   .mii  //R-Addr: 0x35f0
	ld4.a	r17=[r44]				//0: {321:6} 677
	sxt4	r30=r37					//0: {672:17} 668
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x3600
	add	r29=r63,r30 ;;				//1: {672:17} 669
	ld1	r28=[r29]				//2: {672:17} 670
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x3610
	nop.m	0
	sxt1	r27=r28					//3: {672:17} 671
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x3620
	add	r26=r37,r27				//4: {672:17} 672
	add	r37=1,r37 ;;				//4: {672:50} 676
	extr	r25=r26,2,30 ;;				//5: {672:17} 673
 }
 {   .mmi  //R-Addr: 0x3630
	shladd	r24=r25,2,r63 ;;			//6: {672:17} 674
	st4	[r24]=r32				//7: {672:17} 675
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3640
	ld4.c.clr	r17=[r44]			//7: {321:6} 3942
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//7: {321:6} 2893
// Block 76: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$37:
 {   .mib  //R-Addr: 0x3650
	ld4	r17=[r44]				//0: {321:6} 667
	xor	r32=r60,r32				//0: {499:18} 666
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2894
// Block 75: lexit  Pred: 21     Succ: 363 362  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$36:
 {   .mii  //R-Addr: 0x3660
	add	r8=65501,r0				//0: {485:18} 648
	sxt4	r10=r32					//0: {485:18} 639
	sxt4	r9=r60					//0: {485:18} 638
 }
 {   .mmb  //R-Addr: 0x3670
	setf.sig	f7=r32				//0: {485:18} 637
	cmp4.eq.unc	p6,p0=r32,r0			//0: {484:18} 635
// Branch taken probability 0.20
  (p6)	br.cond.dpnt	.b1_363 ;;			//0: {484:18} 636
// Block 362: ltail collapsed  Pred: 75     Succ: 3  -G
// Freq 9.3e-02
 }
 {   .mmi  //R-Addr: 0x3680
	setf.sig	f8=r10				//0: {485:18} 644
	setf.sig	f6=r9				//0: {485:18} 643
	cmp.ne.unc	p0,p8=0,r10 ;;			//0: {485:18} 2649
 }
 {   .mii  //R-Addr: 0x3690
	setf.exp	f32=r8				//1: {485:18} 649
  (p8)	break	1					//1: {485:18} 642
	nop.i	0
 }
 {   .mmb  //R-Addr: 0x36a0
	ld4	r17=[r44]				//1: {321:6} 663
	nop.m	0
	nop.b	0 ;;
 }
 {   .mfi  //R-Addr: 0x36b0
	nop.m	0
	fcvt.xf	f15=f8					//6: {485:18} 646
	nop.i	0
 }
 {   .mfi  //R-Addr: 0x36c0
	nop.m	0
	fcvt.xf	f14=f6					//6: {485:18} 645
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x36d0
	nop.m	0
	frcpa.s1	f13,p7=f14,f15			//10: {485:18} 647
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x36e0
	nop.m	0
  (p7)	fnma.s1	f12=f15,f13,f1				//14: {485:18} 651
	nop.i	0
 }
 {   .mfi  //R-Addr: 0x36f0
	nop.m	0
  (p7)	fma.s1	f11=f14,f13,f0				//14: {485:18} 650
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x3700
	nop.m	0
  (p7)	fma.s1	f10=f12,f12,f32				//18: {485:18} 653
	nop.i	0
 }
 {   .mfi  //R-Addr: 0x3710
	nop.m	0
  (p7)	fma.s1	f9=f12,f11,f11				//18: {485:18} 652
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x3720
	nop.m	0
  (p7)	fma.s1	f13=f10,f9,f9				//22: {485:18} 654
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x3730
	nop.m	0
	fcvt.fx.trunc.s1	f8=f13			//26: {485:18} 657
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x3740
	nop.m	0
	xma.l	f6=f7,f8,f0				//30: {485:18} 660
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x3750
	getf.sig	r3=f6 ;;			//34: {485:18} 661
	sub	r32=r60,r3				//39: {485:18} 662
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3760
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//39: {321:6} 2895
// Block 74: lexit  Pred: 21     Succ: 360 359  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$35:
 {   .mii  //R-Addr: 0x3770
	add	r29=65501,r0				//0: {483:18} 621
	sxt4	r2=r32					//0: {483:18} 612
	sxt4	r30=r60					//0: {483:18} 611
 }
 {   .mmb  //R-Addr: 0x3780
	cmp4.eq.unc	p13,p0=r32,r0			//0: {482:18} 609
	nop.m	0
// Branch taken probability 0.20
  (p13)br.cond.dpnt	.b1_360 ;;			//0: {482:18} 610
// Block 359: ltail collapsed  Pred: 74     Succ: 3  -G
// Freq 9.3e-02
 }
 {   .mmi  //R-Addr: 0x3790
	setf.sig	f32=r2				//0: {483:18} 617
	setf.sig	f15=r30				//0: {483:18} 616
	cmp.ne.unc	p0,p15=0,r2 ;;			//0: {483:18} 2650
 }
 {   .mii  //R-Addr: 0x37a0
	setf.exp	f14=r29				//1: {483:18} 622
  (p15)break	1					//1: {483:18} 615
	nop.i	0
 }
 {   .mmb  //R-Addr: 0x37b0
	ld4	r17=[r44]				//1: {321:6} 632
	nop.m	0
	nop.b	0 ;;
 }
 {   .mfi  //R-Addr: 0x37c0
	nop.m	0
	fcvt.xf	f13=f32					//6: {483:18} 619
	nop.i	0
 }
 {   .mfi  //R-Addr: 0x37d0
	nop.m	0
	fcvt.xf	f12=f15					//6: {483:18} 618
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x37e0
	nop.m	0
	frcpa.s1	f11,p14=f12,f13			//10: {483:18} 620
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x37f0
	nop.m	0
  (p14)fnma.s1	f10=f13,f11,f1				//14: {483:18} 624
	nop.i	0
 }
 {   .mfi  //R-Addr: 0x3800
	nop.m	0
  (p14)fma.s1	f9=f12,f11,f0				//14: {483:18} 623
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x3810
	nop.m	0
  (p14)fma.s1	f8=f10,f10,f14				//18: {483:18} 626
	nop.i	0
 }
 {   .mfi  //R-Addr: 0x3820
	nop.m	0
  (p14)fma.s1	f7=f10,f9,f9				//18: {483:18} 625
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x3830
	nop.m	0
  (p14)fma.s1	f11=f8,f7,f7				//22: {483:18} 627
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x3840
	nop.m	0
	fcvt.fx.trunc.s1	f6=f11			//26: {483:18} 630
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x3850
	getf.sig	r32=f6				//30: {483:18} 631
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//30: {321:6} 2896
// Block 73: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$34:
 {   .mii  //R-Addr: 0x3860
	setf.sig	f8=r60				//0: {481:18} 605
	nop.i	0
	nop.i	0
 }
 {   .mmb  //R-Addr: 0x3870
	setf.sig	f7=r32				//0: {481:18} 604
	ld4	r17=[r44]				//0: {321:6} 608
	nop.b	0 ;;
 }
 {   .mfi  //R-Addr: 0x3880
	nop.m	0
	xma.l	f6=f7,f8,f0				//6: {481:18} 606
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x3890
	getf.sig	r32=f6				//10: {481:18} 607
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//10: {321:6} 2897
// Block 72: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$33:
 {   .mii  //R-Addr: 0x38a0
	nop.m	0
	nop.i	0
	sxt4	r10=r37					//0: {878:18} 595
 }
 {   .mmi  //R-Addr: 0x38b0
	add	r37=1,r37				//0: {878:28} 602
	ld4	r17=[r44]				//0: {321:6} 603
	sxt4	r9=r47 ;;				//0: {878:18} 598
 }
 {   .mmi  //R-Addr: 0x38c0
	add	r8=r63,r10 ;;				//1: {878:18} 596
	ld1	r3=[r8]					//2: {878:18} 597
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x38d0
	shladd	r2=r3,2,r9 ;;				//3: {878:18} 599
	ld4	r30=[r2]				//4: {878:18} 600
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x38e0
	add	r32=r32,r30				//5: {878:18} 601
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//5: {321:6} 2898
// Block 71: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$32:
 {   .mii  //R-Addr: 0x38f0
	nop.m	0
	nop.i	0
	sxt4	r8=r37					//0: {660:24} 589
 }
 {   .mmi  //R-Addr: 0x3900
	add	r37=1,r37				//0: {660:32} 593
	ld4	r17=[r44]				//0: {321:6} 594
	mov	r60=r32 ;;				//0: {660:17} 588
 }
 {   .mmi  //R-Addr: 0x3910
	add	r3=r63,r8 ;;				//1: {660:24} 590
	ld1	r2=[r3]					//2: {660:24} 591
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x3920
	add	r32=r55,r2				//3: {660:24} 592
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2899
// Block 70: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$31:
 {   .mii  //R-Addr: 0x3930
	nop.m	0
	nop.i	0
	sxt4	r29=r37					//0: {656:18} 580
 }
 {   .mmi  //R-Addr: 0x3940
	add	r37=1,r37				//0: {656:23} 586
	ld4.a	r17=[r44]				//0: {321:6} 587
	sxt4	r28=r47 ;;				//0: {656:18} 583
 }
 {   .mmi  //R-Addr: 0x3950
	add	r27=r63,r29 ;;				//1: {656:18} 581
	ld1	r26=[r27]				//2: {656:18} 582
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x3960
	shladd	r25=r26,2,r28 ;;			//3: {656:18} 584
	st4	[r25]=r32				//4: {656:18} 585
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3970
	ld4.c.clr	r17=[r44]			//4: {321:6} 3896
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2900
// Block 69: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$30:
 {   .mii  //R-Addr: 0x3980
	mov	r60=r32					//0: {652:18} 571
	sxt4	r15=r37					//0: {652:25} 572
	sxt4	r14=r47					//0: {652:25} 575
 }
 {   .mmb  //R-Addr: 0x3990
	add	r37=1,r37				//0: {652:34} 578
	ld4	r17=[r44]				//0: {321:6} 579
	nop.b	0 ;;
 }
 {   .mmi  //R-Addr: 0x39a0
	add	r11=r63,r15 ;;				//1: {652:25} 573
	ld1	r10=[r11]				//2: {652:25} 574
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x39b0
	shladd	r9=r10,2,r14 ;;				//3: {652:25} 576
	ld4	r32=[r9]				//4: {652:25} 577
	nop.i	0
 }
 {   .mib  //R-Addr: 0x39c0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2901
// Block 68: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$2f:
 {   .mii  //R-Addr: 0x39d0
	mov	r60=r32					//0: {932:18} 559
	sxt4	r24=r37					//0: {932:25} 560
	sxt4	r20=r47					//0: {932:25} 563
 }
 {   .mmb  //R-Addr: 0x39e0
	add	r37=1,r37				//0: {932:36} 569
	ld4	r17=[r44]				//0: {321:6} 570
	nop.b	0 ;;
 }
 {   .mmi  //R-Addr: 0x39f0
	add	r19=r63,r24 ;;				//1: {932:25} 561
	ld1	r18=[r19]				//2: {932:25} 562
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x3a00
	shladd	r16=r18,2,r20 ;;			//3: {932:25} 564
	ld4	r15=[r16]				//4: {932:25} 565
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x3a10
	shladd	r14=r15,2,r63 ;;			//5: {932:25} 566
	add	r11=8,r14				//6: {932:25} 567
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x3a20
	ld4	r32=[r11]				//7: {932:25} 568
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//7: {321:6} 2902
// Block 67: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$2e:
 {   .mii  //R-Addr: 0x3a30
	mov	r60=r32					//0: {931:18} 547
	sxt4	r27=r37					//0: {931:25} 548
	sxt4	r26=r47					//0: {931:25} 551
 }
 {   .mmb  //R-Addr: 0x3a40
	add	r37=1,r37				//0: {931:36} 557
	ld4	r17=[r44]				//0: {321:6} 558
	nop.b	0 ;;
 }
 {   .mmi  //R-Addr: 0x3a50
	add	r25=r63,r27 ;;				//1: {931:25} 549
	ld1	r24=[r25]				//2: {931:25} 550
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x3a60
	shladd	r20=r24,2,r26 ;;			//3: {931:25} 552
	ld4	r19=[r20]				//4: {931:25} 553
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x3a70
	shladd	r18=r19,2,r63 ;;			//5: {931:25} 554
	add	r16=4,r18				//6: {931:25} 555
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x3a80
	ld4	r32=[r16]				//7: {931:25} 556
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//7: {321:6} 2903
// Block 66: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$2d:
 {   .mii  //R-Addr: 0x3a90
	mov	r60=r32					//0: {930:18} 536
	sxt4	r10=r37					//0: {930:25} 537
	sxt4	r9=r47					//0: {930:25} 540
 }
 {   .mmb  //R-Addr: 0x3aa0
	add	r37=1,r37				//0: {930:36} 545
	ld4	r17=[r44]				//0: {321:6} 546
	nop.b	0 ;;
 }
 {   .mmi  //R-Addr: 0x3ab0
	add	r8=r63,r10 ;;				//1: {930:25} 538
	ld1	r3=[r8]					//2: {930:25} 539
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x3ac0
	shladd	r2=r3,2,r9 ;;				//3: {930:25} 541
	ld4	r30=[r2]				//4: {930:25} 542
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x3ad0
	shladd	r29=r30,2,r63 ;;			//5: {930:25} 543
	ld4	r32=[r29]				//6: {930:25} 544
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3ae0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//6: {321:6} 2904
// Block 65: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$2c:
 {   .mii  //R-Addr: 0x3af0
	nop.m	0
	nop.i	0
	sxt4	r9=r37					//0: {936:18} 526
 }
 {   .mmi  //R-Addr: 0x3b00
	add	r37=1,r37				//0: {936:25} 534
	ld4.a	r17=[r44]				//0: {321:6} 535
	sxt4	r8=r47 ;;				//0: {936:18} 529
 }
 {   .mmi  //R-Addr: 0x3b10
	add	r3=r63,r9 ;;				//1: {936:18} 527
	ld1	r2=[r3]					//2: {936:18} 528
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x3b20
	shladd	r30=r2,2,r8 ;;				//3: {936:18} 530
	ld4	r29=[r30]				//4: {936:18} 531
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x3b30
	shladd	r28=r29,2,r63 ;;			//5: {936:18} 532
	st4	[r28]=r32				//6: {936:18} 533
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3b40
	ld4.c.clr	r17=[r44]			//6: {321:6} 3845
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//6: {321:6} 2905
// Block 64:  Pred: 21     Succ: 340  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$2b:
 {   .mmi  //R-Addr: 0x3b50
	shladd	r14=r67,2,r0				//0: {740:19} 521
	add	r67=11,r67				//0: {740:38} 525
	sxt4	r11=r66 ;;				//0: {740:19} 522
 }
 {   .mmi  //R-Addr: 0x3b60
	add	r10=44,r11 ;;				//1: {740:19} 523
	st4	[r10]=r14				//2: {740:19} 524
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3b70
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_340 ;;		//2: {740:38} 2906
// Block 63:  Pred: 21     Succ: 340  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$2a:
 {   .mmi  //R-Addr: 0x3b80
	shladd	r15=r67,2,r0				//0: {741:19} 516
	add	r67=10,r67				//0: {741:38} 520
	sxt4	r14=r66 ;;				//0: {741:19} 517
 }
 {   .mmi  //R-Addr: 0x3b90
	add	r11=40,r14 ;;				//1: {741:19} 518
	st4	[r11]=r15				//2: {741:19} 519
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3ba0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_340 ;;		//2: {741:38} 2907
// Block 62:  Pred: 21     Succ: 340  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$29:
 {   .mmi  //R-Addr: 0x3bb0
	shladd	r17=r67,2,r0				//0: {742:19} 511
	add	r67=9,r67				//0: {742:38} 515
	sxt4	r16=r66 ;;				//0: {742:19} 512
 }
 {   .mmi  //R-Addr: 0x3bc0
	add	r15=36,r16 ;;				//1: {742:19} 513
	st4	[r15]=r17				//2: {742:19} 514
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3bd0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_340 ;;		//2: {742:38} 2908
// Block 61:  Pred: 21     Succ: 340  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$28:
 {   .mmi  //R-Addr: 0x3be0
	shladd	r10=r67,2,r0				//0: {743:19} 506
	add	r67=8,r67				//0: {743:38} 510
	sxt4	r9=r66 ;;				//0: {743:19} 507
 }
 {   .mmi  //R-Addr: 0x3bf0
	add	r8=32,r9 ;;				//1: {743:19} 508
	st4	[r8]=r10				//2: {743:19} 509
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3c00
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_340 ;;		//2: {743:38} 2909
// Block 60:  Pred: 21     Succ: 340  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$27:
 {   .mmi  //R-Addr: 0x3c10
	shladd	r20=r67,2,r0				//0: {744:19} 501
	add	r67=7,r67				//0: {744:38} 505
	sxt4	r19=r66 ;;				//0: {744:19} 502
 }
 {   .mmi  //R-Addr: 0x3c20
	add	r18=28,r19 ;;				//1: {744:19} 503
	st4	[r18]=r20				//2: {744:19} 504
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3c30
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_340 ;;		//2: {744:38} 2910
// Block 59:  Pred: 21     Succ: 340  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$26:
 {   .mmi  //R-Addr: 0x3c40
	shladd	r3=r67,2,r0				//0: {745:19} 496
	add	r67=6,r67				//0: {745:38} 500
	sxt4	r2=r66 ;;				//0: {745:19} 497
 }
 {   .mmi  //R-Addr: 0x3c50
	add	r30=24,r2 ;;				//1: {745:19} 498
	st4	[r30]=r3				//2: {745:19} 499
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3c60
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_340 ;;		//2: {745:38} 2911
// Block 58:  Pred: 21     Succ: 340  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$25:
 {   .mmi  //R-Addr: 0x3c70
	shladd	r26=r67,2,r0				//0: {746:19} 491
	add	r67=5,r67				//0: {746:38} 495
	sxt4	r25=r66 ;;				//0: {746:19} 492
 }
 {   .mmi  //R-Addr: 0x3c80
	add	r24=20,r25 ;;				//1: {746:19} 493
	st4	[r24]=r26				//2: {746:19} 494
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3c90
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_340 ;;		//2: {746:38} 2912
// Block 57:  Pred: 21     Succ: 340  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$24:
 {   .mmi  //R-Addr: 0x3ca0
	shladd	r29=r67,2,r0				//0: {747:19} 486
	add	r67=4,r67				//0: {747:38} 490
	sxt4	r28=r66 ;;				//0: {747:19} 487
 }
 {   .mmi  //R-Addr: 0x3cb0
	add	r27=16,r28 ;;				//1: {747:19} 488
	st4	[r27]=r29				//2: {747:19} 489
	nop.i	0
 }
 {   .mib  //R-Addr: 0x3cc0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_340 ;;		//2: {747:38} 2913
// Block 56:  Pred: 21     Succ: 340  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$23:
 {   .mmi  //R-Addr: 0x3cd0
	shladd	r29=r67,2,r0				//0: {748:19} 463
	add	r67=3,r67				//0: {748:38} 467
	sxt4	r28=r66 ;;				//0: {748:19} 464
 }
 {   .mmi  //R-Addr: 0x3ce0
	add	r27=12,r28 ;;				//1: {748:19} 465
	st4	[r27]=r29				//2: {748:19} 466
	nop.i	0 ;;
// Block 340:  Pred: 63 62 61 60 59 58 57 56 64     Succ: 800 815  -GO
// Freq 1.0e+00
 }
.b1_340: 
 {   .mmi  //R-Addr: 0x3cf0
	shladd	r66=r67,2,r33				//0: {749:19} 468
	add	r28=1,r37				//0: {750:19} 470
	sxt4	r26=r37					//0: {751:19} 473
 }
 {   .mii  //R-Addr: 0x3d00
	ld4.a	r17=[r44]				//0: {321:6} 483
	sxt4	r27=r47 ;;				//0: {751:19} 476
	sxt4	r25=r66					//1: {750:19} 469
 }
 {   .mmi  //R-Addr: 0x3d10
	add	r24=r63,r26 ;;				//1: {751:19} 474
	ld1.a	r15=[r24]				//2: {751:19} 475
	add	r20=4,r25				//2: {750:19} 471
 }
 {   .mii  //R-Addr: 0x3d20
	add	r19=12,r25				//2: {753:19} 481
	add	r18=8,r25 ;;				//2: {752:19} 479
	shladd	r16=r15,2,r27				//3: {751:19} 477
 }
 {   .mmi  //R-Addr: 0x3d30
	st4	[r20]=r28 ;;				//3: {750:19} 472
	ld4.s	r37=[r16]				//4: {751:19} 478
	nop.i	0
 }
 {   .mmi  //R-Addr: 0x3d40
// Branch taken probability 0.05
	chk.a.clr	r15,.b1_800 ;;			//4: {751:19} 3814
// Block 815:  Pred: 340     Succ: 801 814  -GO
// Freq 9.9e-01
	cmp4.ge.unc	p10,p0=r37,r0			//5: {754:19} 484
// Branch taken probability 0.05
	chk.s	r37,.b1_801 ;;				//5: {751:19} 3821
// Block 814: lexit ltail  Pred: 827 815 801     Succ: 3 820  -GO
// Freq 1.0e+00
 }
.b1_814: 
 {   .mmi  //R-Addr: 0x3d50
	st4	[r19]=r32 ;;				//0: {753:19} 482
	st4	[r18]=r37				//1: {752:19} 480
	nop.i	0
 }
 {   .mbb  //R-Addr: 0x3d60
	ld4.c.clr	r17=[r44]			//1: {321:6} 3809
// Branch taken probability 0.80
  (p10)br.cond.dptk.many	.b1_3			//1: {754:19} 485
// Block 820:  Pred: 814     Succ: 2  -
// Freq 2.1e-01
	br.cond.sptk	.b1_2 ;;			//1: {754:19} 5550
// Block 55: lexit ltail  Pred: 21     Succ: 3 821  -GO
// Freq 1.2e-01
 }
$$1$1_0$TAG$22:
 {   .mmi  //R-Addr: 0x3d70
	shladd	r26=r67,2,r0				//0: {792:31} 444
	ld4.a	r17=[r44]				//0: {321:6} 460
	sxt4	r25=r37					//0: {792:19} 429
 }
 {   .mmi  //R-Addr: 0x3d80
	add	r72=4,r37				//0: {794:19} 451
	mov	r37=r32					//0: {795:19} 454
	sxt4	r24=r66 ;;				//0: {792:31} 445
 }
 {   .mii  //R-Addr: 0x3d90
	add	r20=r63,r25				//1: {792:19} 430
	cmp4.ge.unc	p9,p0=r32,r0 ;;			//1: {798:19} 461
	add	r19=3,r20				//2: {792:19} 431
 }
 {   .mmi  //R-Addr: 0x3da0
	add	r18=1,r20				//2: {792:19} 438
	ld1	r16=[r20]				//2: {792:19} 442
	add	r15=2,r20 ;;				//2: {792:19} 434
 }
 {   .mmi  //R-Addr: 0x3db0
	ld1	r14=[r19]				//3: {792:19} 432
	ld1	r11=[r15]				//3: {792:19} 435
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x3dc0
	ld1	r10=[r18]				//4: {792:19} 439
	shl	r9=r14,8				//4: {792:19} 433
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x3dd0
	or	r8=r9,r11 ;;				//5: {792:19} 436
	nop.m	0
	shl	r3=r8,8 ;;				//6: {792:19} 437
 }
 {   .mmi  //R-Addr: 0x3de0
	or	r2=r3,r10 ;;				//7: {792:19} 440
	nop.m	0
	shl	r30=r2,8 ;;				//8: {792:19} 441
 }
 {   .mmi  //R-Addr: 0x3df0
	or	r29=r30,r16 ;;				//9: {792:19} 443
	add	r67=r67,r29				//10: {792:49} 448
	shladd	r28=r29,2,r24 ;;			//10: {792:31} 446
 }
 {   .mii  //R-Addr: 0x3e00
	st4	[r28]=r26				//11: {792:31} 447
	shladd	r66=r67,2,r33 ;;			//11: {793:19} 449
	sxt4	r27=r66 ;;				//12: {794:19} 450
 }
 {   .mii  //R-Addr: 0x3e10
	add	r26=12,r27				//13: {797:19} 458
	add	r24=4,r27				//13: {794:19} 452
	add	r25=8,r27 ;;				//13: {796:19} 455
 }
 {   .mmi  //R-Addr: 0x3e20
	st4	[r24]=r72				//14: {794:19} 453
	st4	[r26]=r60				//14: {797:19} 459
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x3e30
	st4	[r25]=r32				//15: {796:19} 456
	mov	r32=r60					//15: {797:27} 457
	nop.i	0
 }
 {   .mbb  //R-Addr: 0x3e40
	ld4.c.clr	r17=[r44]			//15: {321:6} 3740
// Branch taken probability 0.80
  (p9)	br.cond.dptk.many	.b1_3			//15: {798:19} 462
// Block 821:  Pred: 55     Succ: 2  -
// Freq 2.3e-02
	br.cond.sptk	.b1_2 ;;			//15: {798:19} 5551
// Block 54: lexit ltail  Pred: 21     Succ: 3 822  -GO
// Freq 1.2e-01
 }
$$1$1_0$TAG$21:
 {   .mmi  //R-Addr: 0x3e50
	shladd	r25=r67,2,r0				//0: {783:31} 410
	ld4.a	r17=[r44]				//0: {321:6} 426
	sxt4	r20=r37					//0: {783:19} 403
 }
 {   .mmi  //R-Addr: 0x3e60
	add	r24=2,r37				//0: {785:19} 417
	mov	r37=r32					//0: {786:19} 420
	sxt4	r19=r66 ;;				//0: {783:31} 411
 }
 {   .mii  //R-Addr: 0x3e70
	add	r18=r63,r20				//1: {783:19} 404
	cmp4.ge.unc	p15,p0=r32,r0 ;;		//1: {789:19} 427
	add	r16=1,r18				//2: {783:19} 405
 }
 {   .mmi  //R-Addr: 0x3e80
	ld1	r15=[r18] ;;				//2: {783:19} 408
	ld1	r14=[r16]				//3: {783:19} 406
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x3e90
	nop.m	0
	shl	r11=r14,8				//4: {783:19} 407
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x3ea0
	or	r10=r11,r15 ;;				//5: {783:19} 409
	add	r67=r67,r10				//6: {783:49} 414
	shladd	r9=r10,2,r19 ;;				//6: {783:31} 412
 }
 {   .mii  //R-Addr: 0x3eb0
	st4	[r9]=r25				//7: {783:31} 413
	shladd	r66=r67,2,r33 ;;			//7: {784:19} 415
	sxt4	r8=r66 ;;				//8: {785:19} 416
 }
 {   .mii  //R-Addr: 0x3ec0
	add	r3=12,r8				//9: {788:19} 424
	add	r30=4,r8				//9: {785:19} 418
	add	r2=8,r8 ;;				//9: {787:19} 421
 }
 {   .mmi  //R-Addr: 0x3ed0
	st4	[r30]=r24				//10: {785:19} 419
	st4	[r3]=r60				//10: {788:19} 425
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x3ee0
	st4	[r2]=r32				//11: {787:19} 422
	mov	r32=r60					//11: {788:27} 423
	nop.i	0
 }
 {   .mbb  //R-Addr: 0x3ef0
	ld4.c.clr	r17=[r44]			//11: {321:6} 3723
// Branch taken probability 0.80
  (p15)br.cond.dptk.many	.b1_3			//11: {789:19} 428
// Block 822:  Pred: 54     Succ: 2  -
// Freq 2.3e-02
	br.cond.sptk	.b1_2 ;;			//11: {789:19} 5552
// Block 53: lexit ltail  Pred: 21     Succ: 3 823  -GO
// Freq 1.2e-01
 }
$$1$1_0$TAG$20:
 {   .mmi  //R-Addr: 0x3f00
	shladd	r20=r67,2,r0				//0: {774:30} 384
	ld4.a	r17=[r44]				//0: {321:6} 400
	sxt4	r18=r37					//0: {774:19} 381
 }
 {   .mmi  //R-Addr: 0x3f10
	add	r19=1,r37				//0: {776:19} 391
	mov	r37=r32					//0: {777:19} 394
	sxt4	r16=r66 ;;				//0: {774:30} 385
 }
 {   .mii  //R-Addr: 0x3f20
	add	r15=r63,r18				//1: {774:19} 382
	cmp4.ge.unc	p8,p0=r32,r0			//1: {780:19} 401
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x3f30
	ld1	r14=[r15] ;;				//2: {774:19} 383
	add	r67=r67,r14				//3: {774:48} 388
	shladd	r11=r14,2,r16 ;;			//3: {774:30} 386
 }
 {   .mii  //R-Addr: 0x3f40
	st4	[r11]=r20				//4: {774:30} 387
	shladd	r66=r67,2,r33 ;;			//4: {775:19} 389
	sxt4	r10=r66 ;;				//5: {776:19} 390
 }
 {   .mii  //R-Addr: 0x3f50
	add	r9=12,r10				//6: {779:19} 398
	add	r3=4,r10				//6: {776:19} 392
	add	r8=8,r10 ;;				//6: {778:19} 395
 }
 {   .mmi  //R-Addr: 0x3f60
	st4	[r3]=r19				//7: {776:19} 393
	st4	[r9]=r60				//7: {779:19} 399
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x3f70
	st4	[r8]=r32				//8: {778:19} 396
	mov	r32=r60					//8: {779:27} 397
	nop.i	0
 }
 {   .mbb  //R-Addr: 0x3f80
	ld4.c.clr	r17=[r44]			//8: {321:6} 3706
// Branch taken probability 0.80
  (p8)	br.cond.dptk.many	.b1_3			//8: {780:19} 402
// Block 823:  Pred: 53     Succ: 2  -
// Freq 2.3e-02
	br.cond.sptk	.b1_2 ;;			//8: {780:19} 5553
// Block 52:  Pred: 21     Succ: 330 335  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$1f:
 {   .mib  //R-Addr: 0x3f90
	cmp4.eq.unc	p12,p0=r32,r0			//0: {807:18} 377
	nop.i	0
// Branch taken probability 0.50
  (p12)br.cond.dptk	.b1_330 ;;			//0: {807:18} 378
// Block 335: ltail  Pred: 52     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mib  //R-Addr: 0x3fa0
	ld4	r17=[r44]				//0: {321:6} 380
	add	r37=1,r37				//0: {808:18} 379
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2918
// Block 51:  Pred: 21     Succ: 332 333  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$1e:
 {   .mib  //R-Addr: 0x3fb0
	cmp4.ne.unc	p10,p0=r32,r0			//0: {805:18} 367
	sxt4	r28=r37					//0: {805:29} 371
// Branch taken probability 0.50
  (p10)br.cond.dptk	.b1_332 ;;			//0: {805:18} 368
// Block 333: ltail  Pred: 51     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mii  //R-Addr: 0x3fc0
	ld4	r17=[r44]				//0: {321:6} 376
	add	r27=r63,r28				//0: {805:29} 372
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x3fd0
	ld1	r26=[r27] ;;				//1: {805:29} 373
	nop.m	0
	sxt1	r25=r26 ;;				//2: {805:29} 374
 }
 {   .mib  //R-Addr: 0x3fe0
	add	r37=r37,r25				//3: {805:29} 375
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2919
// Block 332: ltail  Pred: 51     Succ: 3  -G
// Freq 5.8e-02
 }
.b1_332: 
 {   .mib  //R-Addr: 0x3ff0
	ld4	r17=[r44]				//0: {321:6} 370
	add	r37=1,r37				//0: {806:18} 369
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2920
// Block 50:  Pred: 21     Succ: 329 330  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$1d:
 {   .mib  //R-Addr: 0x4000
	cmp4.ne.unc	p9,p0=r60,r32			//0: {803:18} 353
	nop.i	0
// Branch taken probability 0.50
  (p9)	br.cond.dptk	.b1_329 ;;			//0: {803:18} 354
// Block 330: ltail  Pred: 21 50 52 82 84 114 116 146 148 178 180 210 212     Succ: 3  -G
// Freq 8.1e-01
 }
.b1_330: 
$$1$1_0$TAG$bb:
 {   .mii  //R-Addr: 0x4010
	ld4	r17=[r44]				//0: {321:6} 366
	extr	r30=r37,1,31				//0: {858:18} 357
	sxt4	r29=r37 ;;				//0: {858:18} 358
 }
 {   .mmi  //R-Addr: 0x4020
	add	r28=r63,r29 ;;				//1: {858:18} 359
	ld1	r27=[r28]				//2: {858:18} 360
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x4030
	add	r26=r30,r27 ;;				//3: {858:18} 361
	shladd	r25=r26,1,r63				//4: {859:18} 362
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x4040
	ld2	r24=[r25] ;;				//5: {859:18} 363
	nop.m	0
	sxt2	r20=r24 ;;				//6: {859:18} 364
 }
 {   .mib  //R-Addr: 0x4050
	shladd	r37=r26,1,r20				//7: {859:18} 365
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//7: {321:6} 2921
// Block 329: ltail  Pred: 50     Succ: 3  -G
// Freq 5.8e-02
 }
.b1_329: 
 {   .mib  //R-Addr: 0x4060
	ld4	r17=[r44]				//0: {321:6} 356
	add	r37=1,r37				//0: {804:18} 355
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2922
// Block 49:  Pred: 21     Succ: 326 327  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$1c:
 {   .mib  //R-Addr: 0x4070
	cmp4.ne.unc	p8,p0=r60,r32			//0: {801:18} 343
	sxt4	r24=r37					//0: {801:29} 347
// Branch taken probability 0.50
  (p8)	br.cond.dptk	.b1_326 ;;			//0: {801:18} 344
// Block 327: ltail  Pred: 49     Succ: 3  -G
// Freq 5.8e-02
 }
 {   .mii  //R-Addr: 0x4080
	ld4	r17=[r44]				//0: {321:6} 352
	add	r20=r63,r24				//0: {801:29} 348
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x4090
	ld1	r19=[r20] ;;				//1: {801:29} 349
	nop.m	0
	sxt1	r18=r19 ;;				//2: {801:29} 350
 }
 {   .mib  //R-Addr: 0x40a0
	add	r37=r37,r18				//3: {801:29} 351
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//3: {321:6} 2923
// Block 326: ltail  Pred: 49     Succ: 3  -G
// Freq 5.8e-02
 }
.b1_326: 
 {   .mib  //R-Addr: 0x40b0
	ld4	r17=[r44]				//0: {321:6} 346
	add	r37=1,r37				//0: {802:18} 345
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2924
// Block 48: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$1b:
 {   .mii  //R-Addr: 0x40c0
	ld4	r17=[r44]				//0: {321:6} 342
	add	r37=1,r37				//0: {490:25} 341
	add	r32=0,r0				//0: {490:18} 340
 }
 {   .mmb  //R-Addr: 0x40d0
	nop.m	0
	nop.m	0
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2925
// Block 47: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$1a:
 {   .mii  //R-Addr: 0x40e0
	ld4	r17=[r44]				//0: {321:6} 339
	mov	r60=r32					//0: {680:18} 337
	add	r32=10,r0				//0: {680:25} 338
 }
 {   .mmb  //R-Addr: 0x40f0
	nop.m	0
	nop.m	0
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2926
// Block 46: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$19:
 {   .mii  //R-Addr: 0x4100
	ld4	r17=[r44]				//0: {321:6} 336
	mov	r60=r32					//0: {681:18} 334
	add	r32=9,r0				//0: {681:25} 335
 }
 {   .mmb  //R-Addr: 0x4110
	nop.m	0
	nop.m	0
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2927
// Block 45: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$18:
 {   .mii  //R-Addr: 0x4120
	ld4	r17=[r44]				//0: {321:6} 333
	mov	r60=r32					//0: {682:18} 331
	add	r32=8,r0				//0: {682:25} 332
 }
 {   .mmb  //R-Addr: 0x4130
	nop.m	0
	nop.m	0
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2928
// Block 44: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$17:
 {   .mii  //R-Addr: 0x4140
	ld4	r17=[r44]				//0: {321:6} 330
	mov	r60=r32					//0: {683:18} 328
	add	r32=7,r0				//0: {683:25} 329
 }
 {   .mmb  //R-Addr: 0x4150
	nop.m	0
	nop.m	0
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2929
// Block 43: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$16:
 {   .mii  //R-Addr: 0x4160
	ld4	r17=[r44]				//0: {321:6} 327
	mov	r60=r32					//0: {684:18} 325
	add	r32=6,r0				//0: {684:25} 326
 }
 {   .mmb  //R-Addr: 0x4170
	nop.m	0
	nop.m	0
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2930
// Block 42: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$15:
 {   .mii  //R-Addr: 0x4180
	ld4	r17=[r44]				//0: {321:6} 324
	mov	r60=r32					//0: {685:18} 322
	add	r32=5,r0				//0: {685:25} 323
 }
 {   .mmb  //R-Addr: 0x4190
	nop.m	0
	nop.m	0
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2931
// Block 41: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$14:
 {   .mii  //R-Addr: 0x41a0
	ld4	r17=[r44]				//0: {321:6} 321
	mov	r60=r32					//0: {686:18} 319
	add	r32=4,r0				//0: {686:25} 320
 }
 {   .mmb  //R-Addr: 0x41b0
	nop.m	0
	nop.m	0
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2932
// Block 40: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$13:
 {   .mii  //R-Addr: 0x41c0
	ld4	r17=[r44]				//0: {321:6} 318
	mov	r60=r32					//0: {687:18} 316
	add	r32=3,r0				//0: {687:25} 317
 }
 {   .mmb  //R-Addr: 0x41d0
	nop.m	0
	nop.m	0
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2933
// Block 39: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$12:
 {   .mii  //R-Addr: 0x41e0
	ld4	r17=[r44]				//0: {321:6} 315
	mov	r60=r32					//0: {688:18} 313
	add	r32=2,r0				//0: {688:25} 314
 }
 {   .mmb  //R-Addr: 0x41f0
	nop.m	0
	nop.m	0
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2934
// Block 38: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$11:
 {   .mii  //R-Addr: 0x4200
	ld4	r17=[r44]				//0: {321:6} 312
	mov	r60=r32					//0: {689:18} 310
	add	r32=1,r0				//0: {689:25} 311
 }
 {   .mmb  //R-Addr: 0x4210
	nop.m	0
	nop.m	0
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2935
// Block 37: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$10:
 {   .mii  //R-Addr: 0x4220
	ld4	r17=[r44]				//0: {321:6} 309
	mov	r60=r32					//0: {690:18} 307
	add	r32=0,r0				//0: {690:25} 308
 }
 {   .mmb  //R-Addr: 0x4230
	nop.m	0
	nop.m	0
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2936
// Block 36: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$f:
 {   .mii  //R-Addr: 0x4240
	ld4	r17=[r44]				//0: {321:6} 306
	mov	r60=r32					//0: {691:18} 304
	add	r32=-1,r0				//0: {691:25} 305
 }
 {   .mmb  //R-Addr: 0x4250
	nop.m	0
	nop.m	0
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2937
// Block 35: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$e:
 {   .mii  //R-Addr: 0x4260
	nop.m	0
	nop.i	0
	sxt4	r2=r37					//0: {697:25} 297
 }
 {   .mmi  //R-Addr: 0x4270
	add	r37=1,r37				//0: {697:36} 302
	ld4	r17=[r44]				//0: {321:6} 303
	mov	r60=r32 ;;				//0: {697:18} 296
 }
 {   .mmi  //R-Addr: 0x4280
	add	r30=r63,r2 ;;				//1: {697:25} 298
	ld1	r29=[r30]				//2: {697:25} 299
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x4290
	sub	r28=r0,r29 ;;				//3: {697:25} 300
	nop.m	0
	sxt4	r32=r28					//4: {697:25} 301
 }
 {   .mib  //R-Addr: 0x42a0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2938
// Block 34: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$d:
 {   .mii  //R-Addr: 0x42b0
	mov	r60=r32					//0: {700:18} 284
	extr	r8=r37,1,31				//0: {701:18} 285
	sxt4	r3=r37					//0: {701:18} 286
 }
 {   .mmb  //R-Addr: 0x42c0
	add	r37=1,r37				//0: {702:46} 294
	ld4	r17=[r44]				//0: {321:6} 295
	nop.b	0 ;;
 }
 {   .mmi  //R-Addr: 0x42d0
	add	r2=r63,r3 ;;				//1: {701:18} 287
	ld1	r30=[r2]				//2: {701:18} 288
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x42e0
	add	r29=r8,r30 ;;				//3: {701:18} 289
	shladd	r28=r29,1,r63				//4: {702:18} 290
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x42f0
	ld2	r27=[r28] ;;				//5: {702:18} 291
	nop.m	0
	sxt2	r26=r27 ;;				//6: {702:18} 292
 }
 {   .mib  //R-Addr: 0x4300
	shladd	r32=r29,1,r26				//7: {702:18} 293
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//7: {321:6} 2939
// Block 33: ltail  Pred: 21     Succ: 3  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$c:
 {   .mii  //R-Addr: 0x4310
	ld4	r17=[r44]				//0: {321:6} 283
	sxt4	r27=r37					//0: {704:25} 277
	mov	r60=r32 ;;				//0: {704:18} 276
 }
 {   .mmi  //R-Addr: 0x4320
	add	r26=r63,r27 ;;				//1: {704:25} 278
	ld1	r25=[r26]				//2: {704:25} 279
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x4330
	nop.m	0
	sxt1	r24=r25					//3: {704:25} 280
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x4340
	add	r32=r37,r24				//4: {704:25} 281
	add	r37=1,r37				//4: {704:46} 282
	br.cond.sptk.many	.b1_3 ;;		//4: {321:6} 2940
// Block 32:  Pred: 21     Succ: 300  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$b:
 {   .mmi  //R-Addr: 0x4350
	shladd	r20=r67,2,r0				//0: {757:19} 271
	add	r67=11,r67				//0: {757:38} 275
	sxt4	r19=r66 ;;				//0: {757:19} 272
 }
 {   .mmi  //R-Addr: 0x4360
	add	r18=44,r19 ;;				//1: {757:19} 273
	st4	[r18]=r20				//2: {757:19} 274
	nop.i	0
 }
 {   .mib  //R-Addr: 0x4370
	nop.m	0
	nop.i	0
	br.cond.sptk	.b1_300 ;;			//2: {757:38} 2941
// Block 31:  Pred: 21     Succ: 300  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$a:
 {   .mmi  //R-Addr: 0x4380
	shladd	r17=r67,2,r0				//0: {758:19} 266
	add	r67=10,r67				//0: {758:38} 270
	sxt4	r16=r66 ;;				//0: {758:19} 267
 }
 {   .mmi  //R-Addr: 0x4390
	add	r15=40,r16 ;;				//1: {758:19} 268
	st4	[r15]=r17				//2: {758:19} 269
	nop.i	0
 }
 {   .mib  //R-Addr: 0x43a0
	nop.m	0
	nop.i	0
	br.cond.sptk	.b1_300 ;;			//2: {758:38} 2942
// Block 30:  Pred: 21     Succ: 300  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$9:
 {   .mmi  //R-Addr: 0x43b0
	shladd	r17=r67,2,r0				//0: {759:19} 261
	add	r67=9,r67				//0: {759:38} 265
	sxt4	r16=r66 ;;				//0: {759:19} 262
 }
 {   .mmi  //R-Addr: 0x43c0
	add	r15=36,r16 ;;				//1: {759:19} 263
	st4	[r15]=r17				//2: {759:19} 264
	nop.i	0
 }
 {   .mib  //R-Addr: 0x43d0
	nop.m	0
	nop.i	0
	br.cond.sptk	.b1_300 ;;			//2: {759:38} 2943
// Block 29:  Pred: 21     Succ: 300  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$8:
 {   .mmi  //R-Addr: 0x43e0
	shladd	r20=r67,2,r0				//0: {760:19} 256
	add	r67=8,r67				//0: {760:38} 260
	sxt4	r19=r66 ;;				//0: {760:19} 257
 }
 {   .mmi  //R-Addr: 0x43f0
	add	r18=32,r19 ;;				//1: {760:19} 258
	st4	[r18]=r20				//2: {760:19} 259
	nop.i	0
 }
 {   .mib  //R-Addr: 0x4400
	nop.m	0
	nop.i	0
	br.cond.sptk	.b1_300 ;;			//2: {760:38} 2944
// Block 28:  Pred: 21     Succ: 300  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$7:
 {   .mmi  //R-Addr: 0x4410
	shladd	r14=r67,2,r0				//0: {761:19} 251
	add	r67=7,r67				//0: {761:38} 255
	sxt4	r11=r66 ;;				//0: {761:19} 252
 }
 {   .mmi  //R-Addr: 0x4420
	add	r10=28,r11 ;;				//1: {761:19} 253
	st4	[r10]=r14				//2: {761:19} 254
	nop.i	0
 }
 {   .mib  //R-Addr: 0x4430
	nop.m	0
	nop.i	0
	br.cond.sptk	.b1_300 ;;			//2: {761:38} 2945
// Block 27:  Pred: 21     Succ: 300  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$6:
 {   .mmi  //R-Addr: 0x4440
	shladd	r26=r67,2,r0				//0: {762:19} 246
	add	r67=6,r67				//0: {762:38} 250
	sxt4	r25=r66 ;;				//0: {762:19} 247
 }
 {   .mmi  //R-Addr: 0x4450
	add	r24=24,r25 ;;				//1: {762:19} 248
	st4	[r24]=r26				//2: {762:19} 249
	nop.i	0
 }
 {   .mib  //R-Addr: 0x4460
	nop.m	0
	nop.i	0
	br.cond.sptk	.b1_300 ;;			//2: {762:38} 2946
// Block 26:  Pred: 21     Succ: 300  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$5:
 {   .mmi  //R-Addr: 0x4470
	shladd	r9=r67,2,r0				//0: {763:19} 241
	add	r67=5,r67				//0: {763:38} 245
	sxt4	r8=r66 ;;				//0: {763:19} 242
 }
 {   .mmi  //R-Addr: 0x4480
	add	r3=20,r8 ;;				//1: {763:19} 243
	st4	[r3]=r9					//2: {763:19} 244
	nop.i	0
 }
 {   .mib  //R-Addr: 0x4490
	nop.m	0
	nop.i	0
	br.cond.sptk	.b1_300 ;;			//2: {763:38} 2947
// Block 25:  Pred: 21     Succ: 300  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$4:
 {   .mmi  //R-Addr: 0x44a0
	shladd	r29=r67,2,r0				//0: {764:19} 236
	add	r67=4,r67				//0: {764:38} 240
	sxt4	r28=r66 ;;				//0: {764:19} 237
 }
 {   .mmi  //R-Addr: 0x44b0
	add	r27=16,r28 ;;				//1: {764:19} 238
	st4	[r27]=r29				//2: {764:19} 239
	nop.i	0
 }
 {   .mib  //R-Addr: 0x44c0
	nop.m	0
	nop.i	0
	br.cond.sptk	.b1_300 ;;			//2: {764:38} 2948
// Block 24:  Pred: 21     Succ: 300  -G
// Freq 1.2e-01
 }
$$1$1_0$TAG$3:
 {   .mmi  //R-Addr: 0x44d0
	shladd	r2=r67,2,r0				//0: {765:19} 218
	add	r67=3,r67				//0: {765:38} 222
	sxt4	r30=r66 ;;				//0: {765:19} 219
 }
 {   .mmi  //R-Addr: 0x44e0
	add	r29=12,r30 ;;				//1: {765:19} 220
	st4	[r29]=r2				//2: {765:19} 221
	nop.i	0 ;;
// Block 300: lexit ltail  Pred: 31 30 29 28 27 26 25 24 32     Succ: 3 2  -GO
// Freq 1.0e+00
 }
.b1_300: 
 {   .mii  //R-Addr: 0x44f0
	ld4.a	r17=[r44]				//0: {321:6} 233
	shladd	r66=r67,2,r33				//0: {766:19} 223
	cmp4.ge.unc	p6,p0=r32,r0 ;;			//0: {771:19} 234
 }
 {   .mii  //R-Addr: 0x4500
	nop.m	0
	sxt4	r14=r66 ;;				//1: {767:19} 224
	add	r9=8,r14				//2: {769:19} 228
 }
 {   .mii  //R-Addr: 0x4510
	add	r11=4,r14				//2: {767:19} 225
	add	r10=12,r14				//2: {770:19} 231
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x4520
	st4	[r9]=r32				//3: {769:19} 229
	nop.m	0
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x4530
	st4	[r10]=r60				//4: {770:19} 232
	st4	[r11]=r37				//4: {767:19} 226
	mov	r37=r32					//4: {768:19} 3582
 }
 {   .mib  //R-Addr: 0x4540
	ld4.c.clr	r17=[r44]			//4: {321:6} 3583
	mov	r32=r60					//4: {770:27} 230
// Branch taken probability 0.80
  (p6)	br.cond.dptk.many	.b1_3 ;;		//4: {771:19} 235
// Block 2: epilog  Pred: 0 300 823 822 821 820 819 818     Succ: 7  -G
// Freq 7.1e-01
 }
.b1_2: 
 {   .mib  //R-Addr: 0x4550
	add	r17=4,r0				//0: {956:4} 53
	nop.i	0
	br.cond.sptk	.b1_7 ;;			//0: {956:4} 2949
// Block 20: epilog  Pred: 21 17     Succ: 7  -G
// Freq 5.9e-02
 }
.b1_20: 
$$1$1_0$TAG$DEFAULT:
 {   .mib  //R-Addr: 0x4560
	add	r37=-1,r37				//0: {367:27} 137
	add	r17=1,r0				//0: {367:18} 136
	br.cond.sptk	.b1_7 ;;			//0: {367:27} 2950
// Block 23: epilog  Pred: 21     Succ: 7  -G
// Freq 2.9e-02
 }
$$1$1_0$TAG$2:
 {   .mib  //R-Addr: 0x4570
	add	r37=-1,r37				//0: {503:27} 217
	add	r17=2,r0				//0: {503:18} 216
	br.cond.sptk	.b1_7 ;;			//0: {503:27} 2951
// Block 11: epilog  Pred: 4 784     Succ: 7  -G
// Freq 2.9e-02
 }
.b1_11: 
 {   .mii  //R-Addr: 0x4580
	add	r17=3,r0				//0: {335:22} 95
	nop.i	0
	nop.i	0 ;;
// Block 7: exit  Pred: 6 11 285 360 363 481 483 20 2 23     Succ:  -GO
// Freq 1.0e+00
 }
.b1_7: 
 {   .mmi  //R-Addr: 0x4590
	st4	[r45]=r0				//0: {958:4} 72
	st4	[r62]=r32				//0: {960:4} 73

//  965 :   W[regs+5]  = st;
//  966 :   W[regs+6]  = pc;
//  967 :   W[regs+7]  = count;
//  968 :   W[regs+8]  = mw;
//  969 :
//  970 :   /* Save p in currco resumption point, for debugging purposes     */
//  971 :   /* currco must always be set to the coroutine stack containing p */
//  972 :   //W[Wg[Gn_currco]] = p;
//  973 :   
//  974 :   return res;  // Return from this invocation of interpret

	mov	ar.pfs=r34				//0: {974:11} 85
 }
 {   .mii  //R-Addr: 0x45a0
	shladd	r30=r67,2,r0				//0: {963:4} 76
	sxt4	r8=r17 ;;				//0: {974:11} 83
	mov	b0=r35					//1: {974:11} 84
 }
 {   .mmi  //R-Addr: 0x45b0
	st4	[r57]=r30				//1: {963:4} 77
	st4	[r61]=r60				//1: {961:4} 74
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x45c0
	st4	[r59]=r58				//2: {962:4} 75
	st4	[r56]=r39				//2: {964:4} 78
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x45d0
	st4	[r52]=r37				//3: {966:4} 80
	st4	[r49]=r48				//3: {968:4} 82
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x45e0
	st4	[r54]=r53				//4: {965:4} 79
	st4	[r51]=r50				//4: {967:4} 81
	add	sp=32,sp				//4: {974:11} 5554
 }
 {   .mib  //R-Addr: 0x45f0
	nop.m	0
	nop.i	0
	br.ret.sptk.many	b0 ;;			//4: {974:11} 87
// Block 276: collapsed  Pred: 21     Succ: 623 824  -GO
// Freq 1.2e-01
 }
$$1$1_0$TAG$ff:
 {   .mmi  //R-Addr: 0x4600
	add	r29=2,r37				//0: {427:25} 2175
	add	r28=1,r0				//0: {437:10} 2184
	sxt4	r25=sp					//0: {450:26} 2222
 }
 {   .mmi  //R-Addr: 0x4610
	shladd	r26=r32,2,r33				//0: {425:25} 2171
	shladd	r19=r60,2,r63				//0: {446:26} 2205
	sxt4	r27=r37 ;;				//0: {426:23} 2172
 }
 {   .mmi  //R-Addr: 0x4620
	add	r24=r63,r27				//1: {426:23} 2173
	add	r37=3,r37				//1: {428:25} 2178
	sxt4	r18=r26					//1: {439:8} 2191
 }
 {   .mmi  //R-Addr: 0x4630
	add	r17=32,r25				//1: {450:37} 2225
	add	r8=16,r25				//1: {450:26} 2223
	sxt4	r20=r29 ;;				//1: {428:23} 2179
 }
 {   .mlx  //R-Addr: 0x4640
	ld4	r16=[r18]				//2: {439:8} 2192
	movl	r11=0x0ffffffff				//2: {435:10} 2187
 }
 {   .mmi  //R-Addr: 0x4650
	add	r14=1,r24				//2: {427:23} 2176
	ld1	r69=[r24]				//2: {426:23} 2174
	add	r15=r63,r20 ;;				//2: {428:23} 2180
 }
 {   .mmi  //R-Addr: 0x4660
	ld1	r9=[r15]				//3: {428:23} 2181
	ld1	r10=[r14]				//3: {427:23} 2177
	zxt4	r3=r16					//3: {439:8} 2193
 }
 {   .mmi  //R-Addr: 0x4670
	cmp4.ne.unc	p10,p9=r69,r0			//3: {443:8} 2198
	cmp4.eq.unc	p12,p0=1,r69			//3: {443:8} 2200
	zxt4	r2=r11 ;;				//3: {435:10} 2188
 }
 {   .mmi  //R-Addr: 0x4680
  (p10)cmp4.eq.unc	p6,p0=5,r69			//4: {443:8} 2242
  (p9)	mov	r43=r60					//4: {445:26} 2202
	cmp4.ne.unc	p8,p7=r10,r0			//4: {434:8} 2655
 }
 {   .mmi  //R-Addr: 0x4690
  (p10)cmp4.eq.unc	p15,p0=4,r69			//4: {443:8} 2220
  (p10)cmp4.eq.unc	p14,p0=3,r69			//4: {443:8} 2208
  (p10)cmp4.eq.unc	p9,p0=6,r69 ;;			//4: {443:8} 2254
 }
 {   .mii  //R-Addr: 0x46a0
  (p10)cmp4.eq.unc	p13,p0=2,r69			//5: {443:8} 2203
  (p8)	shl	r30=r28,r10 ;;				//5: {437:10} 2185
  (p7)	shr.u	r29=r2,r9				//6: {435:10} 2189
 }
 {   .mii  //R-Addr: 0x46b0
	nop.m	0
	shr.u	r28=r3,r9				//6: {439:8} 2194
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x46c0
  (p8)	add	r27=-1,r30 ;;				//8: {437:10} 2186
	nop.m	0
  (p7)	sxt4	r27=r29					//9: {435:10} 2190
 }
 {   .mii  //R-Addr: 0x46d0
	nop.m	0
	sxt4	r26=r28					//9: {439:8} 2195
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x46e0
	and	r26=r26,r27 ;;				//10: {439:8} 2196
	mov	r25=r26					//11: {440:8} 2197
  (p10)shladd	r30=r26,2,r19				//11: {446:26} 2206
 }
 {   .mbb  //R-Addr: 0x46f0
	nop.m	0
// Branch taken probability 0.50
  (p10)br.cond.dptk	.b1_623				//11: {443:8} 2199
// Block 824:  Pred: 276     Succ: 661  -
// Freq 5.8e-02
	br.cond.sptk	.b1_661 ;;			//11: {443:8} 5555
// Block 623:  Pred: 276     Succ: 661 625  -G
// Freq 5.8e-02
 }
.b1_623: 
 {   .mii  //R-Addr: 0x4700
  (p12)ld4	r43=[r30]				//0: {446:26} 2207
	nop.i	0
	nop.i	0
 }
 {   .bbb  //R-Addr: 0x4710
// Branch taken probability 0.16
  (p12)br.cond.dpnt	.b1_661				//0: {443:8} 2201
// Block 625:  Pred: 623     Succ: 628 627  -G
// Freq 4.9e-02
// Branch taken probability 0.16
  (p13)br.cond.dpnt	.b1_628				//0: {443:8} 2204
// Block 627:  Pred: 625     Succ: 630 629  -G
// Freq 4.1e-02
// Branch taken probability 0.16
  (p14)br.cond.dpnt	.b1_630 ;;			//0: {443:8} 2209
// Block 629:  Pred: 627     Succ: 632 631  -GO
// Freq 3.4e-02
 }
 {   .mii  //R-Addr: 0x4720
  (p15)st4	[r8]=r26				//0: {453:26} 2246
	nop.i	0
	nop.i	0
 }
 {   .mbb  //R-Addr: 0x4730
  (p15)ldfs	f13=[r8]				//0: {454:26} 2249
// Branch taken probability 0.16
  (p15)br.cond.dpnt	.b1_632				//0: {443:8} 2221
// Block 631:  Pred: 629     Succ: 634 633  -G
// Freq 2.9e-02
// Branch taken probability 0.16
  (p6)	br.cond.dpnt	.b1_634 ;;			//0: {443:8} 2243
// Block 633:  Pred: 631     Succ: 636 635  -G
// Freq 2.4e-02
 }
 {   .mii  //R-Addr: 0x4740
	add	r29=65501,r0				//0: {461:26} 2308
	sxt4	r20=r60					//0: {461:26} 2299
	sxt4	r19=r26					//0: {461:26} 2298
 }
 {   .mmb  //R-Addr: 0x4750
	setf.sig	f32=r60				//0: {461:26} 2297
	setf.sig	f11=r26				//0: {459:26} 2269
// Branch taken probability 0.16
  (p9)	br.cond.dpnt	.b1_636 ;;			//0: {443:8} 2255
// Block 635:  Pred: 633     Succ: 638 637  -G
// Freq 2.0e-02
 }
 {   .mii  //R-Addr: 0x4760
	setf.sig	f8=r20				//0: {461:26} 2304
	cmp4.eq.unc	p10,p0=7,r69			//0: {443:8} 2266
	cmp4.gt.unc	p0,p7=32,r60			//0: {464:26} 2645
 }
 {   .mmb  //R-Addr: 0x4770
	setf.sig	f15=r19				//0: {461:26} 2303
	cmp.ne.unc	p0,p12=0,r20			//0: {460:26} 2647
// Branch taken probability 0.16
  (p10)br.cond.dpnt	.b1_638 ;;			//0: {443:8} 2267
// Block 637:  Pred: 635     Succ: 640 639  -G
// Freq 1.7e-02
 }
 {   .mii  //R-Addr: 0x4780
	setf.exp	f11=r29				//0: {461:26} 2309
	cmp4.eq.unc	p12,p0=8,r69			//0: {443:8} 2272
	cmp.ne.unc	p0,p9=0,r20			//0: {461:26} 2646
 }
 {   .mbb  //R-Addr: 0x4790
	cmp4.eq.unc	p13,p0=9,r69			//0: {443:8} 2295
// Branch taken probability 0.16
  (p12)br.cond.dpnt	.b1_640				//0: {443:8} 2273
// Block 639:  Pred: 637     Succ: 642 641  -G
// Freq 1.4e-02
// Branch taken probability 0.16
  (p13)br.cond.dpnt	.b1_642 ;;			//0: {443:8} 2296
// Block 641:  Pred: 639     Succ: 644 643  -GO
// Freq 1.2e-02
 }
 {   .mii  //R-Addr: 0x47a0
	cmp4.eq.unc	p6,p0=11,r69			//0: {443:8} 2326
	cmp4.eq.unc	p14,p0=10,r69			//0: {443:8} 2323
	cmp4.eq.unc	p15,p0=12,r69			//0: {443:8} 2329
 }
 {   .mbb  //R-Addr: 0x47b0
	nop.m	0
// Branch taken probability 0.16
  (p14)br.cond.dpnt	.b1_644				//0: {443:8} 2324
// Block 643:  Pred: 641     Succ: 646 645  -G
// Freq 1.0e-02
// Branch taken probability 0.16
  (p6)	br.cond.dpnt	.b1_646 ;;			//0: {443:8} 2327
// Block 645:  Pred: 643     Succ: 650 649  -G
// Freq 8.5e-03
 }
 {   .mii  //R-Addr: 0x47c0
	xor	r24=r26,r60				//0: {470:26} 2352
	sxt4	r20=r60					//0: {467:19} 2341
	cmp4.gt.unc	p0,p6=32,r60			//0: {466:26} 2644
 }
 {   .mmb  //R-Addr: 0x47d0
	nop.m	0
	nop.m	0
// Branch taken probability 0.16
  (p15)br.cond.dpnt	.b1_650 ;;			//0: {443:8} 2330
// Block 649: collapsed  Pred: 645     Succ: 659 660  -G
// Freq 7.2e-03
 }
 {   .mmi  //R-Addr: 0x47e0
	cmp4.eq.unc	p15,p14=13,r69 ;;		//0: {443:8} 2633
  (p14)cmp4.eq.unc	p13,p12=14,r69			//1: {443:8} 2636
  (p15)and	r43=r26,r60 ;;				//1: {468:26} 2346
 }
 {   .mii  //R-Addr: 0x47f0
  (p12)cmp4.eq.unc	p10,p9=15,r69			//2: {443:8} 2639
  (p13)or	r43=r26,r60 ;;				//2: {469:26} 2349
  (p10)xor	r43=-1,r24				//3: {470:26} 2353
 }
 {   .mib  //R-Addr: 0x4800
  (p9)	cmp4.ne.unc	p8,p7=16,r69			//3: {443:8} 2641
	nop.i	0
// Branch taken probability 0.50
  (p8)	br.cond.dpnt	.b1_659 ;;			//3: {443:8} 2351
// Block 660: collapsed  Pred: 649     Succ: 661  -G
// Freq 3.6e-03
 }
 {   .mii  //R-Addr: 0x4810
  (p7)	xor	r43=r26,r60				//0: {471:26} 2356
	nop.i	0
	nop.i	0 ;;
// Block 661: ltail  Pred: 623 824 660 644 642 636 634 632 630 628 650 646 640 638     Succ: 3  -G
// Freq 1.1e-01
 }
.b1_661: 
 {   .mmi  //R-Addr: 0x4820
	ld4.a	r17=[r44] ;;				//0: {321:6} 2362
	xor	r8=r43,r25				//4: {477:8} 2357
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x4830
	and	r3=r8,r27 ;;				//5: {477:8} 2358
	nop.m	0
	shl	r2=r3,r9 ;;				//8: {477:8} 2359
 }
 {   .mmi  //R-Addr: 0x4840
	xor	r30=r16,r2 ;;				//11: {477:8} 2360
	st4	[r18]=r30				//12: {477:8} 2361
	nop.i	0
 }
 {   .mib  //R-Addr: 0x4850
	ld4.c.clr	r17=[r44]			//12: {321:6} 3515
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//12: {321:6} 2953
// Block 659: ltail  Pred: 649     Succ: 3  -G
// Freq 3.6e-03
 }
.b1_659: 
 {   .mib  //R-Addr: 0x4860
	ld4	r17=[r44]				//0: {321:6} 2355
	add	r32=0,r0				//0: {444:26} 2354
	br.cond.sptk.many	.b1_3 ;;		//0: {321:6} 2954
// Block 650: collapsed  Pred: 645     Succ: 661  -G
// Freq 1.4e-03
 }
.b1_650: 
 {   .mmi  //R-Addr: 0x4870
  (p6)	add	r26=0,r0 ;;				//0: {466:40} 2343
	nop.m	0
	zxt4	r19=r26 ;;				//1: {467:19} 2340
 }
 {   .mib  //R-Addr: 0x4880
	nop.m	0
	shr.u	r43=r19,r20				//4: {467:19} 2342
	br.cond.sptk	.b1_661 ;;			//4: {467:19} 2955
// Block 646: collapsed  Pred: 643     Succ: 661  -G
// Freq 1.6e-03
 }
.b1_646: 
 {   .mmi  //R-Addr: 0x4890
  (p7)	add	r26=0,r0 ;;				//0: {464:40} 2335
	nop.m	0
	shl	r43=r26,r20				//3: {465:26} 2334
 }
 {   .mib  //R-Addr: 0x48a0
	nop.m	0
	nop.i	0
	br.cond.sptk	.b1_661 ;;			//3: {465:26} 2956
// Block 644:  Pred: 641     Succ: 661  -G
// Freq 1.9e-03
 }
.b1_644: 
 {   .mib  //R-Addr: 0x48b0
	sub	r43=r26,r60				//0: {463:26} 2328
	nop.i	0
	br.cond.sptk	.b1_661 ;;			//0: {463:26} 2957
// Block 642:  Pred: 639     Succ: 661  -G
// Freq 2.3e-03
 }
.b1_642: 
 {   .mib  //R-Addr: 0x48c0
	add	r43=r60,r26				//0: {462:26} 2325
	nop.i	0
	br.cond.sptk	.b1_661 ;;			//0: {462:26} 2958
// Block 640: collapsed  Pred: 637     Succ: 661  -G
// Freq 2.7e-03
 }
.b1_640: 
 {   .mfi  //R-Addr: 0x48d0
	nop.m	0
	fcvt.xf	f7=f15					//0: {461:26} 2305
  (p9)	break	1					//0: {461:26} 2302
 }
 {   .mfi  //R-Addr: 0x48e0
	nop.m	0
	fcvt.xf	f6=f8					//0: {461:26} 2306
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x48f0
	nop.m	0
	frcpa.s1	f15,p8=f7,f6			//4: {461:26} 2307
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x4900
	nop.m	0
  (p8)	fnma.s1	f14=f6,f15,f1				//8: {461:26} 2311
	nop.i	0
 }
 {   .mfi  //R-Addr: 0x4910
	nop.m	0
  (p8)	fma.s1	f13=f7,f15,f0				//8: {461:26} 2310
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x4920
	nop.m	0
  (p8)	fma.s1	f12=f14,f14,f11				//12: {461:26} 2313
	nop.i	0
 }
 {   .mfi  //R-Addr: 0x4930
	nop.m	0
  (p8)	fma.s1	f10=f14,f13,f13				//12: {461:26} 2312
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x4940
	nop.m	0
  (p8)	fma.s1	f15=f12,f10,f10				//16: {461:26} 2314
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x4950
	nop.m	0
	fcvt.fx.trunc.s1	f9=f15			//20: {461:26} 2317
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x4960
	nop.m	0
	xma.l	f8=f32,f9,f0				//24: {461:26} 2320
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x4970
	getf.sig	r28=f8 ;;			//28: {461:26} 2321
	sub	r43=r26,r28				//33: {461:26} 2322
	nop.i	0
 }
 {   .mib  //R-Addr: 0x4980
	nop.m	0
	nop.i	0
	br.cond.sptk	.b1_661 ;;			//33: {461:26} 2959
// Block 638: collapsed  Pred: 635     Succ: 661  -G
// Freq 3.3e-03
 }
.b1_638: 
 {   .mii  //R-Addr: 0x4990
	setf.exp	f9=r29				//0: {460:26} 2285
  (p12)break	1					//0: {460:26} 2278
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x49a0
	nop.m	0
	fcvt.xf	f6=f8					//5: {460:26} 2282
	nop.i	0
 }
 {   .mfi  //R-Addr: 0x49b0
	nop.m	0
	fcvt.xf	f14=f15					//5: {460:26} 2281
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x49c0
	nop.m	0
	frcpa.s1	f13,p10=f14,f6			//9: {460:26} 2283
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x49d0
	nop.m	0
  (p10)fnma.s1	f12=f6,f13,f1				//13: {460:26} 2287
	nop.i	0
 }
 {   .mfi  //R-Addr: 0x49e0
	nop.m	0
  (p10)fma.s1	f11=f14,f13,f0				//13: {460:26} 2286
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x49f0
	nop.m	0
  (p10)fma.s1	f10=f12,f12,f9				//17: {460:26} 2289
	nop.i	0
 }
 {   .mfi  //R-Addr: 0x4a00
	nop.m	0
  (p10)fma.s1	f9=f12,f11,f11				//17: {460:26} 2288
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x4a10
	nop.m	0
  (p10)fma.s1	f13=f10,f9,f9				//21: {460:26} 2290
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x4a20
	nop.m	0
	fcvt.fx.trunc.s1	f8=f13			//25: {460:26} 2293
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x4a30
	getf.sig	r43=f8				//29: {460:26} 2294
	nop.i	0
	br.cond.sptk	.b1_661 ;;			//29: {460:26} 2960
// Block 636:  Pred: 633     Succ: 661  -G
// Freq 3.9e-03
 }
.b1_636: 
 {   .mfi  //R-Addr: 0x4a40
	nop.m	0
	xma.l	f10=f32,f11,f0				//5: {459:26} 2270
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x4a50
	getf.sig	r43=f10				//9: {459:26} 2271
	nop.i	0
	br.cond.sptk	.b1_661 ;;			//9: {459:26} 2961
// Block 634:  Pred: 631     Succ: 661  -G
// Freq 4.6e-03
 }
.b1_634: 
 {   .mmi  //R-Addr: 0x4a60
	st4	[r17]=r60				//0: {456:37} 2260
	ldfs	f11=[r17]				//0: {457:26} 2262
	nop.i	0
 }
 {   .mmi  //R-Addr: 0x4a70
	st4	[r8]=r26				//0: {456:26} 2258
	ldfs	f10=[r8]				//0: {457:26} 2261
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x4a80
	nop.m	0
	fms.s	f9=f10,f1,f11				//6: {457:26} 2263
	nop.i	0 ;;
 }
 {   .mmb  //R-Addr: 0x4a90
	stfs	[r8]=f9					//10: {457:26} 2264
	ld4	r43=[r8]				//10: {458:26} 2265
	br.cond.sptk	.b1_661 ;;			//10: {458:26} 2962
// Block 632:  Pred: 629     Succ: 661  -G
// Freq 5.5e-03
 }
.b1_632: 
 {   .mmi  //R-Addr: 0x4aa0
	st4	[r17]=r60				//0: {453:37} 2248
	ldfs	f14=[r17]				//0: {454:26} 2250
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x4ab0
	nop.m	0
	fma.s	f12=f13,f1,f14				//6: {454:26} 2251
	nop.i	0 ;;
 }
 {   .mmb  //R-Addr: 0x4ac0
	stfs	[r8]=f12				//10: {454:26} 2252
	ld4	r43=[r8]				//10: {455:26} 2253
	br.cond.sptk	.b1_661 ;;			//10: {455:26} 2963
// Block 630:  Pred: 627     Succ: 661  -G
// Freq 6.6e-03
 }
.b1_630: 
 {   .mmi  //R-Addr: 0x4ad0
	st4	[r8]=r26				//0: {450:26} 2224
	ldfs	f14=[r8]				//0: {451:26} 2227
	nop.i	0
 }
 {   .mmi  //R-Addr: 0x4ae0
	st4	[r17]=r60				//0: {450:37} 2226
	ldfs	f13=[r17]				//0: {451:26} 2228
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x4af0
	nop.m	0
	frcpa	f12,p7=f14,f13				//6: {451:26} 2229
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x4b00
	nop.m	0
  (p7)	fnma.s1	f11=f12,f13,f1				//10: {451:26} 2231
	nop.i	0
 }
 {   .mfi  //R-Addr: 0x4b10
	nop.m	0
  (p7)	fma.s1	f10=f14,f12,f0				//10: {451:26} 2230
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x4b20
	nop.m	0
  (p7)	fma.s1	f9=f11,f11,f0				//14: {451:26} 2233
	nop.i	0
 }
 {   .mfi  //R-Addr: 0x4b30
	nop.m	0
  (p7)	fma.s1	f8=f10,f11,f10				//14: {451:26} 2232
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x4b40
	nop.m	0
  (p7)	fma.s1	f7=f9,f9,f0				//18: {451:26} 2235
	nop.i	0
 }
 {   .mfi  //R-Addr: 0x4b50
	nop.m	0
  (p7)	fma.s1	f6=f8,f9,f8				//18: {451:26} 2234
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x4b60
	nop.m	0
  (p7)	fma.d.s1	f15=f6,f7,f6			//22: {451:26} 2236
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x4b70
	nop.m	0
  (p7)	fma.s	f12=f15,f1,f0				//26: {451:26} 2237
	nop.i	0 ;;
 }
 {   .mmb  //R-Addr: 0x4b80
	stfs	[r8]=f12				//30: {451:26} 2240
	ld4	r43=[r8]				//30: {452:26} 2241
	br.cond.sptk	.b1_661 ;;			//30: {452:26} 2964
// Block 628:  Pred: 625     Succ: 661  -G
// Freq 7.8e-03
 }
.b1_628: 
 {   .mmi  //R-Addr: 0x4b90
	st4	[r17]=r60				//0: {447:37} 2214
	ldfs	f7=[r17]				//0: {448:26} 2216
	nop.i	0
 }
 {   .mmi  //R-Addr: 0x4ba0
	st4	[r8]=r26				//0: {447:26} 2212
	ldfs	f6=[r8]					//0: {448:26} 2215
	nop.i	0 ;;
 }
 {   .mfi  //R-Addr: 0x4bb0
	nop.m	0
	fma.s	f15=f6,f7,f0				//6: {448:26} 2217
	nop.i	0 ;;
 }
 {   .mmb  //R-Addr: 0x4bc0
	stfs	[r8]=f15				//10: {448:26} 2218
	ld4	r43=[r8]				//10: {449:26} 2219
	br.cond.sptk	.b1_661 ;;			//10: {449:26} 2965
// Block 281:  Pred: 278     Succ: 282 283  -G
// Freq 9.3e-03
 }
.b1_281: 
 {   .mii  //R-Addr: 0x4bd0
	cmp4.gt.unc	p14,p0=128,r8			//0: {382:10} 159
	sxt4	r3=r8					//0: {385:14} 163
	nop.i	0
 }
 {   .mmb  //R-Addr: 0x4be0
	add	r8=-256,r8				//0: {382:29} 171
	nop.m	0
// Branch taken probability 0.50
  (p14)br.cond.dptk	.b1_282 ;;			//0: {382:10} 160
// Block 283:  Pred: 281     Succ: 282  -G
// Freq 4.6e-03
 }
 {   .mii  //R-Addr: 0x4bf0
	nop.m	0
	sxt4	r3=r8					//0: {385:14} 3083
	nop.i	0 ;;
// Block 282:  Pred: 281 283     Succ: 284  -GO
// Freq 9.3e-03
 }
.b1_282: 
 {   .mii  //R-Addr: 0x4c00
	mov	r71=r3					//0: {385:14} 167
	mov	r69=r16					//0: {385:14} 165
	mov	r70=r14					//0: {385:14} 166
 }
 {   .mmb  //R-Addr: 0x4c10
	nop.m	0
	nop.m	0
	br.call.sptk	b0=CX3$_Z5DOFLTIII0UP9NMT# ;;	//0: {385:14} 169
// Block 284: ltail  Pred: 282     Succ: 3  -GO
// Freq 9.3e-03
 }
 {   .mii  //R-Addr: 0x4c20
	ld4	r17=[r44]				//2: {321:6} 173
	mov	gp=r36					//2: {385:14} 5487
	mov	r32=r8					//2: {385:10} 172
 }
 {   .mmb  //R-Addr: 0x4c30
	nop.m	0
	nop.m	0
	br.cond.sptk.many	.b1_3 ;;		//2: {321:6} 2968
// Block 491: epilog  Pred: 699     Succ: 488  -G
// Freq 2.9e-02
 }
.b1_491: 
 {   .mmi  //R-Addr: 0x4c40
	add	r15=r15,r10 ;;				//0: {553:34} 1446
	shladd	r8=r15,1,r63				//1: {557:18} 1447
	add	r14=1,r15 ;;				//1: {557:18} 3265
 }
 {   .mmi  //R-Addr: 0x4c50
	add	r11=2,r8 ;;				//2: {557:18} 3266
	ld2.s	r18=[r11]				//3: {557:18} 3272
	nop.i	0
 }
 {   .mib  //R-Addr: 0x4c60
	nop.m	0
	nop.i	0
	br.cond.sptk	.b1_488 ;;			//3: {557:18} 2969
// Block 485: ltail  Pred: 482     Succ: 3  -G
// Freq 3.0e-02
 }
.b1_485: 
 {   .mmi  //R-Addr: 0x4c70
	ld4	r25=[r26] ;;				//0: {602:26} 1418
	shladd	r17=r25,2,r33				//1: {602:26} 1419
	nop.i	0 ;;
 }
 {   .mii  //R-Addr: 0x4c80
	st4	[r44]=r17				//2: {602:26} 1420
	sxt4	r24=r17					//2: {603:19} 1421
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x4c90
	ld4	r20=[r24] ;;				//3: {603:19} 1422
	st4	[r38]=r20				//4: {603:19} 1423
	nop.i	0
 }
 {   .mib  //R-Addr: 0x4ca0
	nop.m	0
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//4: {603:19} 2970
// Block 483: epilog  Pred: 480     Succ: 7  -G
// Freq 2.9e-02
 }
.b1_483: 
 {   .mii  //R-Addr: 0x4cb0
	nop.m	0
	sxt4	r9=r66					//0: {593:26} 1395
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x4cc0
	add	r8=16,r9 ;;				//1: {593:26} 1396
	ld4	r17=[r8]				//2: {593:26} 1397
	nop.i	0
 }
 {   .mib  //R-Addr: 0x4cd0
	nop.m	0
	nop.i	0
	br.cond.sptk	.b1_7 ;;			//2: {593:26} 2971
// Block 481: epilog  Pred: 166     Succ: 7  -G
// Freq 2.9e-02
 }
.b1_481: 
 {   .mii  //R-Addr: 0x4ce0
	add	r17=-1,r0				//0: {589:26} 1392
	sxt4	r3=r66					//0: {588:12} 1389
	mov	r32=r50 ;;				//0: {587:26} 1388
 }
 {   .mmi  //R-Addr: 0x4cf0
	add	r2=16,r3 ;;				//1: {588:12} 1390
	ld4	r50=[r2]				//2: {588:12} 1391
	nop.i	0
 }
 {   .mib  //R-Addr: 0x4d00
	nop.m	0
	nop.i	0
	br.cond.sptk	.b1_7 ;;			//2: {589:26} 2972
// Block 363: epilog  Pred: 75     Succ: 7  -G
// Freq 2.9e-02
 }
.b1_363: 
 {   .mib  //R-Addr: 0x4d10
	add	r37=-1,r37				//0: {484:37} 665
	add	r17=5,r0				//0: {484:28} 664
	br.cond.sptk	.b1_7 ;;			//0: {484:37} 2973
// Block 360: epilog  Pred: 74     Succ: 7  -G
// Freq 2.9e-02
 }
.b1_360: 
 {   .mib  //R-Addr: 0x4d20
	add	r37=-1,r37				//0: {482:37} 634
	add	r17=5,r0				//0: {482:28} 633
	br.cond.sptk	.b1_7 ;;			//0: {482:37} 2974
// Block 18:  Pred: 14     Succ: 19  -GO
// Freq 8.2e+00
 }
.b1_18: 
 {   .mib  //R-Addr: 0x4d30
	mov	r69=r3					//0: {350:3} 131
	add	r64=10000,r0				//0: {351:3} 135
	br.call.sptk	b0=CX3$_Z9TIMESTAMPPI14QIUMC# ;;//0: {350:3} 133
// Block 19:  Pred: 18     Succ: 17  -GO
// Freq 8.2e+00
 }
 {   .mib  //R-Addr: 0x4d40
	mov	gp=r36					//2: {350:3} 5488
	nop.i	0
	br.cond.sptk.many	.b1_17 ;;		//2: {351:3} 2976
// Block 13:  Pred: 804 793     Succ: 664  -GO
// Freq 1.9e+00
 }
.b1_13: 
 {   .mii  //R-Addr: 0x4d50
	add	r25=4,r0				//0: {341:17} 102
	sxt4	r71=r32					//0: {341:17} 100
	sxt4	r70=r67					//0: {341:17} 99
 }
 {   .mmi  //R-Addr: 0x4d60
	mov	r69=r68 ;;				//0: {341:17} 103
	nop.m	0
	sxt4	r72=r60					//1: {341:17} 101
 }
 {   .mib  //R-Addr: 0x4d70
	nop.m	0
	nop.i	0
	br.call.sptk	b0=CX3$_Z5TRACEIIII3N3TDT9# ;;	//1: {341:17} 108
// Block 664:  Pred: 13     Succ: 12  -GO
// Freq 1.9e+00
 }
 {   .mib  //R-Addr: 0x4d80
	mov	gp=r36					//3: {341:17} 5489
	nop.i	0
	br.cond.sptk	.b1_12 ;;			//3: {341:17} 2977
// Block 6: epilog  Pred: 802     Succ: 7  -GO
// Freq 2.9e-02
 }
.b1_6: 
 {   .mii  //R-Addr: 0x4d90
	st4	[r38]=r11				//0: {320:6} 63
	mov	r43=r33					//0: {285:1} 5539
	add	r14=4,r63				//0: {321:6} 66
 }
 {   .mmi  //R-Addr: 0x4da0
	add	r16=8,r63 ;;				//0: {322:6} 69
	sub	r15=r17,r43				//1: {321:6} 64
	add	r17=11,r0 ;;				//1: {323:6} 71
 }
 {   .mii  //R-Addr: 0x4db0
	nop.m	0
	extr	r11=r15,2,30				//2: {321:6} 65
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x4dc0
	st4	[r14]=r11				//3: {321:6} 67
	ld4	r10=[r38]				//3: {322:6} 68
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x4dd0
	st4	[r16]=r10				//4: {322:6} 70
	nop.i	0
	br.cond.sptk	.b1_7 ;;			//4: {323:6} 2978
// Block 784: lexit  Pred: 3     Succ: 11 816  -GO
// Freq 6.0e+00
 }
.b1_784: 
 {   .mii  //R-Addr: 0x4de0
	cmp4.lt.unc	p0,p15=r50,r0			//0: {334:4} 2658
	cmp4.ne.unc	p14,p0=r14,r0			//0: {341:4} 90
	nop.i	0 ;;
 }
 {   .mbb  //R-Addr: 0x4df0
  (p15)cmp4.eq.unc	p13,p12=r50,r0			//1: {335:6} 2659
// Branch taken probability 0.10
  (p13)br.cond.dpnt	.b1_11				//1: {335:6} 5541
// Block 816:  Pred: 784     Succ: 10  -
// Freq 5.4e+00
	br.cond.sptk	.b1_10 ;;			//1: {341:4} 5540
// Block 792: recovery  Pred: 5     Succ: 802  -O
// Freq 2.2e+00
 }
.b1_792: 
 {   .mib  //R-Addr: 0x4e00
	ld4	r15=[r38]				//0: {313:4} 3375
	cmp4.lt.unc	p0,p15=r50,r0			//0: {334:4} 5474
	br.cond.sptk	.b1_802 ;;			//0: {334:4} 5556
// Block 793: recovery collapsed  Pred: 10     Succ: 13 825  -O
// Freq 1.9e+00
 }
.b1_793: 
 {   .mii  //R-Addr: 0x4e10
	ld4	r14=[r45]				//0: {341:4} 3380
  (p12)add	r50=-1,r50				//0: {336:6} 5475
	nop.i	0 ;;
 }
 {   .mbb  //R-Addr: 0x4e20
	cmp4.ne.unc	p14,p0=r14,r0			//1: {341:4} 3385
// Branch taken probability 0.05
  (p14)br.cond.dpnt	.b1_13				//1: {341:4} 5476
// Block 825:  Pred: 793     Succ: 12  -
// Freq 1.8e+00
	br.cond.sptk	.b1_12 ;;			//1: {341:4} 5557
// Block 794: recovery  Pred: 261     Succ: 805  -O
// Freq 5.8e-03
 }
.b1_794: 
 {   .mmi  //R-Addr: 0x4e30
	ld4	r18=[r8] ;;				//0: {521:18} 3486
	shladd	r24=r18,2,r63				//1: {521:18} 3490
	nop.i	0 ;;
 }
 {   .mib  //R-Addr: 0x4e40
	ld4.s	r20=[r24]				//2: {521:18} 3497
	nop.i	0
	br.cond.sptk	.b1_805 ;;			//2: {521:18} 5558
// Block 795: ltail recovery  Pred: 805     Succ: 3  -O
// Freq 5.8e-03
 }
.b1_795: 
 {   .mmi  //R-Addr: 0x4e50
	ld4	r20=[r24] ;;				//0: {521:18} 3493
	nop.m	0
	extr	r67=r20,2,30 ;;				//1: {521:18} 3500
 }
 {   .mib  //R-Addr: 0x4e60
	shladd	r66=r67,2,r33				//2: {522:18} 5477
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {522:18} 5559
// Block 796: ltail recovery  Pred: 495     Succ: 3  -O
// Freq 5.8e-03
 }
.b1_796: 
 {   .mmi  //R-Addr: 0x4e70
	ld2	r2=[r26] ;;				//0: {565:18} 3284
	nop.m	0
	sxt2	r30=r2 ;;				//1: {565:18} 3290
 }
 {   .mib  //R-Addr: 0x4e80
	shladd	r37=r27,1,r30				//2: {565:18} 5478
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {565:18} 5560
// Block 797: ltail recovery  Pred: 488     Succ: 3  -O
// Freq 5.8e-03
 }
.b1_797: 
 {   .mmi  //R-Addr: 0x4e90
	ld2	r18=[r11] ;;				//0: {557:18} 3268
	nop.m	0
	sxt2	r16=r18 ;;				//1: {557:18} 3273
 }
 {   .mib  //R-Addr: 0x4ea0
	shladd	r37=r14,1,r16				//2: {557:18} 5479
	nop.i	0
	br.cond.sptk.many	.b1_3 ;;		//2: {557:18} 5561
// Block 798: recovery  Pred: 383     Succ: 799 826  -O
// Freq 5.2e-02
 }
.b1_798: 
 {   .mmi  //R-Addr: 0x4eb0
	ld1	r19=[r16] ;;				//0: {734:20} 4074
	shladd	r10=r19,2,r20				//1: {734:20} 4078
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x4ec0
	ld4.s	r37=[r10] ;;				//2: {734:20} 4085
	cmp4.ge.unc	p12,p0=r37,r0			//3: {737:20} 5480
// Branch taken probability 0.05
	chk.s	r37,.b1_799				//3: {734:20} 5481
// Block 826:  Pred: 798     Succ: 812  -O
// Freq 5.0e-02
 }
 {   .mib  //R-Addr: 0x4ed0
	nop.m	0
	nop.i	0
	br.cond.sptk	.b1_812 ;;			//3: {734:20} 5562
// Block 799: recovery  Pred: 798 813     Succ: 812  -O
// Freq 5.2e-02
 }
.b1_799: 
 {   .mmi  //R-Addr: 0x4ee0
	ld4	r37=[r10] ;;				//0: {734:20} 4081
	cmp4.ge.unc	p12,p0=r37,r0			//1: {737:20} 4088
	nop.i	0
 }
 {   .mib  //R-Addr: 0x4ef0
	nop.m	0
	nop.i	0
	br.cond.sptk	.b1_812 ;;			//1: {737:20} 5563
// Block 800: recovery  Pred: 340     Succ: 801 827  -O
// Freq 5.2e-02
 }
.b1_800: 
 {   .mmi  //R-Addr: 0x4f00
	ld1	r15=[r24] ;;				//0: {751:19} 3815
	shladd	r16=r15,2,r27				//1: {751:19} 3819
	nop.i	0 ;;
 }
 {   .mmi  //R-Addr: 0x4f10
	ld4.s	r37=[r16] ;;				//2: {751:19} 3826
	cmp4.ge.unc	p10,p0=r37,r0			//3: {754:19} 5482
// Branch taken probability 0.05
	chk.s	r37,.b1_801				//3: {751:19} 5483
// Block 827:  Pred: 800     Succ: 814  -O
// Freq 5.0e-02
 }
 {   .mib  //R-Addr: 0x4f20
	nop.m	0
	nop.i	0
	br.cond.sptk	.b1_814 ;;			//3: {751:19} 5564
// Block 801: recovery  Pred: 800 815     Succ: 814  -O
// Freq 5.2e-02
 }
.b1_801: 
 {   .mmi  //R-Addr: 0x4f30
	ld4	r37=[r16] ;;				//0: {751:19} 3822
	cmp4.ge.unc	p10,p0=r37,r0			//1: {754:19} 3829
	nop.i	0
 }
 {   .mib  //R-Addr: 0x4f40
	nop.m	0
	nop.i	0
	br.cond.sptk	.b1_814 ;;			//1: {754:19} 5565
 }
.LN1:
.LNCX3$_Z9INTERPRETIPI3GKITH5:
	.section	.IA_64.unwind_info,	"a", "progbits"
	.align 8
__udt_CX3$_Z9INTERPRETIPI3GKITH5??unw:
	data8 0x1300000000004				// length: 32 bytes
							// flags: 0x3000
							// version: 1
	string "\x60\x2d"				//R3: prologue size 45
	string "\xe0\x04\x02"				//P7: mem_stack_f t/off 0x4 size 32
	string "\xe6\x00"				//P7: pfs_when t/off 0x0
	string "\xb1\x22"				//P3: pfs_gr r34
	string "\xe4\x08"				//P7: rp_when t/off 0x8
	string "\xb0\xa3"				//P3: rp_gr r35
	string "\x61\xf3\x19"				//R3: body size 3315
	string "\x81"					//B1: label_state 1
	string "\xc0\x03"				//B2: epilog time 3 ecount 0
	string "\x61\xbf\x03"				//R3: body size 447
	string "\xa1"					//B1: copy_state 1
	string "\xc0\x00"				//B2: epilog time 0 ecount 0
	string "\x00\x00\x00\x00\x00\x00\x00"
	data8 196609
	.section .IA_64.unwind, "ao", "unwind"
	data4 @segrel(CX3$_Z9INTERPRETIPI3GKITH5??unw#)
	data4 @segrel(CX3$_Z9INTERPRETIPI3GKITH5??unw#+0x4f50)
	data4 @segrel(__udt_CX3$_Z9INTERPRETIPI3GKITH5??unw)
	.section .data1, "wa", "progbits"
	.align 16
$$1$$TPKT$1_0:
	data4.ua $$1$1_0$TAG$1 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$2 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$3 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$4 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$5 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$6 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$7 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$8 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$9 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$a - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$b - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$c - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$d - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$e - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$f - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$10 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$11 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$12 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$13 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$14 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$15 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$16 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$17 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$18 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$19 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$1a - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$1b - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$1c - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$1d - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$1e - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$1f - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$20 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$21 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$22 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$23 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$24 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$25 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$26 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$27 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$28 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$29 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$2a - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$2b - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$2c - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$2d - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$2e - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$2f - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$30 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$31 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$32 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$33 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$34 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$35 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$36 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$37 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$38 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$39 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$3a - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$3b - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$3c - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$3d - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$3e - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$3f - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$40 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$41 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$42 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$43 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$44 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$45 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$46 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$47 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$48 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$49 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$4a - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$4b - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$4c - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$4d - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$4e - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$4f - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$50 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$51 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$52 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$53 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$54 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$55 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$56 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$57 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$58 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$59 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$5a - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$5b - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$5c - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$5d - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$5e - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$5f - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$60 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$61 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$62 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$63 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$64 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$65 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$66 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$67 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$68 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$69 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$6a - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$6b - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$6c - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$6d - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$6e - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$6f - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$70 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$71 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$72 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$73 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$74 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$75 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$76 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$77 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$78 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$79 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$7a - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$7b - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$7c - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$7d - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$7e - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$7f - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$80 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$81 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$82 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$83 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$84 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$85 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$86 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$87 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$88 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$89 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$8a - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$8b - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$8c - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$8d - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$8e - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$8f - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$90 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$91 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$92 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$93 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$94 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$95 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$96 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$97 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$98 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$99 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$9a - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$9b - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$9c - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$9d - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$9e - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$9f - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$a0 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$a1 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$a2 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$a3 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$a4 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$a5 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$a6 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$a7 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$a8 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$a9 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$aa - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$ab - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$ac - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$ad - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$ae - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$af - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$b0 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$b1 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$b2 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$b3 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$b4 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$b5 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$b6 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$b7 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$b8 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$b9 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$ba - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$bb - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$bc - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$bd - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$be - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$bf - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$c0 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$c1 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$c2 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$c3 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$c4 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$c5 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$c6 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$c7 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$c8 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$c9 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$ca - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$cb - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$cc - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$cd - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$ce - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$cf - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$d0 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$d1 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$d2 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$d3 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$d4 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$d5 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$d6 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$d7 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$d8 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$d9 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$da - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$db - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$dc - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$dd - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$de - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$DEFAULT - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$e0 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$e1 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$e2 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$e3 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$e4 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$e5 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$e6 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$e7 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$e8 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$e9 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$ea - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$eb - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$ec - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$ed - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$ee - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$ef - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$f0 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$f1 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$f2 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$f3 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$f4 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$f5 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$f6 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$f7 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$f8 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$f9 - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$fa - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$fb - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$fc - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$fd - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$fe - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	data4.ua $$1$1_0$TAG$ff - $_1$CX3$_Z9INTERPRETIPI3GKITH5$TAG$GLOB	// p32
	.section .text, "xa", "progbits"
// -- End CX3$_Z9INTERPRETIPI3GKITH5
	.endp CX3$_Z9INTERPRETIPI3GKITH5#
	.section WATCHADDR, "wa", "progbits"
	.align 4
	.global WATCHADDR#
WATCHADDR:
	.type	WATCHADDR#,@object
	.size	WATCHADDR#,4
	data4.ua 0	// u32
	.section WATCHVAL, "wa", "progbits"
	.align 4
	.global WATCHVAL#
WATCHVAL:
	.type	WATCHVAL#,@object
	.size	WATCHVAL#,4
	data4.ua 0	// s32
	.type	TRACING#,@object
	.global TRACING#
	.type	TALLYV#,@object
	.global TALLYV#
	.type	TALLYLIM#,@object
	.global TALLYLIM#
	.type	ELF$TFRADR#,@function
	.global ELF$TFRADR#
	.weak ELF$TFRADR#
ELF$TFRADR == CX3$_Z9INTERPRETIPI3GKITH5#
	.type	CX3$_Z9TIMESTAMPPI14QIUMC#,@function
	.global CX3$_Z9TIMESTAMPPI14QIUMC#
	.type	CX3$_Z5TRACEIIII3N3TDT9#,@function
	.global CX3$_Z5TRACEIIII3N3TDT9#
	.type	CX3$_Z5DOFLTIII0UP9NMT#,@function
	.global CX3$_Z5DOFLTIII0UP9NMT#
	.type	CX3$_Z5DOSYSII23C78UM#,@function
	.global CX3$_Z5DOSYSII23C78UM#
// -- Begin DWARF2 SEGMENT .debug_info
	.section .debug_info, "", "progbits"
.debug_info_seg:
	.align 1
	.msb
// -- Begin DWARF2 SEGMENT .debug_abbrev
	.section .debug_abbrev, "", "progbits"
.debug_abbrev_seg:
	.align 1
	.msb
	.section .text
.LNDBG_TXe:
// End

Command Line
------- ----

CXX/LIST/MACHINE_CODE/NOOBJECT/DEFINE="forVmsItanium" CINTERP.C

These macros are in effect at the start of the compilation.
----- ------ --- -- ------ -- --- ----- -- --- ------------

 __CRTL_VER=80300000 forVmsItanium=1 __DECFIX_CXXC_BUGS9857=1 __ia64__=1
 __ia64=1 __VMS_VER=80300022 __VMS_VERSION="V8.3    " __vms_version="V8.3    "
 __G_FLOAT=0 __D_FLOAT=0 __vms=1 __VMS=1 __INITIAL_POINTER_SIZE=0
 __BIASED_FLT_ROUNDS=2 _IEEE_FP=1 __32BITS=1 _LONGLONG=1 __IEEE_FLOAT=1
 __MODEL_ANSI=1 __STD_ANSI=1 __IMPLICIT_INCLUDE_ENABLED=1 __STDNEW=1
 __X_FLOAT=1 __PRAGMA_ENVIRONMENT=1 __DECCXX_VER=70290018 __DECCXX=1
 __EDG_VERSION__=304 __EDG__=1 __IMPLICIT_USING_STD=1 __RTTI=1 __EXCEPTIONS=1
 __GLOBAL_ARRAY_NEW=1 __BOOL_IS_A_RESERVED_WORD=1 _BOOL_EXISTS=1 __WCHAR_T=1
 _WCHAR_T=1 __cplusplus=199711L __TIME__="16:26:26" __DATE__="Apr 10 2013"
